/* Generated by Amaranth Yosys 0.40 (PyPI ver 0.40.0.0.post99, git sha1 a1bb0255d) */

(* top =  1  *)
(* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:268" *)
(* generator = "Amaranth" *)
module Controller(clk_100M, clk_50M, clk_25M, reset, ACLK, ARESETN, AWREADY, WREADY, BVALID, ARREADY, RDATA, RLAST, RVALID, slot_A_in, slot_B_in, slot_C_in, slot_D_in, AWADDR, AWLEN, AWSIZE, AWBURST
, AWPROT, AWUSER, AWVALID, WDATA, WSTRB, WLAST, WVALID, BREADY, ARADDR, ARLEN, ARSIZE, ARBURST, ARPROT, ARVALID, RREADY, buzzer, slot_A_out, slot_A_out_enable, slot_B_out, slot_B_out_enable, slot_C_out
, slot_C_out_enable, slot_D_out, slot_D_out_enable, pl_ps_interrupts, clk_200M);
  reg \$auto$verilog_backend.cc:2352:dump_module$1  = 0;
  wire \$1 ;
  wire [10:0] \$10 ;
  reg [3:0] \$100 ;
  reg [15:0] \$101 ;
  reg [3:0] \$102 ;
  reg \$103 ;
  reg \$104 ;
  reg \$105 ;
  reg \$106 ;
  reg [2:0] \$107 ;
  reg [1:0] \$108 ;
  reg [31:0] \$109 ;
  wire [10:0] \$11 ;
  reg [9:0] \$110 ;
  reg [9:0] \$111 ;
  reg [3:0] \$112 ;
  reg [3:0] \$113 ;
  reg [15:0] \$114 ;
  reg \$115 ;
  reg \$116 ;
  reg [15:0] \$117 ;
  reg [2:0] \$118 ;
  wire \$119 ;
  wire \$12 ;
  wire \$13 ;
  wire \$14 ;
  wire \$15 ;
  wire \$16 ;
  wire \$17 ;
  wire \$18 ;
  wire \$19 ;
  wire \$2 ;
  wire [18:0] \$20 ;
  wire [18:0] \$21 ;
  wire \$22 ;
  wire \$23 ;
  wire \$24 ;
  wire \$25 ;
  wire \$26 ;
  wire \$27 ;
  wire \$28 ;
  wire \$29 ;
  wire \$3 ;
  wire \$30 ;
  wire \$31 ;
  wire \$32 ;
  wire \$33 ;
  wire \$34 ;
  wire \$35 ;
  wire \$36 ;
  wire \$37 ;
  wire \$38 ;
  wire \$39 ;
  wire [10:0] \$4 ;
  wire \$40 ;
  wire \$41 ;
  wire \$42 ;
  wire \$43 ;
  wire [10:0] \$44 ;
  wire [10:0] \$45 ;
  wire \$46 ;
  wire [10:0] \$47 ;
  wire [4:0] \$48 ;
  wire \$49 ;
  wire [10:0] \$5 ;
  wire [10:0] \$50 ;
  wire \$51 ;
  wire \$52 ;
  wire \$53 ;
  wire \$54 ;
  wire \$55 ;
  wire \$56 ;
  wire \$57 ;
  wire \$58 ;
  wire \$59 ;
  wire [10:0] \$6 ;
  wire [10:0] \$60 ;
  wire [4:0] \$61 ;
  wire \$62 ;
  wire \$63 ;
  wire [32:0] \$64 ;
  wire [2:0] \$65 ;
  wire \$66 ;
  wire [10:0] \$67 ;
  wire [10:0] \$68 ;
  wire \$69 ;
  wire [94:0] \$7 ;
  wire \$70 ;
  wire [10:0] \$71 ;
  wire [4:0] \$72 ;
  wire \$73 ;
  wire \$74 ;
  wire [32:0] \$75 ;
  wire [3:0] \$76 ;
  wire \$77 ;
  wire \$78 ;
  wire \$79 ;
  wire [94:0] \$8 ;
  wire [16:0] \$80 ;
  wire \$81 ;
  wire \$82 ;
  wire \$83 ;
  wire \$84 ;
  reg \$85 ;
  reg \$86 ;
  reg [63:0] \$87 ;
  reg \$88 ;
  reg \$89 ;
  wire [10:0] \$9 ;
  reg \$90 ;
  reg \$91 ;
  reg \$92 ;
  reg \$93 ;
  reg [1:0] \$94 ;
  reg [2:0] \$95 ;
  reg [31:0] \$96 ;
  reg [9:0] \$97 ;
  reg [9:0] \$98 ;
  reg [3:0] \$99 ;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 AXI_controller_master CLK" *)
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:57" *)
  input ACLK;
  wire ACLK;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 AXI_controller_master ARADDR" *)
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:93" *)
  output [31:0] ARADDR;
  reg [31:0] ARADDR = 32'd0;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 AXI_controller_master ARBURST" *)
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:96" *)
  output [1:0] ARBURST;
  wire [1:0] ARBURST;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 AXI_controller_master RST" *)
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:58" *)
  input ARESETN;
  wire ARESETN;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 AXI_controller_master ARLEN" *)
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:94" *)
  output [3:0] ARLEN;
  reg [3:0] ARLEN = 4'h0;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 AXI_controller_master ARPROT" *)
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:99" *)
  output [2:0] ARPROT;
  wire [2:0] ARPROT;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 AXI_controller_master ARREADY" *)
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:104" *)
  input ARREADY;
  wire ARREADY;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 AXI_controller_master ARSIZE" *)
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:95" *)
  output [2:0] ARSIZE;
  wire [2:0] ARSIZE;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 AXI_controller_master ARVALID" *)
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:103" *)
  output ARVALID;
  reg ARVALID = 1'h0;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 AXI_controller_master AWADDR" *)
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:62" *)
  output [31:0] AWADDR;
  reg [31:0] AWADDR = 32'd0;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 AXI_controller_master ARBURST" *)
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:96" *)
  output [1:0] AWBURST;
  wire [1:0] AWBURST;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 AXI_controller_master AWLEN" *)
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:63" *)
  output [3:0] AWLEN;
  reg [3:0] AWLEN = 4'h0;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 AXI_controller_master ARPROT" *)
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:99" *)
  output [2:0] AWPROT;
  wire [2:0] AWPROT;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 AXI_controller_master AWREADY" *)
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:73" *)
  input AWREADY;
  wire AWREADY;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 AXI_controller_master ARSIZE" *)
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:95" *)
  output [2:0] AWSIZE;
  wire [2:0] AWSIZE;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:71" *)
  output [-1:0] AWUSER;
  wire [-1:0] AWUSER;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 AXI_controller_master AWVALID" *)
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:72" *)
  output AWVALID;
  reg AWVALID = 1'h0;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 AXI_controller_master BREADY" *)
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:89" *)
  output BREADY;
  reg BREADY = 1'h0;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 AXI_controller_master BVALID" *)
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:88" *)
  input BVALID;
  wire BVALID;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 AXI_controller_master RDATA" *)
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:108" *)
  input [63:0] RDATA;
  wire [63:0] RDATA;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 AXI_controller_master RLAST" *)
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:110" *)
  input RLAST;
  wire RLAST;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 AXI_controller_master RREADY" *)
  (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME AXI_controller_master, CLK_DOMAIN controller_firmware_processing_system7_0_0_FCLK_CLK0, FREQ_HZ 100000000, PHASE 0.0, PROTOCOL AXI3, DATA_WIDTH 64, ID_WIDTH 0, ADDR_WIDTH 32, HAS_BURST 1, HAS_CACHE 0, HAS_LOCK 0, HAS_PROT 0, HAS_QOS 0, HAS_REGION 0, HAS_WSTRB 1, HAS_BRESP 0, HAS_RRESP 0, SUPPORTS_NARROW_BURST 0, MAX_BURST_LENGTH 16, NUM_READ_OUTSTANDING 1, NUM_WRITE_OUTSTANDING 1, READ_WRITE_MODE READ_WRITE" *)
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:113" *)
  output RREADY;
  reg RREADY = 1'h0;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 AXI_controller_master RVALID" *)
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:112" *)
  input RVALID;
  wire RVALID;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 AXI_controller_master WDATA" *)
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:77" *)
  output [63:0] WDATA;
  reg [63:0] WDATA;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 AXI_controller_master WLAST" *)
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:79" *)
  output WLAST;
  reg WLAST = 1'h0;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 AXI_controller_master WREADY" *)
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:82" *)
  input WREADY;
  wire WREADY;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 AXI_controller_master WSTRB" *)
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:78" *)
  output [7:0] WSTRB;
  wire [7:0] WSTRB;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 AXI_controller_master WVALID" *)
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:81" *)
  output WVALID;
  reg WVALID = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:475" *)
  reg axi_read_busy = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:510" *)
  reg axi_read_data_incremented = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:329" *)
  reg axi_transfer_busy = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:328" *)
  reg axi_transfer_start = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:474" *)
  reg axi_write_busy = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\interface_cards\\serial_interface.py:46" *)
  wire [15:0] bram_address;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:70" *)
  wire [15:0] \bram_address$123 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:30" *)
  wire [15:0] \bram_address$130 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:70" *)
  wire [15:0] \bram_address$131 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\global_timer.py:21" *)
  wire [15:0] \bram_address$138 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:70" *)
  wire [15:0] \bram_address$139 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:32" *)
  wire [15:0] \bram_address$146 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:70" *)
  wire [15:0] \bram_address$147 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:72" *)
  wire [31:0] bram_read_data;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\interface_cards\\serial_interface.py:48" *)
  wire [31:0] \bram_read_data$129 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:72" *)
  wire [31:0] \bram_read_data$136 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:32" *)
  wire [31:0] \bram_read_data$137 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:72" *)
  wire [31:0] \bram_read_data$144 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\global_timer.py:23" *)
  wire [31:0] \bram_read_data$145 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:72" *)
  wire [31:0] \bram_read_data$152 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:34" *)
  wire [31:0] \bram_read_data$153 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\interface_cards\\serial_interface.py:47" *)
  wire [31:0] bram_write_data;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:71" *)
  wire [31:0] \bram_write_data$125 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:31" *)
  wire [31:0] \bram_write_data$132 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:71" *)
  wire [31:0] \bram_write_data$133 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\global_timer.py:22" *)
  wire [31:0] \bram_write_data$140 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:71" *)
  wire [31:0] \bram_write_data$141 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:33" *)
  wire [31:0] \bram_write_data$148 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:71" *)
  wire [31:0] \bram_write_data$149 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\interface_cards\\serial_interface.py:49" *)
  wire bram_write_enable;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:73" *)
  wire \bram_write_enable$127 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:33" *)
  wire \bram_write_enable$134 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:73" *)
  wire \bram_write_enable$135 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\global_timer.py:24" *)
  wire \bram_write_enable$142 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:73" *)
  wire \bram_write_enable$143 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:35" *)
  wire \bram_write_enable$150 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:73" *)
  wire \bram_write_enable$151 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:169" *)
  wire busy;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:116" *)
  output buzzer;
  wire buzzer;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:273" *)
  input clk_100M;
  wire clk_100M;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:272" *)
  input clk_200M;
  wire clk_200M;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:275" *)
  input clk_25M;
  wire clk_25M;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:274" *)
  input clk_50M;
  wire clk_50M;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:466" *)
  reg [15:0] cycle_timer = 16'h0000;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:462" *)
  reg [15:0] cycle_timer_config = 16'hffff;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:63" *)
  reg [31:0] data_input = 32'd0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:63" *)
  reg [31:0] \data_input$200  = 32'd0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:63" *)
  reg [31:0] \data_input$214  = 32'd0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:63" *)
  reg [31:0] \data_input$228  = 32'd0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:161" *)
  reg [31:0] \data_input$242  = 32'd0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:174" *)
  wire [15:0] data_memory_address;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:175" *)
  reg [31:0] data_memory_read_data;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:176" *)
  wire [31:0] data_memory_write_data;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:177" *)
  wire data_memory_write_enable;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:162" *)
  wire [31:0] data_output;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:64" *)
  wire [31:0] \data_output$201 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:64" *)
  wire [31:0] \data_output$215 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:64" *)
  wire [31:0] \data_output$229 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:64" *)
  wire [31:0] \data_output$243 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:317" *)
  reg [9:0] data_read_axi_address;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:318" *)
  reg [63:0] data_read_axi_data;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:306" *)
  wire [9:0] data_read_dma_address;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:307" *)
  wire [31:0] data_read_dma_read_data;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:308" *)
  wire [31:0] data_read_dma_write_data;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:309" *)
  wire data_read_dma_write_en;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\memory.py:240" *)
  reg [9:0] data_read_port_axi__addr;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\memory.py:241" *)
  wire [31:0] data_read_port_axi__data;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\memory.py:240" *)
  reg [9:0] data_read_read_port_dma__addr;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\memory.py:241" *)
  wire [31:0] data_read_read_port_dma__data;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\memory.py:401" *)
  wire [9:0] data_read_write_port_dma__addr;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\memory.py:402" *)
  reg [31:0] data_read_write_port_dma__data;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\memory.py:400" *)
  reg data_read_write_port_dma__en;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:319" *)
  reg [9:0] data_write_axi_address;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:320" *)
  reg [63:0] data_write_axi_data;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:321" *)
  reg data_write_axi_enable;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:311" *)
  wire [9:0] data_write_dma_address;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:312" *)
  wire [31:0] data_write_dma_read_data;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:313" *)
  wire [31:0] data_write_dma_write_data;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:314" *)
  wire data_write_dma_write_en;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\memory.py:401" *)
  reg [9:0] data_write_port_axi__addr;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\memory.py:402" *)
  reg [31:0] data_write_port_axi__data;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\memory.py:400" *)
  reg data_write_port_axi__en;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\memory.py:240" *)
  reg [9:0] data_write_read_port_dma__addr;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\memory.py:241" *)
  wire [31:0] data_write_read_port_dma__data;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\memory.py:401" *)
  wire [9:0] data_write_write_port_dma__addr;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\memory.py:402" *)
  reg [31:0] data_write_write_port_dma__data;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\memory.py:400" *)
  reg data_write_write_port_dma__en;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:331" *)
  reg [7:0] debug_pins;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:467" *)
  reg [3:0] dma_instruction_block_select = 4'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:378" *)
  reg dma_memory_half = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:379" *)
  reg dma_memory_half_comb;
  (* src = "C:\\Program Files\\WindowsApps\\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\\lib\\contextlib.py:142" *)
  reg [2:0] fsm_state = 3'h0;
  (* src = "C:\\Program Files\\WindowsApps\\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\\lib\\contextlib.py:142" *)
  reg [1:0] \fsm_state$120  = 2'h0;
  (* src = "C:\\Program Files\\WindowsApps\\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\\lib\\contextlib.py:142" *)
  reg [2:0] \fsm_state$167  = 3'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:171" *)
  wire [15:0] instruction_memory_address;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:172" *)
  wire [63:0] instruction_memory_read_data;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:299" *)
  wire [7:0] instruction_read_address;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:300" *)
  wire [63:0] instruction_read_data;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\memory.py:240" *)
  wire [7:0] instruction_read_port__addr;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\memory.py:241" *)
  wire [63:0] instruction_read_port__data;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:301" *)
  wire [7:0] instruction_write_address;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:302" *)
  wire [63:0] instruction_write_data;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:303" *)
  wire instruction_write_en;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\memory.py:401" *)
  reg [7:0] instruction_write_port__addr;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\memory.py:402" *)
  reg [63:0] instruction_write_port__data;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\memory.py:400" *)
  reg instruction_write_port__en;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:506" *)
  reg [9:0] internal_axi_read_address = 10'h000;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:507" *)
  reg [63:0] internal_axi_read_data;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:508" *)
  reg internal_axi_read_valid = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:644" *)
  reg [9:0] internal_axi_write_address = 10'h000;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:645" *)
  reg [63:0] internal_axi_write_data;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:647" *)
  reg internal_axi_write_enable;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:646" *)
  reg internal_axi_write_ready = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:509" *)
  reg [63:0] last_axi_read_data = 64'h0000000000000000;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:133" *)
  output [15:0] pl_ps_interrupts;
  reg [15:0] pl_ps_interrupts = 16'h0000;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:501" *)
  wire read_addr_complete;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:59" *)
  reg [15:0] read_bram_address_input = 16'h0000;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:59" *)
  reg [15:0] \read_bram_address_input$192  = 16'h0000;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:59" *)
  reg [15:0] \read_bram_address_input$206  = 16'h0000;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:59" *)
  reg [15:0] \read_bram_address_input$220  = 16'h0000;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:157" *)
  reg [15:0] \read_bram_address_input$238  = 16'h0000;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:158" *)
  wire [15:0] read_bram_address_output;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:60" *)
  wire [15:0] \read_bram_address_output$193 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:60" *)
  wire [15:0] \read_bram_address_output$207 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:60" *)
  wire [15:0] \read_bram_address_output$221 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:60" *)
  wire [15:0] \read_bram_address_output$239 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:492" *)
  reg [9:0] read_bursts_remaining = 10'h000;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:65" *)
  reg read_complete_input = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:65" *)
  reg \read_complete_input$202  = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:65" *)
  reg \read_complete_input$216  = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:65" *)
  reg \read_complete_input$230  = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:163" *)
  reg \read_complete_input$244  = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:164" *)
  wire read_complete_output;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:66" *)
  wire \read_complete_output$203 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:66" *)
  wire \read_complete_output$217 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:66" *)
  wire \read_complete_output$231 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:66" *)
  wire \read_complete_output$245 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:494" *)
  reg [3:0] read_current_burst = 4'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:55" *)
  reg [7:0] read_node_address_input = 8'h00;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:55" *)
  reg [7:0] \read_node_address_input$196  = 8'h00;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:55" *)
  reg [7:0] \read_node_address_input$210  = 8'h00;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:55" *)
  reg [7:0] \read_node_address_input$224  = 8'h00;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:153" *)
  reg [7:0] \read_node_address_input$234  = 8'h00;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:154" *)
  wire [7:0] read_node_address_output;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:56" *)
  wire [7:0] \read_node_address_output$197 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:56" *)
  wire [7:0] \read_node_address_output$211 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:56" *)
  wire [7:0] \read_node_address_output$225 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:56" *)
  wire [7:0] \read_node_address_output$235 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:489" *)
  reg [2:0] read_stage = 3'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:53" *)
  input reset;
  wire reset;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\interface_cards\\serial_interface.py:39" *)
  wire [9:0] rs422_rx;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\interface_cards\\serial_interface.py:40" *)
  wire [9:0] rs422_tx;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:26" *)
  wire [5:0] rx;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:37" *)
  wire \rx$165 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\interface_cards\\serial_interface.py:18" *)
  wire [21:0] slotIn;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\interface_cards\\serial_interface.py:16" *)
  wire [21:0] slotOut;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\interface_cards\\serial_interface.py:17" *)
  wire [21:0] slotOutEnable;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:119" *)
  input [21:0] slot_A_in;
  wire [21:0] slot_A_in;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:120" *)
  output [21:0] slot_A_out;
  wire [21:0] slot_A_out;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:121" *)
  output [21:0] slot_A_out_enable;
  wire [21:0] slot_A_out_enable;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\interface_cards\\serial_interface.py:18" *)
  input [21:0] slot_B_in;
  wire [21:0] slot_B_in;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\interface_cards\\serial_interface.py:16" *)
  output [21:0] slot_B_out;
  wire [21:0] slot_B_out;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\interface_cards\\serial_interface.py:17" *)
  output [21:0] slot_B_out_enable;
  wire [21:0] slot_B_out_enable;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:125" *)
  input [21:0] slot_C_in;
  wire [21:0] slot_C_in;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:130" *)
  output [21:0] slot_C_out;
  wire [21:0] slot_C_out;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:130" *)
  output [21:0] slot_C_out_enable;
  wire [21:0] slot_C_out_enable;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:128" *)
  input [21:0] slot_D_in;
  wire [21:0] slot_D_in;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:130" *)
  output [21:0] slot_D_out;
  wire [21:0] slot_D_out;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:130" *)
  output [21:0] slot_D_out_enable;
  wire [21:0] slot_D_out_enable;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:168" *)
  reg start = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:459" *)
  wire [31:0] status;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:273" *)
  wire sync_100_clk;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:273" *)
  wire sync_100_rst;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:272" *)
  wire sync_200_clk;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:272" *)
  wire sync_200_rst;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:275" *)
  wire sync_25_clk;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:275" *)
  wire sync_25_rst;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:274" *)
  wire sync_50_clk;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:274" *)
  wire sync_50_rst;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:511" *)
  reg [63:0] timed_axi_read_data;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\global_timer.py:17" *)
  wire [7:0] timer_pulse;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\global_timer.py:19" *)
  wire trigger;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:28" *)
  wire \trigger$163 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:24" *)
  wire [5:0] tx;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:38" *)
  wire \tx$166 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:496" *)
  wire write_addr_complete;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:61" *)
  reg [15:0] write_bram_address_input = 16'h0000;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:61" *)
  reg [15:0] \write_bram_address_input$194  = 16'h0000;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:61" *)
  reg [15:0] \write_bram_address_input$208  = 16'h0000;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:61" *)
  reg [15:0] \write_bram_address_input$222  = 16'h0000;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:159" *)
  reg [15:0] \write_bram_address_input$240  = 16'h0000;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:160" *)
  wire [15:0] write_bram_address_output;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:62" *)
  wire [15:0] \write_bram_address_output$195 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:62" *)
  wire [15:0] \write_bram_address_output$209 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:62" *)
  wire [15:0] \write_bram_address_output$223 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:62" *)
  wire [15:0] \write_bram_address_output$241 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:491" *)
  reg [9:0] write_bursts_remaining = 10'h000;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:67" *)
  reg write_complete_input = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:67" *)
  reg \write_complete_input$204  = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:67" *)
  reg \write_complete_input$218  = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:67" *)
  reg \write_complete_input$232  = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:165" *)
  reg \write_complete_input$246  = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:166" *)
  wire write_complete_output;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:68" *)
  wire \write_complete_output$205 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:68" *)
  wire \write_complete_output$219 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:68" *)
  wire \write_complete_output$233 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:68" *)
  wire \write_complete_output$247 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:493" *)
  reg [3:0] write_current_burst = 4'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:497" *)
  wire write_data_complete;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:57" *)
  reg [7:0] write_node_address_input = 8'h00;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:57" *)
  reg [7:0] \write_node_address_input$198  = 8'h00;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:57" *)
  reg [7:0] \write_node_address_input$212  = 8'h00;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:57" *)
  reg [7:0] \write_node_address_input$226  = 8'h00;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:155" *)
  reg [7:0] \write_node_address_input$236  = 8'h00;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:156" *)
  wire [7:0] write_node_address_output;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:58" *)
  wire [7:0] \write_node_address_output$199 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:58" *)
  wire [7:0] \write_node_address_output$213 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:58" *)
  wire [7:0] \write_node_address_output$227 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:58" *)
  wire [7:0] \write_node_address_output$237 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:482" *)
  reg [1:0] write_stage = 2'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:279" *)
  reg [31:0] data_memory_read [1023:0];
  initial begin
    data_memory_read[0] = 32'd0;
    data_memory_read[1] = 32'd0;
    data_memory_read[2] = 32'd0;
    data_memory_read[3] = 32'd0;
    data_memory_read[4] = 32'd0;
    data_memory_read[5] = 32'd0;
    data_memory_read[6] = 32'd0;
    data_memory_read[7] = 32'd0;
    data_memory_read[8] = 32'd0;
    data_memory_read[9] = 32'd0;
    data_memory_read[10] = 32'd0;
    data_memory_read[11] = 32'd0;
    data_memory_read[12] = 32'd0;
    data_memory_read[13] = 32'd0;
    data_memory_read[14] = 32'd0;
    data_memory_read[15] = 32'd0;
    data_memory_read[16] = 32'd0;
    data_memory_read[17] = 32'd0;
    data_memory_read[18] = 32'd0;
    data_memory_read[19] = 32'd0;
    data_memory_read[20] = 32'd0;
    data_memory_read[21] = 32'd0;
    data_memory_read[22] = 32'd0;
    data_memory_read[23] = 32'd0;
    data_memory_read[24] = 32'd0;
    data_memory_read[25] = 32'd0;
    data_memory_read[26] = 32'd0;
    data_memory_read[27] = 32'd0;
    data_memory_read[28] = 32'd0;
    data_memory_read[29] = 32'd0;
    data_memory_read[30] = 32'd0;
    data_memory_read[31] = 32'd0;
    data_memory_read[32] = 32'd0;
    data_memory_read[33] = 32'd0;
    data_memory_read[34] = 32'd0;
    data_memory_read[35] = 32'd0;
    data_memory_read[36] = 32'd0;
    data_memory_read[37] = 32'd0;
    data_memory_read[38] = 32'd0;
    data_memory_read[39] = 32'd0;
    data_memory_read[40] = 32'd0;
    data_memory_read[41] = 32'd0;
    data_memory_read[42] = 32'd0;
    data_memory_read[43] = 32'd0;
    data_memory_read[44] = 32'd0;
    data_memory_read[45] = 32'd0;
    data_memory_read[46] = 32'd0;
    data_memory_read[47] = 32'd0;
    data_memory_read[48] = 32'd0;
    data_memory_read[49] = 32'd0;
    data_memory_read[50] = 32'd0;
    data_memory_read[51] = 32'd0;
    data_memory_read[52] = 32'd0;
    data_memory_read[53] = 32'd0;
    data_memory_read[54] = 32'd0;
    data_memory_read[55] = 32'd0;
    data_memory_read[56] = 32'd0;
    data_memory_read[57] = 32'd0;
    data_memory_read[58] = 32'd0;
    data_memory_read[59] = 32'd0;
    data_memory_read[60] = 32'd0;
    data_memory_read[61] = 32'd0;
    data_memory_read[62] = 32'd0;
    data_memory_read[63] = 32'd0;
    data_memory_read[64] = 32'd0;
    data_memory_read[65] = 32'd0;
    data_memory_read[66] = 32'd0;
    data_memory_read[67] = 32'd0;
    data_memory_read[68] = 32'd0;
    data_memory_read[69] = 32'd0;
    data_memory_read[70] = 32'd0;
    data_memory_read[71] = 32'd0;
    data_memory_read[72] = 32'd0;
    data_memory_read[73] = 32'd0;
    data_memory_read[74] = 32'd0;
    data_memory_read[75] = 32'd0;
    data_memory_read[76] = 32'd0;
    data_memory_read[77] = 32'd0;
    data_memory_read[78] = 32'd0;
    data_memory_read[79] = 32'd0;
    data_memory_read[80] = 32'd0;
    data_memory_read[81] = 32'd0;
    data_memory_read[82] = 32'd0;
    data_memory_read[83] = 32'd0;
    data_memory_read[84] = 32'd0;
    data_memory_read[85] = 32'd0;
    data_memory_read[86] = 32'd0;
    data_memory_read[87] = 32'd0;
    data_memory_read[88] = 32'd0;
    data_memory_read[89] = 32'd0;
    data_memory_read[90] = 32'd0;
    data_memory_read[91] = 32'd0;
    data_memory_read[92] = 32'd0;
    data_memory_read[93] = 32'd0;
    data_memory_read[94] = 32'd0;
    data_memory_read[95] = 32'd0;
    data_memory_read[96] = 32'd0;
    data_memory_read[97] = 32'd0;
    data_memory_read[98] = 32'd0;
    data_memory_read[99] = 32'd0;
    data_memory_read[100] = 32'd0;
    data_memory_read[101] = 32'd0;
    data_memory_read[102] = 32'd0;
    data_memory_read[103] = 32'd0;
    data_memory_read[104] = 32'd0;
    data_memory_read[105] = 32'd0;
    data_memory_read[106] = 32'd0;
    data_memory_read[107] = 32'd0;
    data_memory_read[108] = 32'd0;
    data_memory_read[109] = 32'd0;
    data_memory_read[110] = 32'd0;
    data_memory_read[111] = 32'd0;
    data_memory_read[112] = 32'd0;
    data_memory_read[113] = 32'd0;
    data_memory_read[114] = 32'd0;
    data_memory_read[115] = 32'd0;
    data_memory_read[116] = 32'd0;
    data_memory_read[117] = 32'd0;
    data_memory_read[118] = 32'd0;
    data_memory_read[119] = 32'd0;
    data_memory_read[120] = 32'd0;
    data_memory_read[121] = 32'd0;
    data_memory_read[122] = 32'd0;
    data_memory_read[123] = 32'd0;
    data_memory_read[124] = 32'd0;
    data_memory_read[125] = 32'd0;
    data_memory_read[126] = 32'd0;
    data_memory_read[127] = 32'd0;
    data_memory_read[128] = 32'd0;
    data_memory_read[129] = 32'd0;
    data_memory_read[130] = 32'd0;
    data_memory_read[131] = 32'd0;
    data_memory_read[132] = 32'd0;
    data_memory_read[133] = 32'd0;
    data_memory_read[134] = 32'd0;
    data_memory_read[135] = 32'd0;
    data_memory_read[136] = 32'd0;
    data_memory_read[137] = 32'd0;
    data_memory_read[138] = 32'd0;
    data_memory_read[139] = 32'd0;
    data_memory_read[140] = 32'd0;
    data_memory_read[141] = 32'd0;
    data_memory_read[142] = 32'd0;
    data_memory_read[143] = 32'd0;
    data_memory_read[144] = 32'd0;
    data_memory_read[145] = 32'd0;
    data_memory_read[146] = 32'd0;
    data_memory_read[147] = 32'd0;
    data_memory_read[148] = 32'd0;
    data_memory_read[149] = 32'd0;
    data_memory_read[150] = 32'd0;
    data_memory_read[151] = 32'd0;
    data_memory_read[152] = 32'd0;
    data_memory_read[153] = 32'd0;
    data_memory_read[154] = 32'd0;
    data_memory_read[155] = 32'd0;
    data_memory_read[156] = 32'd0;
    data_memory_read[157] = 32'd0;
    data_memory_read[158] = 32'd0;
    data_memory_read[159] = 32'd0;
    data_memory_read[160] = 32'd0;
    data_memory_read[161] = 32'd0;
    data_memory_read[162] = 32'd0;
    data_memory_read[163] = 32'd0;
    data_memory_read[164] = 32'd0;
    data_memory_read[165] = 32'd0;
    data_memory_read[166] = 32'd0;
    data_memory_read[167] = 32'd0;
    data_memory_read[168] = 32'd0;
    data_memory_read[169] = 32'd0;
    data_memory_read[170] = 32'd0;
    data_memory_read[171] = 32'd0;
    data_memory_read[172] = 32'd0;
    data_memory_read[173] = 32'd0;
    data_memory_read[174] = 32'd0;
    data_memory_read[175] = 32'd0;
    data_memory_read[176] = 32'd0;
    data_memory_read[177] = 32'd0;
    data_memory_read[178] = 32'd0;
    data_memory_read[179] = 32'd0;
    data_memory_read[180] = 32'd0;
    data_memory_read[181] = 32'd0;
    data_memory_read[182] = 32'd0;
    data_memory_read[183] = 32'd0;
    data_memory_read[184] = 32'd0;
    data_memory_read[185] = 32'd0;
    data_memory_read[186] = 32'd0;
    data_memory_read[187] = 32'd0;
    data_memory_read[188] = 32'd0;
    data_memory_read[189] = 32'd0;
    data_memory_read[190] = 32'd0;
    data_memory_read[191] = 32'd0;
    data_memory_read[192] = 32'd0;
    data_memory_read[193] = 32'd0;
    data_memory_read[194] = 32'd0;
    data_memory_read[195] = 32'd0;
    data_memory_read[196] = 32'd0;
    data_memory_read[197] = 32'd0;
    data_memory_read[198] = 32'd0;
    data_memory_read[199] = 32'd0;
    data_memory_read[200] = 32'd0;
    data_memory_read[201] = 32'd0;
    data_memory_read[202] = 32'd0;
    data_memory_read[203] = 32'd0;
    data_memory_read[204] = 32'd0;
    data_memory_read[205] = 32'd0;
    data_memory_read[206] = 32'd0;
    data_memory_read[207] = 32'd0;
    data_memory_read[208] = 32'd0;
    data_memory_read[209] = 32'd0;
    data_memory_read[210] = 32'd0;
    data_memory_read[211] = 32'd0;
    data_memory_read[212] = 32'd0;
    data_memory_read[213] = 32'd0;
    data_memory_read[214] = 32'd0;
    data_memory_read[215] = 32'd0;
    data_memory_read[216] = 32'd0;
    data_memory_read[217] = 32'd0;
    data_memory_read[218] = 32'd0;
    data_memory_read[219] = 32'd0;
    data_memory_read[220] = 32'd0;
    data_memory_read[221] = 32'd0;
    data_memory_read[222] = 32'd0;
    data_memory_read[223] = 32'd0;
    data_memory_read[224] = 32'd0;
    data_memory_read[225] = 32'd0;
    data_memory_read[226] = 32'd0;
    data_memory_read[227] = 32'd0;
    data_memory_read[228] = 32'd0;
    data_memory_read[229] = 32'd0;
    data_memory_read[230] = 32'd0;
    data_memory_read[231] = 32'd0;
    data_memory_read[232] = 32'd0;
    data_memory_read[233] = 32'd0;
    data_memory_read[234] = 32'd0;
    data_memory_read[235] = 32'd0;
    data_memory_read[236] = 32'd0;
    data_memory_read[237] = 32'd0;
    data_memory_read[238] = 32'd0;
    data_memory_read[239] = 32'd0;
    data_memory_read[240] = 32'd0;
    data_memory_read[241] = 32'd0;
    data_memory_read[242] = 32'd0;
    data_memory_read[243] = 32'd0;
    data_memory_read[244] = 32'd0;
    data_memory_read[245] = 32'd0;
    data_memory_read[246] = 32'd0;
    data_memory_read[247] = 32'd0;
    data_memory_read[248] = 32'd0;
    data_memory_read[249] = 32'd0;
    data_memory_read[250] = 32'd0;
    data_memory_read[251] = 32'd0;
    data_memory_read[252] = 32'd0;
    data_memory_read[253] = 32'd0;
    data_memory_read[254] = 32'd0;
    data_memory_read[255] = 32'd0;
    data_memory_read[256] = 32'd0;
    data_memory_read[257] = 32'd0;
    data_memory_read[258] = 32'd0;
    data_memory_read[259] = 32'd0;
    data_memory_read[260] = 32'd0;
    data_memory_read[261] = 32'd0;
    data_memory_read[262] = 32'd0;
    data_memory_read[263] = 32'd0;
    data_memory_read[264] = 32'd0;
    data_memory_read[265] = 32'd0;
    data_memory_read[266] = 32'd0;
    data_memory_read[267] = 32'd0;
    data_memory_read[268] = 32'd0;
    data_memory_read[269] = 32'd0;
    data_memory_read[270] = 32'd0;
    data_memory_read[271] = 32'd0;
    data_memory_read[272] = 32'd0;
    data_memory_read[273] = 32'd0;
    data_memory_read[274] = 32'd0;
    data_memory_read[275] = 32'd0;
    data_memory_read[276] = 32'd0;
    data_memory_read[277] = 32'd0;
    data_memory_read[278] = 32'd0;
    data_memory_read[279] = 32'd0;
    data_memory_read[280] = 32'd0;
    data_memory_read[281] = 32'd0;
    data_memory_read[282] = 32'd0;
    data_memory_read[283] = 32'd0;
    data_memory_read[284] = 32'd0;
    data_memory_read[285] = 32'd0;
    data_memory_read[286] = 32'd0;
    data_memory_read[287] = 32'd0;
    data_memory_read[288] = 32'd0;
    data_memory_read[289] = 32'd0;
    data_memory_read[290] = 32'd0;
    data_memory_read[291] = 32'd0;
    data_memory_read[292] = 32'd0;
    data_memory_read[293] = 32'd0;
    data_memory_read[294] = 32'd0;
    data_memory_read[295] = 32'd0;
    data_memory_read[296] = 32'd0;
    data_memory_read[297] = 32'd0;
    data_memory_read[298] = 32'd0;
    data_memory_read[299] = 32'd0;
    data_memory_read[300] = 32'd0;
    data_memory_read[301] = 32'd0;
    data_memory_read[302] = 32'd0;
    data_memory_read[303] = 32'd0;
    data_memory_read[304] = 32'd0;
    data_memory_read[305] = 32'd0;
    data_memory_read[306] = 32'd0;
    data_memory_read[307] = 32'd0;
    data_memory_read[308] = 32'd0;
    data_memory_read[309] = 32'd0;
    data_memory_read[310] = 32'd0;
    data_memory_read[311] = 32'd0;
    data_memory_read[312] = 32'd0;
    data_memory_read[313] = 32'd0;
    data_memory_read[314] = 32'd0;
    data_memory_read[315] = 32'd0;
    data_memory_read[316] = 32'd0;
    data_memory_read[317] = 32'd0;
    data_memory_read[318] = 32'd0;
    data_memory_read[319] = 32'd0;
    data_memory_read[320] = 32'd0;
    data_memory_read[321] = 32'd0;
    data_memory_read[322] = 32'd0;
    data_memory_read[323] = 32'd0;
    data_memory_read[324] = 32'd0;
    data_memory_read[325] = 32'd0;
    data_memory_read[326] = 32'd0;
    data_memory_read[327] = 32'd0;
    data_memory_read[328] = 32'd0;
    data_memory_read[329] = 32'd0;
    data_memory_read[330] = 32'd0;
    data_memory_read[331] = 32'd0;
    data_memory_read[332] = 32'd0;
    data_memory_read[333] = 32'd0;
    data_memory_read[334] = 32'd0;
    data_memory_read[335] = 32'd0;
    data_memory_read[336] = 32'd0;
    data_memory_read[337] = 32'd0;
    data_memory_read[338] = 32'd0;
    data_memory_read[339] = 32'd0;
    data_memory_read[340] = 32'd0;
    data_memory_read[341] = 32'd0;
    data_memory_read[342] = 32'd0;
    data_memory_read[343] = 32'd0;
    data_memory_read[344] = 32'd0;
    data_memory_read[345] = 32'd0;
    data_memory_read[346] = 32'd0;
    data_memory_read[347] = 32'd0;
    data_memory_read[348] = 32'd0;
    data_memory_read[349] = 32'd0;
    data_memory_read[350] = 32'd0;
    data_memory_read[351] = 32'd0;
    data_memory_read[352] = 32'd0;
    data_memory_read[353] = 32'd0;
    data_memory_read[354] = 32'd0;
    data_memory_read[355] = 32'd0;
    data_memory_read[356] = 32'd0;
    data_memory_read[357] = 32'd0;
    data_memory_read[358] = 32'd0;
    data_memory_read[359] = 32'd0;
    data_memory_read[360] = 32'd0;
    data_memory_read[361] = 32'd0;
    data_memory_read[362] = 32'd0;
    data_memory_read[363] = 32'd0;
    data_memory_read[364] = 32'd0;
    data_memory_read[365] = 32'd0;
    data_memory_read[366] = 32'd0;
    data_memory_read[367] = 32'd0;
    data_memory_read[368] = 32'd0;
    data_memory_read[369] = 32'd0;
    data_memory_read[370] = 32'd0;
    data_memory_read[371] = 32'd0;
    data_memory_read[372] = 32'd0;
    data_memory_read[373] = 32'd0;
    data_memory_read[374] = 32'd0;
    data_memory_read[375] = 32'd0;
    data_memory_read[376] = 32'd0;
    data_memory_read[377] = 32'd0;
    data_memory_read[378] = 32'd0;
    data_memory_read[379] = 32'd0;
    data_memory_read[380] = 32'd0;
    data_memory_read[381] = 32'd0;
    data_memory_read[382] = 32'd0;
    data_memory_read[383] = 32'd0;
    data_memory_read[384] = 32'd0;
    data_memory_read[385] = 32'd0;
    data_memory_read[386] = 32'd0;
    data_memory_read[387] = 32'd0;
    data_memory_read[388] = 32'd0;
    data_memory_read[389] = 32'd0;
    data_memory_read[390] = 32'd0;
    data_memory_read[391] = 32'd0;
    data_memory_read[392] = 32'd0;
    data_memory_read[393] = 32'd0;
    data_memory_read[394] = 32'd0;
    data_memory_read[395] = 32'd0;
    data_memory_read[396] = 32'd0;
    data_memory_read[397] = 32'd0;
    data_memory_read[398] = 32'd0;
    data_memory_read[399] = 32'd0;
    data_memory_read[400] = 32'd0;
    data_memory_read[401] = 32'd0;
    data_memory_read[402] = 32'd0;
    data_memory_read[403] = 32'd0;
    data_memory_read[404] = 32'd0;
    data_memory_read[405] = 32'd0;
    data_memory_read[406] = 32'd0;
    data_memory_read[407] = 32'd0;
    data_memory_read[408] = 32'd0;
    data_memory_read[409] = 32'd0;
    data_memory_read[410] = 32'd0;
    data_memory_read[411] = 32'd0;
    data_memory_read[412] = 32'd0;
    data_memory_read[413] = 32'd0;
    data_memory_read[414] = 32'd0;
    data_memory_read[415] = 32'd0;
    data_memory_read[416] = 32'd0;
    data_memory_read[417] = 32'd0;
    data_memory_read[418] = 32'd0;
    data_memory_read[419] = 32'd0;
    data_memory_read[420] = 32'd0;
    data_memory_read[421] = 32'd0;
    data_memory_read[422] = 32'd0;
    data_memory_read[423] = 32'd0;
    data_memory_read[424] = 32'd0;
    data_memory_read[425] = 32'd0;
    data_memory_read[426] = 32'd0;
    data_memory_read[427] = 32'd0;
    data_memory_read[428] = 32'd0;
    data_memory_read[429] = 32'd0;
    data_memory_read[430] = 32'd0;
    data_memory_read[431] = 32'd0;
    data_memory_read[432] = 32'd0;
    data_memory_read[433] = 32'd0;
    data_memory_read[434] = 32'd0;
    data_memory_read[435] = 32'd0;
    data_memory_read[436] = 32'd0;
    data_memory_read[437] = 32'd0;
    data_memory_read[438] = 32'd0;
    data_memory_read[439] = 32'd0;
    data_memory_read[440] = 32'd0;
    data_memory_read[441] = 32'd0;
    data_memory_read[442] = 32'd0;
    data_memory_read[443] = 32'd0;
    data_memory_read[444] = 32'd0;
    data_memory_read[445] = 32'd0;
    data_memory_read[446] = 32'd0;
    data_memory_read[447] = 32'd0;
    data_memory_read[448] = 32'd0;
    data_memory_read[449] = 32'd0;
    data_memory_read[450] = 32'd0;
    data_memory_read[451] = 32'd0;
    data_memory_read[452] = 32'd0;
    data_memory_read[453] = 32'd0;
    data_memory_read[454] = 32'd0;
    data_memory_read[455] = 32'd0;
    data_memory_read[456] = 32'd0;
    data_memory_read[457] = 32'd0;
    data_memory_read[458] = 32'd0;
    data_memory_read[459] = 32'd0;
    data_memory_read[460] = 32'd0;
    data_memory_read[461] = 32'd0;
    data_memory_read[462] = 32'd0;
    data_memory_read[463] = 32'd0;
    data_memory_read[464] = 32'd0;
    data_memory_read[465] = 32'd0;
    data_memory_read[466] = 32'd0;
    data_memory_read[467] = 32'd0;
    data_memory_read[468] = 32'd0;
    data_memory_read[469] = 32'd0;
    data_memory_read[470] = 32'd0;
    data_memory_read[471] = 32'd0;
    data_memory_read[472] = 32'd0;
    data_memory_read[473] = 32'd0;
    data_memory_read[474] = 32'd0;
    data_memory_read[475] = 32'd0;
    data_memory_read[476] = 32'd0;
    data_memory_read[477] = 32'd0;
    data_memory_read[478] = 32'd0;
    data_memory_read[479] = 32'd0;
    data_memory_read[480] = 32'd0;
    data_memory_read[481] = 32'd0;
    data_memory_read[482] = 32'd0;
    data_memory_read[483] = 32'd0;
    data_memory_read[484] = 32'd0;
    data_memory_read[485] = 32'd0;
    data_memory_read[486] = 32'd0;
    data_memory_read[487] = 32'd0;
    data_memory_read[488] = 32'd0;
    data_memory_read[489] = 32'd0;
    data_memory_read[490] = 32'd0;
    data_memory_read[491] = 32'd0;
    data_memory_read[492] = 32'd0;
    data_memory_read[493] = 32'd0;
    data_memory_read[494] = 32'd0;
    data_memory_read[495] = 32'd0;
    data_memory_read[496] = 32'd0;
    data_memory_read[497] = 32'd0;
    data_memory_read[498] = 32'd0;
    data_memory_read[499] = 32'd0;
    data_memory_read[500] = 32'd0;
    data_memory_read[501] = 32'd0;
    data_memory_read[502] = 32'd0;
    data_memory_read[503] = 32'd0;
    data_memory_read[504] = 32'd0;
    data_memory_read[505] = 32'd0;
    data_memory_read[506] = 32'd0;
    data_memory_read[507] = 32'd0;
    data_memory_read[508] = 32'd0;
    data_memory_read[509] = 32'd0;
    data_memory_read[510] = 32'd0;
    data_memory_read[511] = 32'd0;
    data_memory_read[512] = 32'd0;
    data_memory_read[513] = 32'd0;
    data_memory_read[514] = 32'd0;
    data_memory_read[515] = 32'd0;
    data_memory_read[516] = 32'd0;
    data_memory_read[517] = 32'd0;
    data_memory_read[518] = 32'd0;
    data_memory_read[519] = 32'd0;
    data_memory_read[520] = 32'd0;
    data_memory_read[521] = 32'd0;
    data_memory_read[522] = 32'd0;
    data_memory_read[523] = 32'd0;
    data_memory_read[524] = 32'd0;
    data_memory_read[525] = 32'd0;
    data_memory_read[526] = 32'd0;
    data_memory_read[527] = 32'd0;
    data_memory_read[528] = 32'd0;
    data_memory_read[529] = 32'd0;
    data_memory_read[530] = 32'd0;
    data_memory_read[531] = 32'd0;
    data_memory_read[532] = 32'd0;
    data_memory_read[533] = 32'd0;
    data_memory_read[534] = 32'd0;
    data_memory_read[535] = 32'd0;
    data_memory_read[536] = 32'd0;
    data_memory_read[537] = 32'd0;
    data_memory_read[538] = 32'd0;
    data_memory_read[539] = 32'd0;
    data_memory_read[540] = 32'd0;
    data_memory_read[541] = 32'd0;
    data_memory_read[542] = 32'd0;
    data_memory_read[543] = 32'd0;
    data_memory_read[544] = 32'd0;
    data_memory_read[545] = 32'd0;
    data_memory_read[546] = 32'd0;
    data_memory_read[547] = 32'd0;
    data_memory_read[548] = 32'd0;
    data_memory_read[549] = 32'd0;
    data_memory_read[550] = 32'd0;
    data_memory_read[551] = 32'd0;
    data_memory_read[552] = 32'd0;
    data_memory_read[553] = 32'd0;
    data_memory_read[554] = 32'd0;
    data_memory_read[555] = 32'd0;
    data_memory_read[556] = 32'd0;
    data_memory_read[557] = 32'd0;
    data_memory_read[558] = 32'd0;
    data_memory_read[559] = 32'd0;
    data_memory_read[560] = 32'd0;
    data_memory_read[561] = 32'd0;
    data_memory_read[562] = 32'd0;
    data_memory_read[563] = 32'd0;
    data_memory_read[564] = 32'd0;
    data_memory_read[565] = 32'd0;
    data_memory_read[566] = 32'd0;
    data_memory_read[567] = 32'd0;
    data_memory_read[568] = 32'd0;
    data_memory_read[569] = 32'd0;
    data_memory_read[570] = 32'd0;
    data_memory_read[571] = 32'd0;
    data_memory_read[572] = 32'd0;
    data_memory_read[573] = 32'd0;
    data_memory_read[574] = 32'd0;
    data_memory_read[575] = 32'd0;
    data_memory_read[576] = 32'd0;
    data_memory_read[577] = 32'd0;
    data_memory_read[578] = 32'd0;
    data_memory_read[579] = 32'd0;
    data_memory_read[580] = 32'd0;
    data_memory_read[581] = 32'd0;
    data_memory_read[582] = 32'd0;
    data_memory_read[583] = 32'd0;
    data_memory_read[584] = 32'd0;
    data_memory_read[585] = 32'd0;
    data_memory_read[586] = 32'd0;
    data_memory_read[587] = 32'd0;
    data_memory_read[588] = 32'd0;
    data_memory_read[589] = 32'd0;
    data_memory_read[590] = 32'd0;
    data_memory_read[591] = 32'd0;
    data_memory_read[592] = 32'd0;
    data_memory_read[593] = 32'd0;
    data_memory_read[594] = 32'd0;
    data_memory_read[595] = 32'd0;
    data_memory_read[596] = 32'd0;
    data_memory_read[597] = 32'd0;
    data_memory_read[598] = 32'd0;
    data_memory_read[599] = 32'd0;
    data_memory_read[600] = 32'd0;
    data_memory_read[601] = 32'd0;
    data_memory_read[602] = 32'd0;
    data_memory_read[603] = 32'd0;
    data_memory_read[604] = 32'd0;
    data_memory_read[605] = 32'd0;
    data_memory_read[606] = 32'd0;
    data_memory_read[607] = 32'd0;
    data_memory_read[608] = 32'd0;
    data_memory_read[609] = 32'd0;
    data_memory_read[610] = 32'd0;
    data_memory_read[611] = 32'd0;
    data_memory_read[612] = 32'd0;
    data_memory_read[613] = 32'd0;
    data_memory_read[614] = 32'd0;
    data_memory_read[615] = 32'd0;
    data_memory_read[616] = 32'd0;
    data_memory_read[617] = 32'd0;
    data_memory_read[618] = 32'd0;
    data_memory_read[619] = 32'd0;
    data_memory_read[620] = 32'd0;
    data_memory_read[621] = 32'd0;
    data_memory_read[622] = 32'd0;
    data_memory_read[623] = 32'd0;
    data_memory_read[624] = 32'd0;
    data_memory_read[625] = 32'd0;
    data_memory_read[626] = 32'd0;
    data_memory_read[627] = 32'd0;
    data_memory_read[628] = 32'd0;
    data_memory_read[629] = 32'd0;
    data_memory_read[630] = 32'd0;
    data_memory_read[631] = 32'd0;
    data_memory_read[632] = 32'd0;
    data_memory_read[633] = 32'd0;
    data_memory_read[634] = 32'd0;
    data_memory_read[635] = 32'd0;
    data_memory_read[636] = 32'd0;
    data_memory_read[637] = 32'd0;
    data_memory_read[638] = 32'd0;
    data_memory_read[639] = 32'd0;
    data_memory_read[640] = 32'd0;
    data_memory_read[641] = 32'd0;
    data_memory_read[642] = 32'd0;
    data_memory_read[643] = 32'd0;
    data_memory_read[644] = 32'd0;
    data_memory_read[645] = 32'd0;
    data_memory_read[646] = 32'd0;
    data_memory_read[647] = 32'd0;
    data_memory_read[648] = 32'd0;
    data_memory_read[649] = 32'd0;
    data_memory_read[650] = 32'd0;
    data_memory_read[651] = 32'd0;
    data_memory_read[652] = 32'd0;
    data_memory_read[653] = 32'd0;
    data_memory_read[654] = 32'd0;
    data_memory_read[655] = 32'd0;
    data_memory_read[656] = 32'd0;
    data_memory_read[657] = 32'd0;
    data_memory_read[658] = 32'd0;
    data_memory_read[659] = 32'd0;
    data_memory_read[660] = 32'd0;
    data_memory_read[661] = 32'd0;
    data_memory_read[662] = 32'd0;
    data_memory_read[663] = 32'd0;
    data_memory_read[664] = 32'd0;
    data_memory_read[665] = 32'd0;
    data_memory_read[666] = 32'd0;
    data_memory_read[667] = 32'd0;
    data_memory_read[668] = 32'd0;
    data_memory_read[669] = 32'd0;
    data_memory_read[670] = 32'd0;
    data_memory_read[671] = 32'd0;
    data_memory_read[672] = 32'd0;
    data_memory_read[673] = 32'd0;
    data_memory_read[674] = 32'd0;
    data_memory_read[675] = 32'd0;
    data_memory_read[676] = 32'd0;
    data_memory_read[677] = 32'd0;
    data_memory_read[678] = 32'd0;
    data_memory_read[679] = 32'd0;
    data_memory_read[680] = 32'd0;
    data_memory_read[681] = 32'd0;
    data_memory_read[682] = 32'd0;
    data_memory_read[683] = 32'd0;
    data_memory_read[684] = 32'd0;
    data_memory_read[685] = 32'd0;
    data_memory_read[686] = 32'd0;
    data_memory_read[687] = 32'd0;
    data_memory_read[688] = 32'd0;
    data_memory_read[689] = 32'd0;
    data_memory_read[690] = 32'd0;
    data_memory_read[691] = 32'd0;
    data_memory_read[692] = 32'd0;
    data_memory_read[693] = 32'd0;
    data_memory_read[694] = 32'd0;
    data_memory_read[695] = 32'd0;
    data_memory_read[696] = 32'd0;
    data_memory_read[697] = 32'd0;
    data_memory_read[698] = 32'd0;
    data_memory_read[699] = 32'd0;
    data_memory_read[700] = 32'd0;
    data_memory_read[701] = 32'd0;
    data_memory_read[702] = 32'd0;
    data_memory_read[703] = 32'd0;
    data_memory_read[704] = 32'd0;
    data_memory_read[705] = 32'd0;
    data_memory_read[706] = 32'd0;
    data_memory_read[707] = 32'd0;
    data_memory_read[708] = 32'd0;
    data_memory_read[709] = 32'd0;
    data_memory_read[710] = 32'd0;
    data_memory_read[711] = 32'd0;
    data_memory_read[712] = 32'd0;
    data_memory_read[713] = 32'd0;
    data_memory_read[714] = 32'd0;
    data_memory_read[715] = 32'd0;
    data_memory_read[716] = 32'd0;
    data_memory_read[717] = 32'd0;
    data_memory_read[718] = 32'd0;
    data_memory_read[719] = 32'd0;
    data_memory_read[720] = 32'd0;
    data_memory_read[721] = 32'd0;
    data_memory_read[722] = 32'd0;
    data_memory_read[723] = 32'd0;
    data_memory_read[724] = 32'd0;
    data_memory_read[725] = 32'd0;
    data_memory_read[726] = 32'd0;
    data_memory_read[727] = 32'd0;
    data_memory_read[728] = 32'd0;
    data_memory_read[729] = 32'd0;
    data_memory_read[730] = 32'd0;
    data_memory_read[731] = 32'd0;
    data_memory_read[732] = 32'd0;
    data_memory_read[733] = 32'd0;
    data_memory_read[734] = 32'd0;
    data_memory_read[735] = 32'd0;
    data_memory_read[736] = 32'd0;
    data_memory_read[737] = 32'd0;
    data_memory_read[738] = 32'd0;
    data_memory_read[739] = 32'd0;
    data_memory_read[740] = 32'd0;
    data_memory_read[741] = 32'd0;
    data_memory_read[742] = 32'd0;
    data_memory_read[743] = 32'd0;
    data_memory_read[744] = 32'd0;
    data_memory_read[745] = 32'd0;
    data_memory_read[746] = 32'd0;
    data_memory_read[747] = 32'd0;
    data_memory_read[748] = 32'd0;
    data_memory_read[749] = 32'd0;
    data_memory_read[750] = 32'd0;
    data_memory_read[751] = 32'd0;
    data_memory_read[752] = 32'd0;
    data_memory_read[753] = 32'd0;
    data_memory_read[754] = 32'd0;
    data_memory_read[755] = 32'd0;
    data_memory_read[756] = 32'd0;
    data_memory_read[757] = 32'd0;
    data_memory_read[758] = 32'd0;
    data_memory_read[759] = 32'd0;
    data_memory_read[760] = 32'd0;
    data_memory_read[761] = 32'd0;
    data_memory_read[762] = 32'd0;
    data_memory_read[763] = 32'd0;
    data_memory_read[764] = 32'd0;
    data_memory_read[765] = 32'd0;
    data_memory_read[766] = 32'd0;
    data_memory_read[767] = 32'd0;
    data_memory_read[768] = 32'd0;
    data_memory_read[769] = 32'd0;
    data_memory_read[770] = 32'd0;
    data_memory_read[771] = 32'd0;
    data_memory_read[772] = 32'd0;
    data_memory_read[773] = 32'd0;
    data_memory_read[774] = 32'd0;
    data_memory_read[775] = 32'd0;
    data_memory_read[776] = 32'd0;
    data_memory_read[777] = 32'd0;
    data_memory_read[778] = 32'd0;
    data_memory_read[779] = 32'd0;
    data_memory_read[780] = 32'd0;
    data_memory_read[781] = 32'd0;
    data_memory_read[782] = 32'd0;
    data_memory_read[783] = 32'd0;
    data_memory_read[784] = 32'd0;
    data_memory_read[785] = 32'd0;
    data_memory_read[786] = 32'd0;
    data_memory_read[787] = 32'd0;
    data_memory_read[788] = 32'd0;
    data_memory_read[789] = 32'd0;
    data_memory_read[790] = 32'd0;
    data_memory_read[791] = 32'd0;
    data_memory_read[792] = 32'd0;
    data_memory_read[793] = 32'd0;
    data_memory_read[794] = 32'd0;
    data_memory_read[795] = 32'd0;
    data_memory_read[796] = 32'd0;
    data_memory_read[797] = 32'd0;
    data_memory_read[798] = 32'd0;
    data_memory_read[799] = 32'd0;
    data_memory_read[800] = 32'd0;
    data_memory_read[801] = 32'd0;
    data_memory_read[802] = 32'd0;
    data_memory_read[803] = 32'd0;
    data_memory_read[804] = 32'd0;
    data_memory_read[805] = 32'd0;
    data_memory_read[806] = 32'd0;
    data_memory_read[807] = 32'd0;
    data_memory_read[808] = 32'd0;
    data_memory_read[809] = 32'd0;
    data_memory_read[810] = 32'd0;
    data_memory_read[811] = 32'd0;
    data_memory_read[812] = 32'd0;
    data_memory_read[813] = 32'd0;
    data_memory_read[814] = 32'd0;
    data_memory_read[815] = 32'd0;
    data_memory_read[816] = 32'd0;
    data_memory_read[817] = 32'd0;
    data_memory_read[818] = 32'd0;
    data_memory_read[819] = 32'd0;
    data_memory_read[820] = 32'd0;
    data_memory_read[821] = 32'd0;
    data_memory_read[822] = 32'd0;
    data_memory_read[823] = 32'd0;
    data_memory_read[824] = 32'd0;
    data_memory_read[825] = 32'd0;
    data_memory_read[826] = 32'd0;
    data_memory_read[827] = 32'd0;
    data_memory_read[828] = 32'd0;
    data_memory_read[829] = 32'd0;
    data_memory_read[830] = 32'd0;
    data_memory_read[831] = 32'd0;
    data_memory_read[832] = 32'd0;
    data_memory_read[833] = 32'd0;
    data_memory_read[834] = 32'd0;
    data_memory_read[835] = 32'd0;
    data_memory_read[836] = 32'd0;
    data_memory_read[837] = 32'd0;
    data_memory_read[838] = 32'd0;
    data_memory_read[839] = 32'd0;
    data_memory_read[840] = 32'd0;
    data_memory_read[841] = 32'd0;
    data_memory_read[842] = 32'd0;
    data_memory_read[843] = 32'd0;
    data_memory_read[844] = 32'd0;
    data_memory_read[845] = 32'd0;
    data_memory_read[846] = 32'd0;
    data_memory_read[847] = 32'd0;
    data_memory_read[848] = 32'd0;
    data_memory_read[849] = 32'd0;
    data_memory_read[850] = 32'd0;
    data_memory_read[851] = 32'd0;
    data_memory_read[852] = 32'd0;
    data_memory_read[853] = 32'd0;
    data_memory_read[854] = 32'd0;
    data_memory_read[855] = 32'd0;
    data_memory_read[856] = 32'd0;
    data_memory_read[857] = 32'd0;
    data_memory_read[858] = 32'd0;
    data_memory_read[859] = 32'd0;
    data_memory_read[860] = 32'd0;
    data_memory_read[861] = 32'd0;
    data_memory_read[862] = 32'd0;
    data_memory_read[863] = 32'd0;
    data_memory_read[864] = 32'd0;
    data_memory_read[865] = 32'd0;
    data_memory_read[866] = 32'd0;
    data_memory_read[867] = 32'd0;
    data_memory_read[868] = 32'd0;
    data_memory_read[869] = 32'd0;
    data_memory_read[870] = 32'd0;
    data_memory_read[871] = 32'd0;
    data_memory_read[872] = 32'd0;
    data_memory_read[873] = 32'd0;
    data_memory_read[874] = 32'd0;
    data_memory_read[875] = 32'd0;
    data_memory_read[876] = 32'd0;
    data_memory_read[877] = 32'd0;
    data_memory_read[878] = 32'd0;
    data_memory_read[879] = 32'd0;
    data_memory_read[880] = 32'd0;
    data_memory_read[881] = 32'd0;
    data_memory_read[882] = 32'd0;
    data_memory_read[883] = 32'd0;
    data_memory_read[884] = 32'd0;
    data_memory_read[885] = 32'd0;
    data_memory_read[886] = 32'd0;
    data_memory_read[887] = 32'd0;
    data_memory_read[888] = 32'd0;
    data_memory_read[889] = 32'd0;
    data_memory_read[890] = 32'd0;
    data_memory_read[891] = 32'd0;
    data_memory_read[892] = 32'd0;
    data_memory_read[893] = 32'd0;
    data_memory_read[894] = 32'd0;
    data_memory_read[895] = 32'd0;
    data_memory_read[896] = 32'd0;
    data_memory_read[897] = 32'd0;
    data_memory_read[898] = 32'd0;
    data_memory_read[899] = 32'd0;
    data_memory_read[900] = 32'd0;
    data_memory_read[901] = 32'd0;
    data_memory_read[902] = 32'd0;
    data_memory_read[903] = 32'd0;
    data_memory_read[904] = 32'd0;
    data_memory_read[905] = 32'd0;
    data_memory_read[906] = 32'd0;
    data_memory_read[907] = 32'd0;
    data_memory_read[908] = 32'd0;
    data_memory_read[909] = 32'd0;
    data_memory_read[910] = 32'd0;
    data_memory_read[911] = 32'd0;
    data_memory_read[912] = 32'd0;
    data_memory_read[913] = 32'd0;
    data_memory_read[914] = 32'd0;
    data_memory_read[915] = 32'd0;
    data_memory_read[916] = 32'd0;
    data_memory_read[917] = 32'd0;
    data_memory_read[918] = 32'd0;
    data_memory_read[919] = 32'd0;
    data_memory_read[920] = 32'd0;
    data_memory_read[921] = 32'd0;
    data_memory_read[922] = 32'd0;
    data_memory_read[923] = 32'd0;
    data_memory_read[924] = 32'd0;
    data_memory_read[925] = 32'd0;
    data_memory_read[926] = 32'd0;
    data_memory_read[927] = 32'd0;
    data_memory_read[928] = 32'd0;
    data_memory_read[929] = 32'd0;
    data_memory_read[930] = 32'd0;
    data_memory_read[931] = 32'd0;
    data_memory_read[932] = 32'd0;
    data_memory_read[933] = 32'd0;
    data_memory_read[934] = 32'd0;
    data_memory_read[935] = 32'd0;
    data_memory_read[936] = 32'd0;
    data_memory_read[937] = 32'd0;
    data_memory_read[938] = 32'd0;
    data_memory_read[939] = 32'd0;
    data_memory_read[940] = 32'd0;
    data_memory_read[941] = 32'd0;
    data_memory_read[942] = 32'd0;
    data_memory_read[943] = 32'd0;
    data_memory_read[944] = 32'd0;
    data_memory_read[945] = 32'd0;
    data_memory_read[946] = 32'd0;
    data_memory_read[947] = 32'd0;
    data_memory_read[948] = 32'd0;
    data_memory_read[949] = 32'd0;
    data_memory_read[950] = 32'd0;
    data_memory_read[951] = 32'd0;
    data_memory_read[952] = 32'd0;
    data_memory_read[953] = 32'd0;
    data_memory_read[954] = 32'd0;
    data_memory_read[955] = 32'd0;
    data_memory_read[956] = 32'd0;
    data_memory_read[957] = 32'd0;
    data_memory_read[958] = 32'd0;
    data_memory_read[959] = 32'd0;
    data_memory_read[960] = 32'd0;
    data_memory_read[961] = 32'd0;
    data_memory_read[962] = 32'd0;
    data_memory_read[963] = 32'd0;
    data_memory_read[964] = 32'd0;
    data_memory_read[965] = 32'd0;
    data_memory_read[966] = 32'd0;
    data_memory_read[967] = 32'd0;
    data_memory_read[968] = 32'd0;
    data_memory_read[969] = 32'd0;
    data_memory_read[970] = 32'd0;
    data_memory_read[971] = 32'd0;
    data_memory_read[972] = 32'd0;
    data_memory_read[973] = 32'd0;
    data_memory_read[974] = 32'd0;
    data_memory_read[975] = 32'd0;
    data_memory_read[976] = 32'd0;
    data_memory_read[977] = 32'd0;
    data_memory_read[978] = 32'd0;
    data_memory_read[979] = 32'd0;
    data_memory_read[980] = 32'd0;
    data_memory_read[981] = 32'd0;
    data_memory_read[982] = 32'd0;
    data_memory_read[983] = 32'd0;
    data_memory_read[984] = 32'd0;
    data_memory_read[985] = 32'd0;
    data_memory_read[986] = 32'd0;
    data_memory_read[987] = 32'd0;
    data_memory_read[988] = 32'd0;
    data_memory_read[989] = 32'd0;
    data_memory_read[990] = 32'd0;
    data_memory_read[991] = 32'd0;
    data_memory_read[992] = 32'd0;
    data_memory_read[993] = 32'd0;
    data_memory_read[994] = 32'd0;
    data_memory_read[995] = 32'd0;
    data_memory_read[996] = 32'd0;
    data_memory_read[997] = 32'd0;
    data_memory_read[998] = 32'd0;
    data_memory_read[999] = 32'd0;
    data_memory_read[1000] = 32'd0;
    data_memory_read[1001] = 32'd0;
    data_memory_read[1002] = 32'd0;
    data_memory_read[1003] = 32'd0;
    data_memory_read[1004] = 32'd0;
    data_memory_read[1005] = 32'd0;
    data_memory_read[1006] = 32'd0;
    data_memory_read[1007] = 32'd0;
    data_memory_read[1008] = 32'd0;
    data_memory_read[1009] = 32'd0;
    data_memory_read[1010] = 32'd0;
    data_memory_read[1011] = 32'd0;
    data_memory_read[1012] = 32'd0;
    data_memory_read[1013] = 32'd0;
    data_memory_read[1014] = 32'd0;
    data_memory_read[1015] = 32'd0;
    data_memory_read[1016] = 32'd0;
    data_memory_read[1017] = 32'd0;
    data_memory_read[1018] = 32'd0;
    data_memory_read[1019] = 32'd0;
    data_memory_read[1020] = 32'd0;
    data_memory_read[1021] = 32'd0;
    data_memory_read[1022] = 32'd0;
    data_memory_read[1023] = 32'd0;
  end
  always @(posedge clk_100M) begin
    if (data_read_write_port_dma__en)
      data_memory_read[data_read_read_port_dma__addr] <= data_read_write_port_dma__data;
  end
  reg [31:0] _0_;
  reg [31:0] _1_;
  always @(posedge clk_100M) begin
    _0_ <= data_memory_read[data_read_port_axi__addr];
    _1_ <= data_memory_read[data_read_read_port_dma__addr];
  end
  assign data_read_port_axi__data = _0_;
  assign data_read_dma_read_data = _1_;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:280" *)
  reg [31:0] data_memory_write [1023:0];
  initial begin
    data_memory_write[0] = 32'd0;
    data_memory_write[1] = 32'd0;
    data_memory_write[2] = 32'd0;
    data_memory_write[3] = 32'd0;
    data_memory_write[4] = 32'd0;
    data_memory_write[5] = 32'd0;
    data_memory_write[6] = 32'd0;
    data_memory_write[7] = 32'd0;
    data_memory_write[8] = 32'd0;
    data_memory_write[9] = 32'd0;
    data_memory_write[10] = 32'd0;
    data_memory_write[11] = 32'd0;
    data_memory_write[12] = 32'd0;
    data_memory_write[13] = 32'd0;
    data_memory_write[14] = 32'd0;
    data_memory_write[15] = 32'd0;
    data_memory_write[16] = 32'd0;
    data_memory_write[17] = 32'd0;
    data_memory_write[18] = 32'd0;
    data_memory_write[19] = 32'd0;
    data_memory_write[20] = 32'd0;
    data_memory_write[21] = 32'd0;
    data_memory_write[22] = 32'd0;
    data_memory_write[23] = 32'd0;
    data_memory_write[24] = 32'd0;
    data_memory_write[25] = 32'd0;
    data_memory_write[26] = 32'd0;
    data_memory_write[27] = 32'd0;
    data_memory_write[28] = 32'd0;
    data_memory_write[29] = 32'd0;
    data_memory_write[30] = 32'd0;
    data_memory_write[31] = 32'd0;
    data_memory_write[32] = 32'd0;
    data_memory_write[33] = 32'd0;
    data_memory_write[34] = 32'd0;
    data_memory_write[35] = 32'd0;
    data_memory_write[36] = 32'd0;
    data_memory_write[37] = 32'd0;
    data_memory_write[38] = 32'd0;
    data_memory_write[39] = 32'd0;
    data_memory_write[40] = 32'd0;
    data_memory_write[41] = 32'd0;
    data_memory_write[42] = 32'd0;
    data_memory_write[43] = 32'd0;
    data_memory_write[44] = 32'd0;
    data_memory_write[45] = 32'd0;
    data_memory_write[46] = 32'd0;
    data_memory_write[47] = 32'd0;
    data_memory_write[48] = 32'd0;
    data_memory_write[49] = 32'd0;
    data_memory_write[50] = 32'd0;
    data_memory_write[51] = 32'd0;
    data_memory_write[52] = 32'd0;
    data_memory_write[53] = 32'd0;
    data_memory_write[54] = 32'd0;
    data_memory_write[55] = 32'd0;
    data_memory_write[56] = 32'd0;
    data_memory_write[57] = 32'd0;
    data_memory_write[58] = 32'd0;
    data_memory_write[59] = 32'd0;
    data_memory_write[60] = 32'd0;
    data_memory_write[61] = 32'd0;
    data_memory_write[62] = 32'd0;
    data_memory_write[63] = 32'd0;
    data_memory_write[64] = 32'd0;
    data_memory_write[65] = 32'd0;
    data_memory_write[66] = 32'd0;
    data_memory_write[67] = 32'd0;
    data_memory_write[68] = 32'd0;
    data_memory_write[69] = 32'd0;
    data_memory_write[70] = 32'd0;
    data_memory_write[71] = 32'd0;
    data_memory_write[72] = 32'd0;
    data_memory_write[73] = 32'd0;
    data_memory_write[74] = 32'd0;
    data_memory_write[75] = 32'd0;
    data_memory_write[76] = 32'd0;
    data_memory_write[77] = 32'd0;
    data_memory_write[78] = 32'd0;
    data_memory_write[79] = 32'd0;
    data_memory_write[80] = 32'd0;
    data_memory_write[81] = 32'd0;
    data_memory_write[82] = 32'd0;
    data_memory_write[83] = 32'd0;
    data_memory_write[84] = 32'd0;
    data_memory_write[85] = 32'd0;
    data_memory_write[86] = 32'd0;
    data_memory_write[87] = 32'd0;
    data_memory_write[88] = 32'd0;
    data_memory_write[89] = 32'd0;
    data_memory_write[90] = 32'd0;
    data_memory_write[91] = 32'd0;
    data_memory_write[92] = 32'd0;
    data_memory_write[93] = 32'd0;
    data_memory_write[94] = 32'd0;
    data_memory_write[95] = 32'd0;
    data_memory_write[96] = 32'd0;
    data_memory_write[97] = 32'd0;
    data_memory_write[98] = 32'd0;
    data_memory_write[99] = 32'd0;
    data_memory_write[100] = 32'd0;
    data_memory_write[101] = 32'd0;
    data_memory_write[102] = 32'd0;
    data_memory_write[103] = 32'd0;
    data_memory_write[104] = 32'd0;
    data_memory_write[105] = 32'd0;
    data_memory_write[106] = 32'd0;
    data_memory_write[107] = 32'd0;
    data_memory_write[108] = 32'd0;
    data_memory_write[109] = 32'd0;
    data_memory_write[110] = 32'd0;
    data_memory_write[111] = 32'd0;
    data_memory_write[112] = 32'd0;
    data_memory_write[113] = 32'd0;
    data_memory_write[114] = 32'd0;
    data_memory_write[115] = 32'd0;
    data_memory_write[116] = 32'd0;
    data_memory_write[117] = 32'd0;
    data_memory_write[118] = 32'd0;
    data_memory_write[119] = 32'd0;
    data_memory_write[120] = 32'd0;
    data_memory_write[121] = 32'd0;
    data_memory_write[122] = 32'd0;
    data_memory_write[123] = 32'd0;
    data_memory_write[124] = 32'd0;
    data_memory_write[125] = 32'd0;
    data_memory_write[126] = 32'd0;
    data_memory_write[127] = 32'd0;
    data_memory_write[128] = 32'd0;
    data_memory_write[129] = 32'd0;
    data_memory_write[130] = 32'd0;
    data_memory_write[131] = 32'd0;
    data_memory_write[132] = 32'd0;
    data_memory_write[133] = 32'd0;
    data_memory_write[134] = 32'd0;
    data_memory_write[135] = 32'd0;
    data_memory_write[136] = 32'd0;
    data_memory_write[137] = 32'd0;
    data_memory_write[138] = 32'd0;
    data_memory_write[139] = 32'd0;
    data_memory_write[140] = 32'd0;
    data_memory_write[141] = 32'd0;
    data_memory_write[142] = 32'd0;
    data_memory_write[143] = 32'd0;
    data_memory_write[144] = 32'd0;
    data_memory_write[145] = 32'd0;
    data_memory_write[146] = 32'd0;
    data_memory_write[147] = 32'd0;
    data_memory_write[148] = 32'd0;
    data_memory_write[149] = 32'd0;
    data_memory_write[150] = 32'd0;
    data_memory_write[151] = 32'd0;
    data_memory_write[152] = 32'd0;
    data_memory_write[153] = 32'd0;
    data_memory_write[154] = 32'd0;
    data_memory_write[155] = 32'd0;
    data_memory_write[156] = 32'd0;
    data_memory_write[157] = 32'd0;
    data_memory_write[158] = 32'd0;
    data_memory_write[159] = 32'd0;
    data_memory_write[160] = 32'd0;
    data_memory_write[161] = 32'd0;
    data_memory_write[162] = 32'd0;
    data_memory_write[163] = 32'd0;
    data_memory_write[164] = 32'd0;
    data_memory_write[165] = 32'd0;
    data_memory_write[166] = 32'd0;
    data_memory_write[167] = 32'd0;
    data_memory_write[168] = 32'd0;
    data_memory_write[169] = 32'd0;
    data_memory_write[170] = 32'd0;
    data_memory_write[171] = 32'd0;
    data_memory_write[172] = 32'd0;
    data_memory_write[173] = 32'd0;
    data_memory_write[174] = 32'd0;
    data_memory_write[175] = 32'd0;
    data_memory_write[176] = 32'd0;
    data_memory_write[177] = 32'd0;
    data_memory_write[178] = 32'd0;
    data_memory_write[179] = 32'd0;
    data_memory_write[180] = 32'd0;
    data_memory_write[181] = 32'd0;
    data_memory_write[182] = 32'd0;
    data_memory_write[183] = 32'd0;
    data_memory_write[184] = 32'd0;
    data_memory_write[185] = 32'd0;
    data_memory_write[186] = 32'd0;
    data_memory_write[187] = 32'd0;
    data_memory_write[188] = 32'd0;
    data_memory_write[189] = 32'd0;
    data_memory_write[190] = 32'd0;
    data_memory_write[191] = 32'd0;
    data_memory_write[192] = 32'd0;
    data_memory_write[193] = 32'd0;
    data_memory_write[194] = 32'd0;
    data_memory_write[195] = 32'd0;
    data_memory_write[196] = 32'd0;
    data_memory_write[197] = 32'd0;
    data_memory_write[198] = 32'd0;
    data_memory_write[199] = 32'd0;
    data_memory_write[200] = 32'd0;
    data_memory_write[201] = 32'd0;
    data_memory_write[202] = 32'd0;
    data_memory_write[203] = 32'd0;
    data_memory_write[204] = 32'd0;
    data_memory_write[205] = 32'd0;
    data_memory_write[206] = 32'd0;
    data_memory_write[207] = 32'd0;
    data_memory_write[208] = 32'd0;
    data_memory_write[209] = 32'd0;
    data_memory_write[210] = 32'd0;
    data_memory_write[211] = 32'd0;
    data_memory_write[212] = 32'd0;
    data_memory_write[213] = 32'd0;
    data_memory_write[214] = 32'd0;
    data_memory_write[215] = 32'd0;
    data_memory_write[216] = 32'd0;
    data_memory_write[217] = 32'd0;
    data_memory_write[218] = 32'd0;
    data_memory_write[219] = 32'd0;
    data_memory_write[220] = 32'd0;
    data_memory_write[221] = 32'd0;
    data_memory_write[222] = 32'd0;
    data_memory_write[223] = 32'd0;
    data_memory_write[224] = 32'd0;
    data_memory_write[225] = 32'd0;
    data_memory_write[226] = 32'd0;
    data_memory_write[227] = 32'd0;
    data_memory_write[228] = 32'd0;
    data_memory_write[229] = 32'd0;
    data_memory_write[230] = 32'd0;
    data_memory_write[231] = 32'd0;
    data_memory_write[232] = 32'd0;
    data_memory_write[233] = 32'd0;
    data_memory_write[234] = 32'd0;
    data_memory_write[235] = 32'd0;
    data_memory_write[236] = 32'd0;
    data_memory_write[237] = 32'd0;
    data_memory_write[238] = 32'd0;
    data_memory_write[239] = 32'd0;
    data_memory_write[240] = 32'd0;
    data_memory_write[241] = 32'd0;
    data_memory_write[242] = 32'd0;
    data_memory_write[243] = 32'd0;
    data_memory_write[244] = 32'd0;
    data_memory_write[245] = 32'd0;
    data_memory_write[246] = 32'd0;
    data_memory_write[247] = 32'd0;
    data_memory_write[248] = 32'd0;
    data_memory_write[249] = 32'd0;
    data_memory_write[250] = 32'd0;
    data_memory_write[251] = 32'd0;
    data_memory_write[252] = 32'd0;
    data_memory_write[253] = 32'd0;
    data_memory_write[254] = 32'd0;
    data_memory_write[255] = 32'd0;
    data_memory_write[256] = 32'd0;
    data_memory_write[257] = 32'd0;
    data_memory_write[258] = 32'd0;
    data_memory_write[259] = 32'd0;
    data_memory_write[260] = 32'd0;
    data_memory_write[261] = 32'd0;
    data_memory_write[262] = 32'd0;
    data_memory_write[263] = 32'd0;
    data_memory_write[264] = 32'd0;
    data_memory_write[265] = 32'd0;
    data_memory_write[266] = 32'd0;
    data_memory_write[267] = 32'd0;
    data_memory_write[268] = 32'd0;
    data_memory_write[269] = 32'd0;
    data_memory_write[270] = 32'd0;
    data_memory_write[271] = 32'd0;
    data_memory_write[272] = 32'd0;
    data_memory_write[273] = 32'd0;
    data_memory_write[274] = 32'd0;
    data_memory_write[275] = 32'd0;
    data_memory_write[276] = 32'd0;
    data_memory_write[277] = 32'd0;
    data_memory_write[278] = 32'd0;
    data_memory_write[279] = 32'd0;
    data_memory_write[280] = 32'd0;
    data_memory_write[281] = 32'd0;
    data_memory_write[282] = 32'd0;
    data_memory_write[283] = 32'd0;
    data_memory_write[284] = 32'd0;
    data_memory_write[285] = 32'd0;
    data_memory_write[286] = 32'd0;
    data_memory_write[287] = 32'd0;
    data_memory_write[288] = 32'd0;
    data_memory_write[289] = 32'd0;
    data_memory_write[290] = 32'd0;
    data_memory_write[291] = 32'd0;
    data_memory_write[292] = 32'd0;
    data_memory_write[293] = 32'd0;
    data_memory_write[294] = 32'd0;
    data_memory_write[295] = 32'd0;
    data_memory_write[296] = 32'd0;
    data_memory_write[297] = 32'd0;
    data_memory_write[298] = 32'd0;
    data_memory_write[299] = 32'd0;
    data_memory_write[300] = 32'd0;
    data_memory_write[301] = 32'd0;
    data_memory_write[302] = 32'd0;
    data_memory_write[303] = 32'd0;
    data_memory_write[304] = 32'd0;
    data_memory_write[305] = 32'd0;
    data_memory_write[306] = 32'd0;
    data_memory_write[307] = 32'd0;
    data_memory_write[308] = 32'd0;
    data_memory_write[309] = 32'd0;
    data_memory_write[310] = 32'd0;
    data_memory_write[311] = 32'd0;
    data_memory_write[312] = 32'd0;
    data_memory_write[313] = 32'd0;
    data_memory_write[314] = 32'd0;
    data_memory_write[315] = 32'd0;
    data_memory_write[316] = 32'd0;
    data_memory_write[317] = 32'd0;
    data_memory_write[318] = 32'd0;
    data_memory_write[319] = 32'd0;
    data_memory_write[320] = 32'd0;
    data_memory_write[321] = 32'd0;
    data_memory_write[322] = 32'd0;
    data_memory_write[323] = 32'd0;
    data_memory_write[324] = 32'd0;
    data_memory_write[325] = 32'd0;
    data_memory_write[326] = 32'd0;
    data_memory_write[327] = 32'd0;
    data_memory_write[328] = 32'd0;
    data_memory_write[329] = 32'd0;
    data_memory_write[330] = 32'd0;
    data_memory_write[331] = 32'd0;
    data_memory_write[332] = 32'd0;
    data_memory_write[333] = 32'd0;
    data_memory_write[334] = 32'd0;
    data_memory_write[335] = 32'd0;
    data_memory_write[336] = 32'd0;
    data_memory_write[337] = 32'd0;
    data_memory_write[338] = 32'd0;
    data_memory_write[339] = 32'd0;
    data_memory_write[340] = 32'd0;
    data_memory_write[341] = 32'd0;
    data_memory_write[342] = 32'd0;
    data_memory_write[343] = 32'd0;
    data_memory_write[344] = 32'd0;
    data_memory_write[345] = 32'd0;
    data_memory_write[346] = 32'd0;
    data_memory_write[347] = 32'd0;
    data_memory_write[348] = 32'd0;
    data_memory_write[349] = 32'd0;
    data_memory_write[350] = 32'd0;
    data_memory_write[351] = 32'd0;
    data_memory_write[352] = 32'd0;
    data_memory_write[353] = 32'd0;
    data_memory_write[354] = 32'd0;
    data_memory_write[355] = 32'd0;
    data_memory_write[356] = 32'd0;
    data_memory_write[357] = 32'd0;
    data_memory_write[358] = 32'd0;
    data_memory_write[359] = 32'd0;
    data_memory_write[360] = 32'd0;
    data_memory_write[361] = 32'd0;
    data_memory_write[362] = 32'd0;
    data_memory_write[363] = 32'd0;
    data_memory_write[364] = 32'd0;
    data_memory_write[365] = 32'd0;
    data_memory_write[366] = 32'd0;
    data_memory_write[367] = 32'd0;
    data_memory_write[368] = 32'd0;
    data_memory_write[369] = 32'd0;
    data_memory_write[370] = 32'd0;
    data_memory_write[371] = 32'd0;
    data_memory_write[372] = 32'd0;
    data_memory_write[373] = 32'd0;
    data_memory_write[374] = 32'd0;
    data_memory_write[375] = 32'd0;
    data_memory_write[376] = 32'd0;
    data_memory_write[377] = 32'd0;
    data_memory_write[378] = 32'd0;
    data_memory_write[379] = 32'd0;
    data_memory_write[380] = 32'd0;
    data_memory_write[381] = 32'd0;
    data_memory_write[382] = 32'd0;
    data_memory_write[383] = 32'd0;
    data_memory_write[384] = 32'd0;
    data_memory_write[385] = 32'd0;
    data_memory_write[386] = 32'd0;
    data_memory_write[387] = 32'd0;
    data_memory_write[388] = 32'd0;
    data_memory_write[389] = 32'd0;
    data_memory_write[390] = 32'd0;
    data_memory_write[391] = 32'd0;
    data_memory_write[392] = 32'd0;
    data_memory_write[393] = 32'd0;
    data_memory_write[394] = 32'd0;
    data_memory_write[395] = 32'd0;
    data_memory_write[396] = 32'd0;
    data_memory_write[397] = 32'd0;
    data_memory_write[398] = 32'd0;
    data_memory_write[399] = 32'd0;
    data_memory_write[400] = 32'd0;
    data_memory_write[401] = 32'd0;
    data_memory_write[402] = 32'd0;
    data_memory_write[403] = 32'd0;
    data_memory_write[404] = 32'd0;
    data_memory_write[405] = 32'd0;
    data_memory_write[406] = 32'd0;
    data_memory_write[407] = 32'd0;
    data_memory_write[408] = 32'd0;
    data_memory_write[409] = 32'd0;
    data_memory_write[410] = 32'd0;
    data_memory_write[411] = 32'd0;
    data_memory_write[412] = 32'd0;
    data_memory_write[413] = 32'd0;
    data_memory_write[414] = 32'd0;
    data_memory_write[415] = 32'd0;
    data_memory_write[416] = 32'd0;
    data_memory_write[417] = 32'd0;
    data_memory_write[418] = 32'd0;
    data_memory_write[419] = 32'd0;
    data_memory_write[420] = 32'd0;
    data_memory_write[421] = 32'd0;
    data_memory_write[422] = 32'd0;
    data_memory_write[423] = 32'd0;
    data_memory_write[424] = 32'd0;
    data_memory_write[425] = 32'd0;
    data_memory_write[426] = 32'd0;
    data_memory_write[427] = 32'd0;
    data_memory_write[428] = 32'd0;
    data_memory_write[429] = 32'd0;
    data_memory_write[430] = 32'd0;
    data_memory_write[431] = 32'd0;
    data_memory_write[432] = 32'd0;
    data_memory_write[433] = 32'd0;
    data_memory_write[434] = 32'd0;
    data_memory_write[435] = 32'd0;
    data_memory_write[436] = 32'd0;
    data_memory_write[437] = 32'd0;
    data_memory_write[438] = 32'd0;
    data_memory_write[439] = 32'd0;
    data_memory_write[440] = 32'd0;
    data_memory_write[441] = 32'd0;
    data_memory_write[442] = 32'd0;
    data_memory_write[443] = 32'd0;
    data_memory_write[444] = 32'd0;
    data_memory_write[445] = 32'd0;
    data_memory_write[446] = 32'd0;
    data_memory_write[447] = 32'd0;
    data_memory_write[448] = 32'd0;
    data_memory_write[449] = 32'd0;
    data_memory_write[450] = 32'd0;
    data_memory_write[451] = 32'd0;
    data_memory_write[452] = 32'd0;
    data_memory_write[453] = 32'd0;
    data_memory_write[454] = 32'd0;
    data_memory_write[455] = 32'd0;
    data_memory_write[456] = 32'd0;
    data_memory_write[457] = 32'd0;
    data_memory_write[458] = 32'd0;
    data_memory_write[459] = 32'd0;
    data_memory_write[460] = 32'd0;
    data_memory_write[461] = 32'd0;
    data_memory_write[462] = 32'd0;
    data_memory_write[463] = 32'd0;
    data_memory_write[464] = 32'd0;
    data_memory_write[465] = 32'd0;
    data_memory_write[466] = 32'd0;
    data_memory_write[467] = 32'd0;
    data_memory_write[468] = 32'd0;
    data_memory_write[469] = 32'd0;
    data_memory_write[470] = 32'd0;
    data_memory_write[471] = 32'd0;
    data_memory_write[472] = 32'd0;
    data_memory_write[473] = 32'd0;
    data_memory_write[474] = 32'd0;
    data_memory_write[475] = 32'd0;
    data_memory_write[476] = 32'd0;
    data_memory_write[477] = 32'd0;
    data_memory_write[478] = 32'd0;
    data_memory_write[479] = 32'd0;
    data_memory_write[480] = 32'd0;
    data_memory_write[481] = 32'd0;
    data_memory_write[482] = 32'd0;
    data_memory_write[483] = 32'd0;
    data_memory_write[484] = 32'd0;
    data_memory_write[485] = 32'd0;
    data_memory_write[486] = 32'd0;
    data_memory_write[487] = 32'd0;
    data_memory_write[488] = 32'd0;
    data_memory_write[489] = 32'd0;
    data_memory_write[490] = 32'd0;
    data_memory_write[491] = 32'd0;
    data_memory_write[492] = 32'd0;
    data_memory_write[493] = 32'd0;
    data_memory_write[494] = 32'd0;
    data_memory_write[495] = 32'd0;
    data_memory_write[496] = 32'd0;
    data_memory_write[497] = 32'd0;
    data_memory_write[498] = 32'd0;
    data_memory_write[499] = 32'd0;
    data_memory_write[500] = 32'd0;
    data_memory_write[501] = 32'd0;
    data_memory_write[502] = 32'd0;
    data_memory_write[503] = 32'd0;
    data_memory_write[504] = 32'd0;
    data_memory_write[505] = 32'd0;
    data_memory_write[506] = 32'd0;
    data_memory_write[507] = 32'd0;
    data_memory_write[508] = 32'd0;
    data_memory_write[509] = 32'd0;
    data_memory_write[510] = 32'd0;
    data_memory_write[511] = 32'd0;
    data_memory_write[512] = 32'd0;
    data_memory_write[513] = 32'd0;
    data_memory_write[514] = 32'd0;
    data_memory_write[515] = 32'd0;
    data_memory_write[516] = 32'd0;
    data_memory_write[517] = 32'd0;
    data_memory_write[518] = 32'd0;
    data_memory_write[519] = 32'd0;
    data_memory_write[520] = 32'd0;
    data_memory_write[521] = 32'd0;
    data_memory_write[522] = 32'd0;
    data_memory_write[523] = 32'd0;
    data_memory_write[524] = 32'd0;
    data_memory_write[525] = 32'd0;
    data_memory_write[526] = 32'd0;
    data_memory_write[527] = 32'd0;
    data_memory_write[528] = 32'd0;
    data_memory_write[529] = 32'd0;
    data_memory_write[530] = 32'd0;
    data_memory_write[531] = 32'd0;
    data_memory_write[532] = 32'd0;
    data_memory_write[533] = 32'd0;
    data_memory_write[534] = 32'd0;
    data_memory_write[535] = 32'd0;
    data_memory_write[536] = 32'd0;
    data_memory_write[537] = 32'd0;
    data_memory_write[538] = 32'd0;
    data_memory_write[539] = 32'd0;
    data_memory_write[540] = 32'd0;
    data_memory_write[541] = 32'd0;
    data_memory_write[542] = 32'd0;
    data_memory_write[543] = 32'd0;
    data_memory_write[544] = 32'd0;
    data_memory_write[545] = 32'd0;
    data_memory_write[546] = 32'd0;
    data_memory_write[547] = 32'd0;
    data_memory_write[548] = 32'd0;
    data_memory_write[549] = 32'd0;
    data_memory_write[550] = 32'd0;
    data_memory_write[551] = 32'd0;
    data_memory_write[552] = 32'd0;
    data_memory_write[553] = 32'd0;
    data_memory_write[554] = 32'd0;
    data_memory_write[555] = 32'd0;
    data_memory_write[556] = 32'd0;
    data_memory_write[557] = 32'd0;
    data_memory_write[558] = 32'd0;
    data_memory_write[559] = 32'd0;
    data_memory_write[560] = 32'd0;
    data_memory_write[561] = 32'd0;
    data_memory_write[562] = 32'd0;
    data_memory_write[563] = 32'd0;
    data_memory_write[564] = 32'd0;
    data_memory_write[565] = 32'd0;
    data_memory_write[566] = 32'd0;
    data_memory_write[567] = 32'd0;
    data_memory_write[568] = 32'd0;
    data_memory_write[569] = 32'd0;
    data_memory_write[570] = 32'd0;
    data_memory_write[571] = 32'd0;
    data_memory_write[572] = 32'd0;
    data_memory_write[573] = 32'd0;
    data_memory_write[574] = 32'd0;
    data_memory_write[575] = 32'd0;
    data_memory_write[576] = 32'd0;
    data_memory_write[577] = 32'd0;
    data_memory_write[578] = 32'd0;
    data_memory_write[579] = 32'd0;
    data_memory_write[580] = 32'd0;
    data_memory_write[581] = 32'd0;
    data_memory_write[582] = 32'd0;
    data_memory_write[583] = 32'd0;
    data_memory_write[584] = 32'd0;
    data_memory_write[585] = 32'd0;
    data_memory_write[586] = 32'd0;
    data_memory_write[587] = 32'd0;
    data_memory_write[588] = 32'd0;
    data_memory_write[589] = 32'd0;
    data_memory_write[590] = 32'd0;
    data_memory_write[591] = 32'd0;
    data_memory_write[592] = 32'd0;
    data_memory_write[593] = 32'd0;
    data_memory_write[594] = 32'd0;
    data_memory_write[595] = 32'd0;
    data_memory_write[596] = 32'd0;
    data_memory_write[597] = 32'd0;
    data_memory_write[598] = 32'd0;
    data_memory_write[599] = 32'd0;
    data_memory_write[600] = 32'd0;
    data_memory_write[601] = 32'd0;
    data_memory_write[602] = 32'd0;
    data_memory_write[603] = 32'd0;
    data_memory_write[604] = 32'd0;
    data_memory_write[605] = 32'd0;
    data_memory_write[606] = 32'd0;
    data_memory_write[607] = 32'd0;
    data_memory_write[608] = 32'd0;
    data_memory_write[609] = 32'd0;
    data_memory_write[610] = 32'd0;
    data_memory_write[611] = 32'd0;
    data_memory_write[612] = 32'd0;
    data_memory_write[613] = 32'd0;
    data_memory_write[614] = 32'd0;
    data_memory_write[615] = 32'd0;
    data_memory_write[616] = 32'd0;
    data_memory_write[617] = 32'd0;
    data_memory_write[618] = 32'd0;
    data_memory_write[619] = 32'd0;
    data_memory_write[620] = 32'd0;
    data_memory_write[621] = 32'd0;
    data_memory_write[622] = 32'd0;
    data_memory_write[623] = 32'd0;
    data_memory_write[624] = 32'd0;
    data_memory_write[625] = 32'd0;
    data_memory_write[626] = 32'd0;
    data_memory_write[627] = 32'd0;
    data_memory_write[628] = 32'd0;
    data_memory_write[629] = 32'd0;
    data_memory_write[630] = 32'd0;
    data_memory_write[631] = 32'd0;
    data_memory_write[632] = 32'd0;
    data_memory_write[633] = 32'd0;
    data_memory_write[634] = 32'd0;
    data_memory_write[635] = 32'd0;
    data_memory_write[636] = 32'd0;
    data_memory_write[637] = 32'd0;
    data_memory_write[638] = 32'd0;
    data_memory_write[639] = 32'd0;
    data_memory_write[640] = 32'd0;
    data_memory_write[641] = 32'd0;
    data_memory_write[642] = 32'd0;
    data_memory_write[643] = 32'd0;
    data_memory_write[644] = 32'd0;
    data_memory_write[645] = 32'd0;
    data_memory_write[646] = 32'd0;
    data_memory_write[647] = 32'd0;
    data_memory_write[648] = 32'd0;
    data_memory_write[649] = 32'd0;
    data_memory_write[650] = 32'd0;
    data_memory_write[651] = 32'd0;
    data_memory_write[652] = 32'd0;
    data_memory_write[653] = 32'd0;
    data_memory_write[654] = 32'd0;
    data_memory_write[655] = 32'd0;
    data_memory_write[656] = 32'd0;
    data_memory_write[657] = 32'd0;
    data_memory_write[658] = 32'd0;
    data_memory_write[659] = 32'd0;
    data_memory_write[660] = 32'd0;
    data_memory_write[661] = 32'd0;
    data_memory_write[662] = 32'd0;
    data_memory_write[663] = 32'd0;
    data_memory_write[664] = 32'd0;
    data_memory_write[665] = 32'd0;
    data_memory_write[666] = 32'd0;
    data_memory_write[667] = 32'd0;
    data_memory_write[668] = 32'd0;
    data_memory_write[669] = 32'd0;
    data_memory_write[670] = 32'd0;
    data_memory_write[671] = 32'd0;
    data_memory_write[672] = 32'd0;
    data_memory_write[673] = 32'd0;
    data_memory_write[674] = 32'd0;
    data_memory_write[675] = 32'd0;
    data_memory_write[676] = 32'd0;
    data_memory_write[677] = 32'd0;
    data_memory_write[678] = 32'd0;
    data_memory_write[679] = 32'd0;
    data_memory_write[680] = 32'd0;
    data_memory_write[681] = 32'd0;
    data_memory_write[682] = 32'd0;
    data_memory_write[683] = 32'd0;
    data_memory_write[684] = 32'd0;
    data_memory_write[685] = 32'd0;
    data_memory_write[686] = 32'd0;
    data_memory_write[687] = 32'd0;
    data_memory_write[688] = 32'd0;
    data_memory_write[689] = 32'd0;
    data_memory_write[690] = 32'd0;
    data_memory_write[691] = 32'd0;
    data_memory_write[692] = 32'd0;
    data_memory_write[693] = 32'd0;
    data_memory_write[694] = 32'd0;
    data_memory_write[695] = 32'd0;
    data_memory_write[696] = 32'd0;
    data_memory_write[697] = 32'd0;
    data_memory_write[698] = 32'd0;
    data_memory_write[699] = 32'd0;
    data_memory_write[700] = 32'd0;
    data_memory_write[701] = 32'd0;
    data_memory_write[702] = 32'd0;
    data_memory_write[703] = 32'd0;
    data_memory_write[704] = 32'd0;
    data_memory_write[705] = 32'd0;
    data_memory_write[706] = 32'd0;
    data_memory_write[707] = 32'd0;
    data_memory_write[708] = 32'd0;
    data_memory_write[709] = 32'd0;
    data_memory_write[710] = 32'd0;
    data_memory_write[711] = 32'd0;
    data_memory_write[712] = 32'd0;
    data_memory_write[713] = 32'd0;
    data_memory_write[714] = 32'd0;
    data_memory_write[715] = 32'd0;
    data_memory_write[716] = 32'd0;
    data_memory_write[717] = 32'd0;
    data_memory_write[718] = 32'd0;
    data_memory_write[719] = 32'd0;
    data_memory_write[720] = 32'd0;
    data_memory_write[721] = 32'd0;
    data_memory_write[722] = 32'd0;
    data_memory_write[723] = 32'd0;
    data_memory_write[724] = 32'd0;
    data_memory_write[725] = 32'd0;
    data_memory_write[726] = 32'd0;
    data_memory_write[727] = 32'd0;
    data_memory_write[728] = 32'd0;
    data_memory_write[729] = 32'd0;
    data_memory_write[730] = 32'd0;
    data_memory_write[731] = 32'd0;
    data_memory_write[732] = 32'd0;
    data_memory_write[733] = 32'd0;
    data_memory_write[734] = 32'd0;
    data_memory_write[735] = 32'd0;
    data_memory_write[736] = 32'd0;
    data_memory_write[737] = 32'd0;
    data_memory_write[738] = 32'd0;
    data_memory_write[739] = 32'd0;
    data_memory_write[740] = 32'd0;
    data_memory_write[741] = 32'd0;
    data_memory_write[742] = 32'd0;
    data_memory_write[743] = 32'd0;
    data_memory_write[744] = 32'd0;
    data_memory_write[745] = 32'd0;
    data_memory_write[746] = 32'd0;
    data_memory_write[747] = 32'd0;
    data_memory_write[748] = 32'd0;
    data_memory_write[749] = 32'd0;
    data_memory_write[750] = 32'd0;
    data_memory_write[751] = 32'd0;
    data_memory_write[752] = 32'd0;
    data_memory_write[753] = 32'd0;
    data_memory_write[754] = 32'd0;
    data_memory_write[755] = 32'd0;
    data_memory_write[756] = 32'd0;
    data_memory_write[757] = 32'd0;
    data_memory_write[758] = 32'd0;
    data_memory_write[759] = 32'd0;
    data_memory_write[760] = 32'd0;
    data_memory_write[761] = 32'd0;
    data_memory_write[762] = 32'd0;
    data_memory_write[763] = 32'd0;
    data_memory_write[764] = 32'd0;
    data_memory_write[765] = 32'd0;
    data_memory_write[766] = 32'd0;
    data_memory_write[767] = 32'd0;
    data_memory_write[768] = 32'd0;
    data_memory_write[769] = 32'd0;
    data_memory_write[770] = 32'd0;
    data_memory_write[771] = 32'd0;
    data_memory_write[772] = 32'd0;
    data_memory_write[773] = 32'd0;
    data_memory_write[774] = 32'd0;
    data_memory_write[775] = 32'd0;
    data_memory_write[776] = 32'd0;
    data_memory_write[777] = 32'd0;
    data_memory_write[778] = 32'd0;
    data_memory_write[779] = 32'd0;
    data_memory_write[780] = 32'd0;
    data_memory_write[781] = 32'd0;
    data_memory_write[782] = 32'd0;
    data_memory_write[783] = 32'd0;
    data_memory_write[784] = 32'd0;
    data_memory_write[785] = 32'd0;
    data_memory_write[786] = 32'd0;
    data_memory_write[787] = 32'd0;
    data_memory_write[788] = 32'd0;
    data_memory_write[789] = 32'd0;
    data_memory_write[790] = 32'd0;
    data_memory_write[791] = 32'd0;
    data_memory_write[792] = 32'd0;
    data_memory_write[793] = 32'd0;
    data_memory_write[794] = 32'd0;
    data_memory_write[795] = 32'd0;
    data_memory_write[796] = 32'd0;
    data_memory_write[797] = 32'd0;
    data_memory_write[798] = 32'd0;
    data_memory_write[799] = 32'd0;
    data_memory_write[800] = 32'd0;
    data_memory_write[801] = 32'd0;
    data_memory_write[802] = 32'd0;
    data_memory_write[803] = 32'd0;
    data_memory_write[804] = 32'd0;
    data_memory_write[805] = 32'd0;
    data_memory_write[806] = 32'd0;
    data_memory_write[807] = 32'd0;
    data_memory_write[808] = 32'd0;
    data_memory_write[809] = 32'd0;
    data_memory_write[810] = 32'd0;
    data_memory_write[811] = 32'd0;
    data_memory_write[812] = 32'd0;
    data_memory_write[813] = 32'd0;
    data_memory_write[814] = 32'd0;
    data_memory_write[815] = 32'd0;
    data_memory_write[816] = 32'd0;
    data_memory_write[817] = 32'd0;
    data_memory_write[818] = 32'd0;
    data_memory_write[819] = 32'd0;
    data_memory_write[820] = 32'd0;
    data_memory_write[821] = 32'd0;
    data_memory_write[822] = 32'd0;
    data_memory_write[823] = 32'd0;
    data_memory_write[824] = 32'd0;
    data_memory_write[825] = 32'd0;
    data_memory_write[826] = 32'd0;
    data_memory_write[827] = 32'd0;
    data_memory_write[828] = 32'd0;
    data_memory_write[829] = 32'd0;
    data_memory_write[830] = 32'd0;
    data_memory_write[831] = 32'd0;
    data_memory_write[832] = 32'd0;
    data_memory_write[833] = 32'd0;
    data_memory_write[834] = 32'd0;
    data_memory_write[835] = 32'd0;
    data_memory_write[836] = 32'd0;
    data_memory_write[837] = 32'd0;
    data_memory_write[838] = 32'd0;
    data_memory_write[839] = 32'd0;
    data_memory_write[840] = 32'd0;
    data_memory_write[841] = 32'd0;
    data_memory_write[842] = 32'd0;
    data_memory_write[843] = 32'd0;
    data_memory_write[844] = 32'd0;
    data_memory_write[845] = 32'd0;
    data_memory_write[846] = 32'd0;
    data_memory_write[847] = 32'd0;
    data_memory_write[848] = 32'd0;
    data_memory_write[849] = 32'd0;
    data_memory_write[850] = 32'd0;
    data_memory_write[851] = 32'd0;
    data_memory_write[852] = 32'd0;
    data_memory_write[853] = 32'd0;
    data_memory_write[854] = 32'd0;
    data_memory_write[855] = 32'd0;
    data_memory_write[856] = 32'd0;
    data_memory_write[857] = 32'd0;
    data_memory_write[858] = 32'd0;
    data_memory_write[859] = 32'd0;
    data_memory_write[860] = 32'd0;
    data_memory_write[861] = 32'd0;
    data_memory_write[862] = 32'd0;
    data_memory_write[863] = 32'd0;
    data_memory_write[864] = 32'd0;
    data_memory_write[865] = 32'd0;
    data_memory_write[866] = 32'd0;
    data_memory_write[867] = 32'd0;
    data_memory_write[868] = 32'd0;
    data_memory_write[869] = 32'd0;
    data_memory_write[870] = 32'd0;
    data_memory_write[871] = 32'd0;
    data_memory_write[872] = 32'd0;
    data_memory_write[873] = 32'd0;
    data_memory_write[874] = 32'd0;
    data_memory_write[875] = 32'd0;
    data_memory_write[876] = 32'd0;
    data_memory_write[877] = 32'd0;
    data_memory_write[878] = 32'd0;
    data_memory_write[879] = 32'd0;
    data_memory_write[880] = 32'd0;
    data_memory_write[881] = 32'd0;
    data_memory_write[882] = 32'd0;
    data_memory_write[883] = 32'd0;
    data_memory_write[884] = 32'd0;
    data_memory_write[885] = 32'd0;
    data_memory_write[886] = 32'd0;
    data_memory_write[887] = 32'd0;
    data_memory_write[888] = 32'd0;
    data_memory_write[889] = 32'd0;
    data_memory_write[890] = 32'd0;
    data_memory_write[891] = 32'd0;
    data_memory_write[892] = 32'd0;
    data_memory_write[893] = 32'd0;
    data_memory_write[894] = 32'd0;
    data_memory_write[895] = 32'd0;
    data_memory_write[896] = 32'd0;
    data_memory_write[897] = 32'd0;
    data_memory_write[898] = 32'd0;
    data_memory_write[899] = 32'd0;
    data_memory_write[900] = 32'd0;
    data_memory_write[901] = 32'd0;
    data_memory_write[902] = 32'd0;
    data_memory_write[903] = 32'd0;
    data_memory_write[904] = 32'd0;
    data_memory_write[905] = 32'd0;
    data_memory_write[906] = 32'd0;
    data_memory_write[907] = 32'd0;
    data_memory_write[908] = 32'd0;
    data_memory_write[909] = 32'd0;
    data_memory_write[910] = 32'd0;
    data_memory_write[911] = 32'd0;
    data_memory_write[912] = 32'd0;
    data_memory_write[913] = 32'd0;
    data_memory_write[914] = 32'd0;
    data_memory_write[915] = 32'd0;
    data_memory_write[916] = 32'd0;
    data_memory_write[917] = 32'd0;
    data_memory_write[918] = 32'd0;
    data_memory_write[919] = 32'd0;
    data_memory_write[920] = 32'd0;
    data_memory_write[921] = 32'd0;
    data_memory_write[922] = 32'd0;
    data_memory_write[923] = 32'd0;
    data_memory_write[924] = 32'd0;
    data_memory_write[925] = 32'd0;
    data_memory_write[926] = 32'd0;
    data_memory_write[927] = 32'd0;
    data_memory_write[928] = 32'd0;
    data_memory_write[929] = 32'd0;
    data_memory_write[930] = 32'd0;
    data_memory_write[931] = 32'd0;
    data_memory_write[932] = 32'd0;
    data_memory_write[933] = 32'd0;
    data_memory_write[934] = 32'd0;
    data_memory_write[935] = 32'd0;
    data_memory_write[936] = 32'd0;
    data_memory_write[937] = 32'd0;
    data_memory_write[938] = 32'd0;
    data_memory_write[939] = 32'd0;
    data_memory_write[940] = 32'd0;
    data_memory_write[941] = 32'd0;
    data_memory_write[942] = 32'd0;
    data_memory_write[943] = 32'd0;
    data_memory_write[944] = 32'd0;
    data_memory_write[945] = 32'd0;
    data_memory_write[946] = 32'd0;
    data_memory_write[947] = 32'd0;
    data_memory_write[948] = 32'd0;
    data_memory_write[949] = 32'd0;
    data_memory_write[950] = 32'd0;
    data_memory_write[951] = 32'd0;
    data_memory_write[952] = 32'd0;
    data_memory_write[953] = 32'd0;
    data_memory_write[954] = 32'd0;
    data_memory_write[955] = 32'd0;
    data_memory_write[956] = 32'd0;
    data_memory_write[957] = 32'd0;
    data_memory_write[958] = 32'd0;
    data_memory_write[959] = 32'd0;
    data_memory_write[960] = 32'd0;
    data_memory_write[961] = 32'd0;
    data_memory_write[962] = 32'd0;
    data_memory_write[963] = 32'd0;
    data_memory_write[964] = 32'd0;
    data_memory_write[965] = 32'd0;
    data_memory_write[966] = 32'd0;
    data_memory_write[967] = 32'd0;
    data_memory_write[968] = 32'd0;
    data_memory_write[969] = 32'd0;
    data_memory_write[970] = 32'd0;
    data_memory_write[971] = 32'd0;
    data_memory_write[972] = 32'd0;
    data_memory_write[973] = 32'd0;
    data_memory_write[974] = 32'd0;
    data_memory_write[975] = 32'd0;
    data_memory_write[976] = 32'd0;
    data_memory_write[977] = 32'd0;
    data_memory_write[978] = 32'd0;
    data_memory_write[979] = 32'd0;
    data_memory_write[980] = 32'd0;
    data_memory_write[981] = 32'd0;
    data_memory_write[982] = 32'd0;
    data_memory_write[983] = 32'd0;
    data_memory_write[984] = 32'd0;
    data_memory_write[985] = 32'd0;
    data_memory_write[986] = 32'd0;
    data_memory_write[987] = 32'd0;
    data_memory_write[988] = 32'd0;
    data_memory_write[989] = 32'd0;
    data_memory_write[990] = 32'd0;
    data_memory_write[991] = 32'd0;
    data_memory_write[992] = 32'd0;
    data_memory_write[993] = 32'd0;
    data_memory_write[994] = 32'd0;
    data_memory_write[995] = 32'd0;
    data_memory_write[996] = 32'd0;
    data_memory_write[997] = 32'd0;
    data_memory_write[998] = 32'd0;
    data_memory_write[999] = 32'd0;
    data_memory_write[1000] = 32'd0;
    data_memory_write[1001] = 32'd0;
    data_memory_write[1002] = 32'd0;
    data_memory_write[1003] = 32'd0;
    data_memory_write[1004] = 32'd0;
    data_memory_write[1005] = 32'd0;
    data_memory_write[1006] = 32'd0;
    data_memory_write[1007] = 32'd0;
    data_memory_write[1008] = 32'd0;
    data_memory_write[1009] = 32'd0;
    data_memory_write[1010] = 32'd0;
    data_memory_write[1011] = 32'd0;
    data_memory_write[1012] = 32'd0;
    data_memory_write[1013] = 32'd0;
    data_memory_write[1014] = 32'd0;
    data_memory_write[1015] = 32'd0;
    data_memory_write[1016] = 32'd0;
    data_memory_write[1017] = 32'd0;
    data_memory_write[1018] = 32'd0;
    data_memory_write[1019] = 32'd0;
    data_memory_write[1020] = 32'd0;
    data_memory_write[1021] = 32'd0;
    data_memory_write[1022] = 32'd0;
    data_memory_write[1023] = 32'd0;
  end
  always @(posedge clk_100M) begin
    if (data_write_write_port_dma__en)
      data_memory_write[data_write_read_port_dma__addr] <= data_write_write_port_dma__data;
  end
  always @(posedge clk_100M) begin
    if (data_write_port_axi__en)
      data_memory_write[data_write_port_axi__addr] <= data_write_port_axi__data;
  end
  reg [31:0] _2_;
  always @(posedge clk_100M) begin
    _2_ <= data_memory_write[data_write_read_port_dma__addr];
  end
  assign data_write_dma_read_data = _2_;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:278" *)
  reg [63:0] instruction_memory [255:0];
  initial begin
    instruction_memory[0] = 64'h0000000000000000;
    instruction_memory[1] = 64'h0000000000000000;
    instruction_memory[2] = 64'h0000000000000000;
    instruction_memory[3] = 64'h0000000000000000;
    instruction_memory[4] = 64'h0000000000000000;
    instruction_memory[5] = 64'h0000000000000000;
    instruction_memory[6] = 64'h0000000000000000;
    instruction_memory[7] = 64'h0000000000000000;
    instruction_memory[8] = 64'h0000000000000000;
    instruction_memory[9] = 64'h0000000000000000;
    instruction_memory[10] = 64'h0000000000000000;
    instruction_memory[11] = 64'h0000000000000000;
    instruction_memory[12] = 64'h0000000000000000;
    instruction_memory[13] = 64'h0000000000000000;
    instruction_memory[14] = 64'h0000000000000000;
    instruction_memory[15] = 64'h0000000000000000;
    instruction_memory[16] = 64'h0000000000000000;
    instruction_memory[17] = 64'h0000000000000000;
    instruction_memory[18] = 64'h0000000000000000;
    instruction_memory[19] = 64'h0000000000000000;
    instruction_memory[20] = 64'h0000000000000000;
    instruction_memory[21] = 64'h0000000000000000;
    instruction_memory[22] = 64'h0000000000000000;
    instruction_memory[23] = 64'h0000000000000000;
    instruction_memory[24] = 64'h0000000000000000;
    instruction_memory[25] = 64'h0000000000000000;
    instruction_memory[26] = 64'h0000000000000000;
    instruction_memory[27] = 64'h0000000000000000;
    instruction_memory[28] = 64'h0000000000000000;
    instruction_memory[29] = 64'h0000000000000000;
    instruction_memory[30] = 64'h0000000000000000;
    instruction_memory[31] = 64'h0000000000000000;
    instruction_memory[32] = 64'h0000000000000000;
    instruction_memory[33] = 64'h0000000000000000;
    instruction_memory[34] = 64'h0000000000000000;
    instruction_memory[35] = 64'h0000000000000000;
    instruction_memory[36] = 64'h0000000000000000;
    instruction_memory[37] = 64'h0000000000000000;
    instruction_memory[38] = 64'h0000000000000000;
    instruction_memory[39] = 64'h0000000000000000;
    instruction_memory[40] = 64'h0000000000000000;
    instruction_memory[41] = 64'h0000000000000000;
    instruction_memory[42] = 64'h0000000000000000;
    instruction_memory[43] = 64'h0000000000000000;
    instruction_memory[44] = 64'h0000000000000000;
    instruction_memory[45] = 64'h0000000000000000;
    instruction_memory[46] = 64'h0000000000000000;
    instruction_memory[47] = 64'h0000000000000000;
    instruction_memory[48] = 64'h0000000000000000;
    instruction_memory[49] = 64'h0000000000000000;
    instruction_memory[50] = 64'h0000000000000000;
    instruction_memory[51] = 64'h0000000000000000;
    instruction_memory[52] = 64'h0000000000000000;
    instruction_memory[53] = 64'h0000000000000000;
    instruction_memory[54] = 64'h0000000000000000;
    instruction_memory[55] = 64'h0000000000000000;
    instruction_memory[56] = 64'h0000000000000000;
    instruction_memory[57] = 64'h0000000000000000;
    instruction_memory[58] = 64'h0000000000000000;
    instruction_memory[59] = 64'h0000000000000000;
    instruction_memory[60] = 64'h0000000000000000;
    instruction_memory[61] = 64'h0000000000000000;
    instruction_memory[62] = 64'h0000000000000000;
    instruction_memory[63] = 64'h0000000000000000;
    instruction_memory[64] = 64'h0000000000000000;
    instruction_memory[65] = 64'h0000000000000000;
    instruction_memory[66] = 64'h0000000000000000;
    instruction_memory[67] = 64'h0000000000000000;
    instruction_memory[68] = 64'h0000000000000000;
    instruction_memory[69] = 64'h0000000000000000;
    instruction_memory[70] = 64'h0000000000000000;
    instruction_memory[71] = 64'h0000000000000000;
    instruction_memory[72] = 64'h0000000000000000;
    instruction_memory[73] = 64'h0000000000000000;
    instruction_memory[74] = 64'h0000000000000000;
    instruction_memory[75] = 64'h0000000000000000;
    instruction_memory[76] = 64'h0000000000000000;
    instruction_memory[77] = 64'h0000000000000000;
    instruction_memory[78] = 64'h0000000000000000;
    instruction_memory[79] = 64'h0000000000000000;
    instruction_memory[80] = 64'h0000000000000000;
    instruction_memory[81] = 64'h0000000000000000;
    instruction_memory[82] = 64'h0000000000000000;
    instruction_memory[83] = 64'h0000000000000000;
    instruction_memory[84] = 64'h0000000000000000;
    instruction_memory[85] = 64'h0000000000000000;
    instruction_memory[86] = 64'h0000000000000000;
    instruction_memory[87] = 64'h0000000000000000;
    instruction_memory[88] = 64'h0000000000000000;
    instruction_memory[89] = 64'h0000000000000000;
    instruction_memory[90] = 64'h0000000000000000;
    instruction_memory[91] = 64'h0000000000000000;
    instruction_memory[92] = 64'h0000000000000000;
    instruction_memory[93] = 64'h0000000000000000;
    instruction_memory[94] = 64'h0000000000000000;
    instruction_memory[95] = 64'h0000000000000000;
    instruction_memory[96] = 64'h0000000000000000;
    instruction_memory[97] = 64'h0000000000000000;
    instruction_memory[98] = 64'h0000000000000000;
    instruction_memory[99] = 64'h0000000000000000;
    instruction_memory[100] = 64'h0000000000000000;
    instruction_memory[101] = 64'h0000000000000000;
    instruction_memory[102] = 64'h0000000000000000;
    instruction_memory[103] = 64'h0000000000000000;
    instruction_memory[104] = 64'h0000000000000000;
    instruction_memory[105] = 64'h0000000000000000;
    instruction_memory[106] = 64'h0000000000000000;
    instruction_memory[107] = 64'h0000000000000000;
    instruction_memory[108] = 64'h0000000000000000;
    instruction_memory[109] = 64'h0000000000000000;
    instruction_memory[110] = 64'h0000000000000000;
    instruction_memory[111] = 64'h0000000000000000;
    instruction_memory[112] = 64'h0000000000000000;
    instruction_memory[113] = 64'h0000000000000000;
    instruction_memory[114] = 64'h0000000000000000;
    instruction_memory[115] = 64'h0000000000000000;
    instruction_memory[116] = 64'h0000000000000000;
    instruction_memory[117] = 64'h0000000000000000;
    instruction_memory[118] = 64'h0000000000000000;
    instruction_memory[119] = 64'h0000000000000000;
    instruction_memory[120] = 64'h0000000000000000;
    instruction_memory[121] = 64'h0000000000000000;
    instruction_memory[122] = 64'h0000000000000000;
    instruction_memory[123] = 64'h0000000000000000;
    instruction_memory[124] = 64'h0000000000000000;
    instruction_memory[125] = 64'h0000000000000000;
    instruction_memory[126] = 64'h0000000000000000;
    instruction_memory[127] = 64'h0000000000000000;
    instruction_memory[128] = 64'h0000000000000000;
    instruction_memory[129] = 64'h0000000000000000;
    instruction_memory[130] = 64'h0000000000000000;
    instruction_memory[131] = 64'h0000000000000000;
    instruction_memory[132] = 64'h0000000000000000;
    instruction_memory[133] = 64'h0000000000000000;
    instruction_memory[134] = 64'h0000000000000000;
    instruction_memory[135] = 64'h0000000000000000;
    instruction_memory[136] = 64'h0000000000000000;
    instruction_memory[137] = 64'h0000000000000000;
    instruction_memory[138] = 64'h0000000000000000;
    instruction_memory[139] = 64'h0000000000000000;
    instruction_memory[140] = 64'h0000000000000000;
    instruction_memory[141] = 64'h0000000000000000;
    instruction_memory[142] = 64'h0000000000000000;
    instruction_memory[143] = 64'h0000000000000000;
    instruction_memory[144] = 64'h0000000000000000;
    instruction_memory[145] = 64'h0000000000000000;
    instruction_memory[146] = 64'h0000000000000000;
    instruction_memory[147] = 64'h0000000000000000;
    instruction_memory[148] = 64'h0000000000000000;
    instruction_memory[149] = 64'h0000000000000000;
    instruction_memory[150] = 64'h0000000000000000;
    instruction_memory[151] = 64'h0000000000000000;
    instruction_memory[152] = 64'h0000000000000000;
    instruction_memory[153] = 64'h0000000000000000;
    instruction_memory[154] = 64'h0000000000000000;
    instruction_memory[155] = 64'h0000000000000000;
    instruction_memory[156] = 64'h0000000000000000;
    instruction_memory[157] = 64'h0000000000000000;
    instruction_memory[158] = 64'h0000000000000000;
    instruction_memory[159] = 64'h0000000000000000;
    instruction_memory[160] = 64'h0000000000000000;
    instruction_memory[161] = 64'h0000000000000000;
    instruction_memory[162] = 64'h0000000000000000;
    instruction_memory[163] = 64'h0000000000000000;
    instruction_memory[164] = 64'h0000000000000000;
    instruction_memory[165] = 64'h0000000000000000;
    instruction_memory[166] = 64'h0000000000000000;
    instruction_memory[167] = 64'h0000000000000000;
    instruction_memory[168] = 64'h0000000000000000;
    instruction_memory[169] = 64'h0000000000000000;
    instruction_memory[170] = 64'h0000000000000000;
    instruction_memory[171] = 64'h0000000000000000;
    instruction_memory[172] = 64'h0000000000000000;
    instruction_memory[173] = 64'h0000000000000000;
    instruction_memory[174] = 64'h0000000000000000;
    instruction_memory[175] = 64'h0000000000000000;
    instruction_memory[176] = 64'h0000000000000000;
    instruction_memory[177] = 64'h0000000000000000;
    instruction_memory[178] = 64'h0000000000000000;
    instruction_memory[179] = 64'h0000000000000000;
    instruction_memory[180] = 64'h0000000000000000;
    instruction_memory[181] = 64'h0000000000000000;
    instruction_memory[182] = 64'h0000000000000000;
    instruction_memory[183] = 64'h0000000000000000;
    instruction_memory[184] = 64'h0000000000000000;
    instruction_memory[185] = 64'h0000000000000000;
    instruction_memory[186] = 64'h0000000000000000;
    instruction_memory[187] = 64'h0000000000000000;
    instruction_memory[188] = 64'h0000000000000000;
    instruction_memory[189] = 64'h0000000000000000;
    instruction_memory[190] = 64'h0000000000000000;
    instruction_memory[191] = 64'h0000000000000000;
    instruction_memory[192] = 64'h0000000000000000;
    instruction_memory[193] = 64'h0000000000000000;
    instruction_memory[194] = 64'h0000000000000000;
    instruction_memory[195] = 64'h0000000000000000;
    instruction_memory[196] = 64'h0000000000000000;
    instruction_memory[197] = 64'h0000000000000000;
    instruction_memory[198] = 64'h0000000000000000;
    instruction_memory[199] = 64'h0000000000000000;
    instruction_memory[200] = 64'h0000000000000000;
    instruction_memory[201] = 64'h0000000000000000;
    instruction_memory[202] = 64'h0000000000000000;
    instruction_memory[203] = 64'h0000000000000000;
    instruction_memory[204] = 64'h0000000000000000;
    instruction_memory[205] = 64'h0000000000000000;
    instruction_memory[206] = 64'h0000000000000000;
    instruction_memory[207] = 64'h0000000000000000;
    instruction_memory[208] = 64'h0000000000000000;
    instruction_memory[209] = 64'h0000000000000000;
    instruction_memory[210] = 64'h0000000000000000;
    instruction_memory[211] = 64'h0000000000000000;
    instruction_memory[212] = 64'h0000000000000000;
    instruction_memory[213] = 64'h0000000000000000;
    instruction_memory[214] = 64'h0000000000000000;
    instruction_memory[215] = 64'h0000000000000000;
    instruction_memory[216] = 64'h0000000000000000;
    instruction_memory[217] = 64'h0000000000000000;
    instruction_memory[218] = 64'h0000000000000000;
    instruction_memory[219] = 64'h0000000000000000;
    instruction_memory[220] = 64'h0000000000000000;
    instruction_memory[221] = 64'h0000000000000000;
    instruction_memory[222] = 64'h0000000000000000;
    instruction_memory[223] = 64'h0000000000000000;
    instruction_memory[224] = 64'h0000000000000000;
    instruction_memory[225] = 64'h0000000000000000;
    instruction_memory[226] = 64'h0000000000000000;
    instruction_memory[227] = 64'h0000000000000000;
    instruction_memory[228] = 64'h0000000000000000;
    instruction_memory[229] = 64'h0000000000000000;
    instruction_memory[230] = 64'h0000000000000000;
    instruction_memory[231] = 64'h0000000000000000;
    instruction_memory[232] = 64'h0000000000000000;
    instruction_memory[233] = 64'h0000000000000000;
    instruction_memory[234] = 64'h0000000000000000;
    instruction_memory[235] = 64'h0000000000000000;
    instruction_memory[236] = 64'h0000000000000000;
    instruction_memory[237] = 64'h0000000000000000;
    instruction_memory[238] = 64'h0000000000000000;
    instruction_memory[239] = 64'h0000000000000000;
    instruction_memory[240] = 64'h0000000000000000;
    instruction_memory[241] = 64'h0000000000000000;
    instruction_memory[242] = 64'h0000000000000000;
    instruction_memory[243] = 64'h0000000000000000;
    instruction_memory[244] = 64'h0000000000000000;
    instruction_memory[245] = 64'h0000000000000000;
    instruction_memory[246] = 64'h0000000000000000;
    instruction_memory[247] = 64'h0000000000000000;
    instruction_memory[248] = 64'h0000000000000000;
    instruction_memory[249] = 64'h0000000000000000;
    instruction_memory[250] = 64'h0000000000000000;
    instruction_memory[251] = 64'h0000000000000000;
    instruction_memory[252] = 64'h0000000000000000;
    instruction_memory[253] = 64'h0000000000000000;
    instruction_memory[254] = 64'h0000000000000000;
    instruction_memory[255] = 64'h0000000000000000;
  end
  always @(posedge clk_100M) begin
    if (instruction_write_port__en)
      instruction_memory[instruction_write_port__addr] <= instruction_write_port__data;
  end
  reg [63:0] _3_;
  always @(posedge clk_100M) begin
    _3_ <= instruction_memory[instruction_memory_address[7:0]];
  end
  assign instruction_read_data = _3_;
  assign \$1  = ~ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:387" *) axi_transfer_busy;
  assign \$2  = ! (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:396" *) dma_memory_half;
  assign \$3  = ! (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:410" *) dma_memory_half_comb;
  assign \$8  = { 63'h0000000000000000, data_read_port_axi__data } | (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:426" *) \$7 ;
  assign sync_200_rst = ~ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:445" *) reset;
  assign sync_100_rst = ~ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:446" *) reset;
  assign sync_50_rst = ~ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:447" *) reset;
  assign sync_25_rst = ~ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:448" *) reset;
  assign write_addr_complete = AWVALID & (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:498" *) AWREADY;
  assign write_data_complete = WVALID & (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:499" *) WREADY;
  assign read_addr_complete = ARVALID & (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:502" *) ARREADY;
  assign \$12  = ~ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:603" *) AWVALID;
  assign \$13  = ~ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:603" *) WVALID;
  assign \$14  = \$12  & (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:603" *) \$13 ;
  assign \$15  = write_addr_complete & (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:603" *) write_data_complete;
  assign \$16  = \$14  | (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:603" *) \$15 ;
  assign \$17  = ~ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:603" *) AWVALID;
  assign \$18  = \$17  & (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:603" *) write_data_complete;
  assign \$19  = \$16  | (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:603" *) \$18 ;
  assign \$21  = { 9'h000, internal_axi_write_address } | (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:667" *) \$20 ;
  assign \$22  = RVALID & (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:708" *) internal_axi_write_ready;
  assign \$23  = RVALID & (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:716" *) RREADY;
  assign trigger = ! (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:903" *) cycle_timer;
  assign \$24  = data_memory_address == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:931" *) 4'h8;
  assign \$26  = \$24  & (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:931" *) \$25 ;
  assign \$27  = ! (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\hdl\\_dsl.py:490" *) fsm_state;
  assign \$28  = fsm_state == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\hdl\\_dsl.py:490" *) 1'h1;
  assign \$29  = fsm_state == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\hdl\\_dsl.py:490" *) 2'h2;
  assign \$30  = fsm_state == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\hdl\\_dsl.py:490" *) 2'h3;
  assign \$31  = fsm_state == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\hdl\\_dsl.py:490" *) 3'h4;
  assign \$32  = fsm_state == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\hdl\\_dsl.py:490" *) 3'h5;
  assign \$33  = ! (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\hdl\\_dsl.py:490" *) \fsm_state$120 ;
  assign \$34  = \fsm_state$120  == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\hdl\\_dsl.py:490" *) 1'h1;
  assign \$35  = \fsm_state$120  == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\hdl\\_dsl.py:490" *) 2'h2;
  assign \$36  = \fsm_state$120  == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\hdl\\_dsl.py:490" *) 2'h3;
  assign \$37  = ! (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\hdl\\_dsl.py:490" *) \fsm_state$167 ;
  assign \$38  = \fsm_state$167  == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\hdl\\_dsl.py:490" *) 1'h1;
  assign \$39  = \fsm_state$167  == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\hdl\\_dsl.py:490" *) 2'h2;
  assign \$40  = \fsm_state$167  == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\hdl\\_dsl.py:490" *) 2'h3;
  assign \$41  = \fsm_state$167  == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\hdl\\_dsl.py:490" *) 3'h4;
  assign \$42  = axi_write_busy | (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:476" *) axi_read_busy;
  assign \$43  = write_bursts_remaining >= (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:562" *) 5'h10;
  assign \$44  = write_bursts_remaining - (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:564" *) 5'h10;
  assign \$45  = write_bursts_remaining - (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:566" *) 1'h1;
  assign \$46  = write_current_burst == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:578" *) AWLEN;
  assign \$47  = internal_axi_read_address + (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:588" *) 1'h1;
  assign \$48  = write_current_burst + (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:590" *) 1'h1;
  assign \$49  = ~ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:600" *) WLAST;
  assign \$50  = internal_axi_read_address + (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:601" *) 1'h1;
  assign \$51  = ~ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:603" *) AWVALID;
  assign \$52  = ~ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:603" *) WVALID;
  assign \$53  = \$51  & (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:603" *) \$52 ;
  assign \$54  = write_addr_complete & (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:603" *) write_data_complete;
  assign \$55  = \$53  | (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:603" *) \$54 ;
  assign \$56  = ~ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:603" *) AWVALID;
  assign \$57  = \$56  & (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:603" *) write_data_complete;
  assign \$58  = \$55  | (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:603" *) \$57 ;
  assign \$59  = write_current_burst == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:610" *) AWLEN;
  assign \$60  = internal_axi_read_address + (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:619" *) 1'h1;
  assign \$61  = write_current_burst + (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:621" *) 1'h1;
  assign \$62  = | (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:633" *) write_bursts_remaining;
  assign \$63  = write_stage != (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:636" *) 1'h1;
  assign \$64  = AWADDR + (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:634" *) 8'h80;
  assign \$65  = write_stage + (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:637" *) 1'h1;
  assign \$66  = read_bursts_remaining >= (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:695" *) 5'h10;
  assign \$67  = read_bursts_remaining - (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:697" *) 5'h10;
  assign \$68  = read_bursts_remaining - (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:699" *) 1'h1;
  assign \$69  = RVALID & (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:708" *) internal_axi_write_ready;
  assign \$70  = RVALID & (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:716" *) RREADY;
  assign \$71  = internal_axi_write_address + (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:717" *) 1'h1;
  assign \$72  = read_current_burst + (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:718" *) 1'h1;
  assign \$73  = | (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:724" *) read_bursts_remaining;
  assign \$74  = read_stage != (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:727" *) 2'h2;
  assign \$75  = ARADDR + (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:725" *) 8'h80;
  assign \$76  = read_stage + (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:728" *) 1'h1;
  assign \$77  = ~ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:762" *) busy;
  assign \$78  = ~ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:774" *) axi_transfer_busy;
  assign \$79  = ! (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:737" *) cycle_timer;
  assign \$80  = cycle_timer - (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:740" *) 1'h1;
  assign \$81  = ! (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:746" *) cycle_timer;
  assign \$82  = | (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:747" *) cycle_timer_config;
  assign \$83  = ~ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:762" *) busy;
  assign \$84  = ~ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:774" *) axi_transfer_busy;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:378" *)
  always @(posedge clk_100M, negedge reset)
    if (!reset) dma_memory_half <= 1'h0;
    else dma_memory_half <= \$85 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:329" *)
  always @(posedge clk_100M, negedge reset)
    if (!reset) axi_transfer_busy <= 1'h0;
    else axi_transfer_busy <= \$42 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:510" *)
  always @(posedge clk_100M, negedge reset)
    if (!reset) axi_read_data_incremented <= 1'h0;
    else axi_read_data_incremented <= \$86 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:509" *)
  always @(posedge clk_100M, negedge reset)
    if (!reset) last_axi_read_data <= 64'h0000000000000000;
    else last_axi_read_data <= \$87 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:508" *)
  always @(posedge clk_100M, negedge reset)
    if (!reset) internal_axi_read_valid <= 1'h0;
    else internal_axi_read_valid <= \$88 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:89" *)
  always @(posedge clk_100M, negedge reset)
    if (!reset) BREADY <= 1'h0;
    else BREADY <= \$89 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:72" *)
  always @(posedge clk_100M, negedge reset)
    if (!reset) AWVALID <= 1'h0;
    else AWVALID <= \$90 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:81" *)
  always @(posedge clk_100M, negedge reset)
    if (!reset) WVALID <= 1'h0;
    else WVALID <= \$91 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:79" *)
  always @(posedge clk_100M, negedge reset)
    if (!reset) WLAST <= 1'h0;
    else WLAST <= \$92 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:474" *)
  always @(posedge clk_100M, negedge reset)
    if (!reset) axi_write_busy <= 1'h0;
    else axi_write_busy <= \$93 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:482" *)
  always @(posedge clk_100M, negedge reset)
    if (!reset) write_stage <= 2'h0;
    else write_stage <= \$94 ;
  (* src = "C:\\Program Files\\WindowsApps\\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\\lib\\contextlib.py:142" *)
  always @(posedge clk_100M, negedge reset)
    if (!reset) fsm_state <= 3'h0;
    else fsm_state <= \$95 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:62" *)
  always @(posedge clk_100M, negedge reset)
    if (!reset) AWADDR <= 32'd0;
    else AWADDR <= \$96 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:491" *)
  always @(posedge clk_100M, negedge reset)
    if (!reset) write_bursts_remaining <= 10'h000;
    else write_bursts_remaining <= \$97 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:506" *)
  always @(posedge clk_100M, negedge reset)
    if (!reset) internal_axi_read_address <= 10'h000;
    else internal_axi_read_address <= \$98 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:63" *)
  always @(posedge clk_100M, negedge reset)
    if (!reset) AWLEN <= 4'h0;
    else AWLEN <= \$99 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:493" *)
  always @(posedge clk_100M, negedge reset)
    if (!reset) write_current_burst <= 4'h0;
    else write_current_burst <= \$100 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:462" *)
  always @(posedge clk_100M, negedge reset)
    if (!reset) cycle_timer_config <= 16'hffff;
    else cycle_timer_config <= \$101 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:467" *)
  always @(posedge clk_100M, negedge reset)
    if (!reset) dma_instruction_block_select <= 4'h0;
    else dma_instruction_block_select <= \$102 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:646" *)
  always @(posedge clk_100M, negedge reset)
    if (!reset) internal_axi_write_ready <= 1'h0;
    else internal_axi_write_ready <= \$103 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:113" *)
  always @(posedge clk_100M, negedge reset)
    if (!reset) RREADY <= 1'h0;
    else RREADY <= \$104 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:103" *)
  always @(posedge clk_100M, negedge reset)
    if (!reset) ARVALID <= 1'h0;
    else ARVALID <= \$105 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:475" *)
  always @(posedge clk_100M, negedge reset)
    if (!reset) axi_read_busy <= 1'h0;
    else axi_read_busy <= \$106 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:489" *)
  always @(posedge clk_100M, negedge reset)
    if (!reset) read_stage <= 3'h0;
    else read_stage <= \$107 ;
  (* src = "C:\\Program Files\\WindowsApps\\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\\lib\\contextlib.py:142" *)
  always @(posedge clk_100M, negedge reset)
    if (!reset) \fsm_state$120  <= 2'h0;
    else \fsm_state$120  <= \$108 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:93" *)
  always @(posedge clk_100M, negedge reset)
    if (!reset) ARADDR <= 32'd0;
    else ARADDR <= \$109 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:492" *)
  always @(posedge clk_100M, negedge reset)
    if (!reset) read_bursts_remaining <= 10'h000;
    else read_bursts_remaining <= \$110 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:644" *)
  always @(posedge clk_100M, negedge reset)
    if (!reset) internal_axi_write_address <= 10'h000;
    else internal_axi_write_address <= \$111 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:94" *)
  always @(posedge clk_100M, negedge reset)
    if (!reset) ARLEN <= 4'h0;
    else ARLEN <= \$112 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:494" *)
  always @(posedge clk_100M, negedge reset)
    if (!reset) read_current_burst <= 4'h0;
    else read_current_burst <= \$113 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:133" *)
  always @(posedge clk_100M, negedge reset)
    if (!reset) pl_ps_interrupts <= 16'h0000;
    else pl_ps_interrupts <= \$114 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:168" *)
  always @(posedge clk_100M, negedge reset)
    if (!reset) start <= 1'h0;
    else start <= \$115 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:328" *)
  always @(posedge clk_100M, negedge reset)
    if (!reset) axi_transfer_start <= 1'h0;
    else axi_transfer_start <= \$116 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:59" *)
  always @(posedge clk_100M, negedge reset)
    if (!reset) read_bram_address_input <= 16'h0000;
    else read_bram_address_input <= read_bram_address_output;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:61" *)
  always @(posedge clk_100M, negedge reset)
    if (!reset) write_bram_address_input <= 16'h0000;
    else write_bram_address_input <= write_bram_address_output;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:55" *)
  always @(posedge clk_100M, negedge reset)
    if (!reset) read_node_address_input <= 8'h00;
    else read_node_address_input <= read_node_address_output;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:57" *)
  always @(posedge clk_100M, negedge reset)
    if (!reset) write_node_address_input <= 8'h00;
    else write_node_address_input <= write_node_address_output;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:63" *)
  always @(posedge clk_100M, negedge reset)
    if (!reset) data_input <= 32'd0;
    else data_input <= data_output;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:65" *)
  always @(posedge clk_100M, negedge reset)
    if (!reset) read_complete_input <= 1'h0;
    else read_complete_input <= read_complete_output;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:67" *)
  always @(posedge clk_100M, negedge reset)
    if (!reset) write_complete_input <= 1'h0;
    else write_complete_input <= write_complete_output;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:59" *)
  always @(posedge clk_100M, negedge reset)
    if (!reset) \read_bram_address_input$192  <= 16'h0000;
    else \read_bram_address_input$192  <= \read_bram_address_output$193 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:61" *)
  always @(posedge clk_100M, negedge reset)
    if (!reset) \write_bram_address_input$194  <= 16'h0000;
    else \write_bram_address_input$194  <= \write_bram_address_output$195 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:55" *)
  always @(posedge clk_100M, negedge reset)
    if (!reset) \read_node_address_input$196  <= 8'h00;
    else \read_node_address_input$196  <= \read_node_address_output$197 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:57" *)
  always @(posedge clk_100M, negedge reset)
    if (!reset) \write_node_address_input$198  <= 8'h00;
    else \write_node_address_input$198  <= \write_node_address_output$199 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:63" *)
  always @(posedge clk_100M, negedge reset)
    if (!reset) \data_input$200  <= 32'd0;
    else \data_input$200  <= \data_output$201 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:65" *)
  always @(posedge clk_100M, negedge reset)
    if (!reset) \read_complete_input$202  <= 1'h0;
    else \read_complete_input$202  <= \read_complete_output$203 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:67" *)
  always @(posedge clk_100M, negedge reset)
    if (!reset) \write_complete_input$204  <= 1'h0;
    else \write_complete_input$204  <= \write_complete_output$205 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:59" *)
  always @(posedge clk_100M, negedge reset)
    if (!reset) \read_bram_address_input$206  <= 16'h0000;
    else \read_bram_address_input$206  <= \read_bram_address_output$207 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:61" *)
  always @(posedge clk_100M, negedge reset)
    if (!reset) \write_bram_address_input$208  <= 16'h0000;
    else \write_bram_address_input$208  <= \write_bram_address_output$209 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:55" *)
  always @(posedge clk_100M, negedge reset)
    if (!reset) \read_node_address_input$210  <= 8'h00;
    else \read_node_address_input$210  <= \read_node_address_output$211 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:57" *)
  always @(posedge clk_100M, negedge reset)
    if (!reset) \write_node_address_input$212  <= 8'h00;
    else \write_node_address_input$212  <= \write_node_address_output$213 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:63" *)
  always @(posedge clk_100M, negedge reset)
    if (!reset) \data_input$214  <= 32'd0;
    else \data_input$214  <= \data_output$215 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:65" *)
  always @(posedge clk_100M, negedge reset)
    if (!reset) \read_complete_input$216  <= 1'h0;
    else \read_complete_input$216  <= \read_complete_output$217 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:67" *)
  always @(posedge clk_100M, negedge reset)
    if (!reset) \write_complete_input$218  <= 1'h0;
    else \write_complete_input$218  <= \write_complete_output$219 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:59" *)
  always @(posedge clk_100M, negedge reset)
    if (!reset) \read_bram_address_input$220  <= 16'h0000;
    else \read_bram_address_input$220  <= \read_bram_address_output$221 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:61" *)
  always @(posedge clk_100M, negedge reset)
    if (!reset) \write_bram_address_input$222  <= 16'h0000;
    else \write_bram_address_input$222  <= \write_bram_address_output$223 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:55" *)
  always @(posedge clk_100M, negedge reset)
    if (!reset) \read_node_address_input$224  <= 8'h00;
    else \read_node_address_input$224  <= \read_node_address_output$225 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:57" *)
  always @(posedge clk_100M, negedge reset)
    if (!reset) \write_node_address_input$226  <= 8'h00;
    else \write_node_address_input$226  <= \write_node_address_output$227 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:63" *)
  always @(posedge clk_100M, negedge reset)
    if (!reset) \data_input$228  <= 32'd0;
    else \data_input$228  <= \data_output$229 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:65" *)
  always @(posedge clk_100M, negedge reset)
    if (!reset) \read_complete_input$230  <= 1'h0;
    else \read_complete_input$230  <= \read_complete_output$231 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:67" *)
  always @(posedge clk_100M, negedge reset)
    if (!reset) \write_complete_input$232  <= 1'h0;
    else \write_complete_input$232  <= \write_complete_output$233 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:153" *)
  always @(posedge clk_100M, negedge reset)
    if (!reset) \read_node_address_input$234  <= 8'h00;
    else \read_node_address_input$234  <= \read_node_address_output$235 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:155" *)
  always @(posedge clk_100M, negedge reset)
    if (!reset) \write_node_address_input$236  <= 8'h00;
    else \write_node_address_input$236  <= \write_node_address_output$237 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:157" *)
  always @(posedge clk_100M, negedge reset)
    if (!reset) \read_bram_address_input$238  <= 16'h0000;
    else \read_bram_address_input$238  <= \read_bram_address_output$239 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:159" *)
  always @(posedge clk_100M, negedge reset)
    if (!reset) \write_bram_address_input$240  <= 16'h0000;
    else \write_bram_address_input$240  <= \write_bram_address_output$241 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:161" *)
  always @(posedge clk_100M, negedge reset)
    if (!reset) \data_input$242  <= 32'd0;
    else \data_input$242  <= \data_output$243 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:163" *)
  always @(posedge clk_100M, negedge reset)
    if (!reset) \read_complete_input$244  <= 1'h0;
    else \read_complete_input$244  <= \read_complete_output$245 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:165" *)
  always @(posedge clk_100M, negedge reset)
    if (!reset) \write_complete_input$246  <= 1'h0;
    else \write_complete_input$246  <= \write_complete_output$247 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:466" *)
  always @(posedge clk_25M, negedge reset)
    if (!reset) cycle_timer <= 16'h0000;
    else cycle_timer <= \$117 ;
  (* src = "C:\\Program Files\\WindowsApps\\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\\lib\\contextlib.py:142" *)
  always @(posedge clk_25M, negedge reset)
    if (!reset) \fsm_state$167  <= 3'h0;
    else \fsm_state$167  <= \$118 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:813" *)
  \Controller.em_serial_controller  em_serial_controller (
    .bram_address(\bram_address$146 ),
    .\bram_read_data$39 (\bram_read_data$152 ),
    .bram_write_data(\bram_write_data$148 ),
    .bram_write_enable(\bram_write_enable$150 ),
    .rx(rs422_rx[9]),
    .sync_100_clk(clk_100M),
    .sync_100_rst(sync_100_rst),
    .tx(\tx$166 )
  );
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:841" *)
  \Controller.em_serial_controller_shift_dma_4  em_serial_controller_shift_dma_4 (
    .bram_address(\bram_address$146 ),
    .bram_read_data(\bram_read_data$152 ),
    .bram_write_data(\bram_write_data$148 ),
    .bram_write_enable(\bram_write_enable$150 ),
    .data_input(\data_input$228 ),
    .data_output(\data_output$243 ),
    .read_bram_address_input(\read_bram_address_input$220 ),
    .read_bram_address_output(\read_bram_address_output$239 ),
    .read_complete_input(\read_complete_input$230 ),
    .read_complete_output(\read_complete_output$245 ),
    .read_node_address_input(\read_node_address_input$224 ),
    .read_node_address_output(\read_node_address_output$235 ),
    .sync_100_clk(clk_100M),
    .sync_100_rst(sync_100_rst),
    .write_bram_address_input(\write_bram_address_input$222 ),
    .write_bram_address_output(\write_bram_address_output$241 ),
    .write_complete_input(\write_complete_input$232 ),
    .write_complete_output(\write_complete_output$247 ),
    .write_node_address_input(\write_node_address_input$226 ),
    .write_node_address_output(\write_node_address_output$237 )
  );
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:813" *)
  \Controller.fanuc_encoders  fanuc_encoders (
    .bram_address(\bram_address$130 ),
    .bram_read_data(\bram_read_data$136 ),
    .req(\$119 ),
    .\rx$21 (rx),
    .sync_100_clk(clk_100M),
    .sync_100_rst(sync_100_rst),
    .\trigger$20 (timer_pulse[0])
  );
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:841" *)
  \Controller.fanuc_encoders_shift_dma_2  fanuc_encoders_shift_dma_2 (
    .bram_address(\bram_address$130 ),
    .bram_read_data(\bram_read_data$136 ),
    .bram_write_data(\bram_write_data$132 ),
    .bram_write_enable(\bram_write_enable$134 ),
    .data_input(\data_input$200 ),
    .data_output(\data_output$215 ),
    .read_bram_address_input(\read_bram_address_input$192 ),
    .read_bram_address_output(\read_bram_address_output$207 ),
    .read_complete_input(\read_complete_input$202 ),
    .read_complete_output(\read_complete_output$217 ),
    .read_node_address_input(\read_node_address_input$196 ),
    .read_node_address_output(\read_node_address_output$211 ),
    .sync_100_clk(clk_100M),
    .sync_100_rst(sync_100_rst),
    .write_bram_address_input(\write_bram_address_input$194 ),
    .write_bram_address_output(\write_bram_address_output$209 ),
    .write_complete_input(\write_complete_input$204 ),
    .write_complete_output(\write_complete_output$219 ),
    .write_node_address_input(\write_node_address_input$198 ),
    .write_node_address_output(\write_node_address_output$213 )
  );
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:813" *)
  \Controller.global_timers  global_timers (
    .sync_25_clk(clk_25M),
    .sync_25_rst(sync_25_rst),
    .timer_pulse(timer_pulse),
    .trigger(trigger)
  );
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:841" *)
  \Controller.global_timers_shift_dma_3  global_timers_shift_dma_3 (
    .bram_address(\bram_address$138 ),
    .bram_write_data(\bram_write_data$140 ),
    .bram_write_enable(\bram_write_enable$142 ),
    .data_input(\data_input$214 ),
    .data_output(\data_output$229 ),
    .read_bram_address_input(\read_bram_address_input$206 ),
    .read_bram_address_output(\read_bram_address_output$221 ),
    .read_complete_input(\read_complete_input$216 ),
    .read_complete_output(\read_complete_output$231 ),
    .read_node_address_input(\read_node_address_input$210 ),
    .read_node_address_output(\read_node_address_output$225 ),
    .sync_100_clk(clk_100M),
    .sync_100_rst(sync_100_rst),
    .write_bram_address_input(\write_bram_address_input$208 ),
    .write_bram_address_output(\write_bram_address_output$223 ),
    .write_complete_input(\write_complete_input$218 ),
    .write_complete_output(\write_complete_output$233 ),
    .write_node_address_input(\write_node_address_input$212 ),
    .write_node_address_output(\write_node_address_output$227 )
  );
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:813" *)
  \Controller.serial_card  serial_card (
    .bram_address(bram_address),
    .bram_read_data(bram_read_data),
    .bram_write_data(bram_write_data),
    .bram_write_enable(bram_write_enable),
    .rs422_rx(rs422_rx),
    .rs422_tx(rs422_tx),
    .slotIn(slot_B_in),
    .slotOut(slot_B_out),
    .slotOutEnable(slot_B_out_enable),
    .sync_100_clk(clk_100M),
    .sync_100_rst(sync_100_rst),
    .sync_25_clk(clk_25M),
    .sync_25_rst(sync_25_rst)
  );
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:841" *)
  \Controller.serial_card_shift_dma_1  serial_card_shift_dma_1 (
    .bram_address(bram_address),
    .bram_read_data(bram_read_data),
    .bram_write_data(bram_write_data),
    .bram_write_enable(bram_write_enable),
    .data_input(data_input),
    .data_output(\data_output$201 ),
    .read_bram_address_input(read_bram_address_input),
    .read_bram_address_output(\read_bram_address_output$193 ),
    .read_complete_input(read_complete_input),
    .read_complete_output(\read_complete_output$203 ),
    .read_node_address_input(read_node_address_input),
    .read_node_address_output(\read_node_address_output$197 ),
    .sync_100_clk(clk_100M),
    .sync_100_rst(sync_100_rst),
    .write_bram_address_input(write_bram_address_input),
    .write_bram_address_output(\write_bram_address_output$195 ),
    .write_complete_input(write_complete_input),
    .write_complete_output(\write_complete_output$205 ),
    .write_node_address_input(write_node_address_input),
    .write_node_address_output(\write_node_address_output$199 )
  );
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:282" *)
  \Controller.shift_dma  shift_dma (
    .bram_read_data(data_memory_read_data),
    .busy(busy),
    .\data_input$44 (\data_input$242 ),
    .data_memory_address(data_memory_address),
    .data_memory_write_data(data_memory_write_data),
    .data_memory_write_enable(data_memory_write_enable),
    .data_output(data_output),
    .instruction_memory_address(instruction_memory_address),
    .instruction_memory_read_data(instruction_read_data),
    .\read_bram_address_input$40 (\read_bram_address_input$238 ),
    .read_bram_address_output(read_bram_address_output),
    .read_complete_input(\read_complete_input$244 ),
    .read_complete_output(read_complete_output),
    .\read_node_address_input$36 (\read_node_address_input$234 ),
    .read_node_address_output(read_node_address_output),
    .start(start),
    .sync_100_clk(clk_100M),
    .sync_100_rst(sync_100_rst),
    .\write_bram_address_input$42 (\write_bram_address_input$240 ),
    .write_bram_address_output(write_bram_address_output),
    .write_complete_input(\write_complete_input$246 ),
    .write_complete_output(write_complete_output),
    .\write_node_address_input$38 (\write_node_address_input$236 ),
    .write_node_address_output(write_node_address_output)
  );
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    dma_memory_half_comb = 1'h0;
    if (data_memory_address[10]) begin
      dma_memory_half_comb = 1'h1;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    if (\$1 ) begin
      data_read_read_port_dma__addr = data_memory_address[9:0];
    end else begin
      data_read_read_port_dma__addr = \$6 [9:0];
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    if (\$1 ) begin
      data_write_read_port_dma__addr = data_memory_address[9:0];
    end else begin
      data_write_read_port_dma__addr = \$11 [9:0];
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    data_read_write_port_dma__data = 32'd0;
    if (\$1 ) begin
      data_read_write_port_dma__data = data_memory_write_data;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    if (\$1 ) begin
      data_write_write_port_dma__data = data_memory_write_data;
    end else begin
      data_write_write_port_dma__data = data_write_axi_data[63:32];
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    data_memory_read_data = 32'd0;
    if (\$1 ) begin
      (* full_case = 32'd1 *)
      if (\$2 ) begin
        data_memory_read_data = data_read_dma_read_data;
      end else begin
        data_memory_read_data = data_write_dma_read_data;
      end
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    data_read_write_port_dma__en = 1'h0;
    if (\$1 ) begin
      (* full_case = 32'd1 *)
      if (\$3 ) begin
        data_read_write_port_dma__en = data_memory_write_enable;
      end else begin
        data_read_write_port_dma__en = 1'h0;
      end
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    if (\$1 ) begin
      (* full_case = 32'd1 *)
      if (\$3 ) begin
        data_write_write_port_dma__en = 1'h0;
      end else begin
        data_write_write_port_dma__en = data_memory_write_enable;
      end
    end else begin
      data_write_write_port_dma__en = data_write_axi_enable;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    data_read_port_axi__addr = 10'h000;
    (* full_case = 32'd1 *)
    if (\$1 ) begin
    end else begin
      data_read_port_axi__addr = \$4 [9:0];
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    data_read_axi_data = 64'h0000000000000000;
    (* full_case = 32'd1 *)
    if (\$1 ) begin
    end else begin
      data_read_axi_data = \$8 [63:0];
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    data_write_port_axi__addr = 10'h000;
    (* full_case = 32'd1 *)
    if (\$1 ) begin
    end else begin
      data_write_port_axi__addr = \$9 [9:0];
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    data_write_port_axi__data = 32'd0;
    (* full_case = 32'd1 *)
    if (\$1 ) begin
    end else begin
      data_write_port_axi__data = data_write_axi_data[31:0];
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    data_write_port_axi__en = 1'h0;
    (* full_case = 32'd1 *)
    if (\$1 ) begin
    end else begin
      data_write_port_axi__en = data_write_axi_enable;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    if (axi_read_data_incremented) begin
      timed_axi_read_data = internal_axi_read_data;
    end else begin
      timed_axi_read_data = last_axi_read_data;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    internal_axi_read_data = 64'h0000000000000000;
    casez (write_stage)
      2'h0:
          (* full_case = 32'd1 *)
          casez (internal_axi_read_address)
            10'h000:
                internal_axi_read_data = 64'h0000000000000000;
            default:
                internal_axi_read_data = 64'h0000000000000000;
          endcase
      2'h1:
          internal_axi_read_data = data_read_axi_data;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    data_read_axi_address = 10'h000;
    casez (write_stage)
      2'h0:
          /* empty */;
      2'h1:
          data_read_axi_address = internal_axi_read_address;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    WDATA = 64'h0000000000000000;
    casez (fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          /* empty */;
      3'h2:
          /* empty */;
      3'h3:
          if (internal_axi_read_valid) begin
            WDATA = timed_axi_read_data;
          end
      3'h4:
          (* full_case = 32'd1 *)
          if (\$19 ) begin
            (* full_case = 32'd1 *)
            if (WLAST) begin
              WDATA = timed_axi_read_data;
            end else begin
              if (internal_axi_read_valid) begin
                WDATA = timed_axi_read_data;
              end
            end
          end else begin
            WDATA = timed_axi_read_data;
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    data_write_axi_address = 10'h000;
    casez (read_stage)
      3'h0:
          /* empty */;
      3'h1:
          data_write_axi_address = internal_axi_write_address;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    data_write_axi_data = 64'h0000000000000000;
    casez (read_stage)
      3'h0:
          /* empty */;
      3'h1:
          data_write_axi_data = internal_axi_write_data;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    data_write_axi_enable = 1'h0;
    casez (read_stage)
      3'h0:
          /* empty */;
      3'h1:
          data_write_axi_enable = internal_axi_write_enable;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    instruction_write_port__addr = 8'h00;
    casez (read_stage)
      3'h0:
          /* empty */;
      3'h1:
          /* empty */;
      3'h2:
          instruction_write_port__addr = \$21 [7:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    instruction_write_port__data = 64'h0000000000000000;
    casez (read_stage)
      3'h0:
          /* empty */;
      3'h1:
          /* empty */;
      3'h2:
          instruction_write_port__data = internal_axi_write_data;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    instruction_write_port__en = 1'h0;
    casez (read_stage)
      3'h0:
          /* empty */;
      3'h1:
          /* empty */;
      3'h2:
          instruction_write_port__en = internal_axi_write_enable;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    internal_axi_write_data = 64'h0000000000000000;
    (* full_case = 32'd1 *)
    casez (\fsm_state$120 )
      2'h0:
          /* empty */;
      2'h1:
          /* empty */;
      2'h2:
          /* empty */;
      2'h3:
          if (\$22 ) begin
            internal_axi_write_data = RDATA;
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    internal_axi_write_enable = 1'h0;
    (* full_case = 32'd1 *)
    casez (\fsm_state$120 )
      2'h0:
          /* empty */;
      2'h1:
          /* empty */;
      2'h2:
          /* empty */;
      2'h3:
          (* full_case = 32'd1 *)
          if (\$23 ) begin
            internal_axi_write_enable = 1'h1;
          end else begin
            internal_axi_write_enable = 1'h0;
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    debug_pins[2] = 1'h0;
    if (\$26 ) begin
      debug_pins[2] = 1'h1;
    end
    begin
      begin
        debug_pins[3] = data_memory_write_data[0];
        debug_pins[4] = data_memory_write_data[1];
        debug_pins[5] = data_memory_write_data[2];
        debug_pins[6] = data_memory_write_data[3];
      end
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    if (data_memory_address[10]) begin
      \$85  = 1'h1;
    end else begin
      \$85  = 1'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$86  = axi_read_data_incremented;
    if (axi_read_data_incremented) begin
      \$86  = 1'h0;
    end
    casez (fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          /* empty */;
      3'h2:
          /* empty */;
      3'h3:
          if (internal_axi_read_valid) begin
            \$86  = 1'h1;
          end
      3'h4:
          if (write_data_complete) begin
            if (\$49 ) begin
              \$86  = 1'h1;
            end
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$87  = last_axi_read_data;
    if (axi_read_data_incremented) begin
      \$87  = internal_axi_read_data;
    end
    casez (fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          /* empty */;
      3'h2:
          /* empty */;
      3'h3:
          /* empty */;
      3'h4:
          if (\$58 ) begin
            (* full_case = 32'd1 *)
            if (WLAST) begin
            end else begin
              if (internal_axi_read_valid) begin
                \$87  = internal_axi_read_data;
              end
            end
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$88  = internal_axi_read_valid;
    casez (write_stage)
      2'h0:
          \$88  = 1'h1;
      2'h1:
          \$88  = 1'h1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$89  = BREADY;
    casez (fsm_state)
      3'h0:
          \$89  = 1'h0;
      3'h1:
          /* empty */;
      3'h2:
          /* empty */;
      3'h3:
          /* empty */;
      3'h4:
          if (\$58 ) begin
            if (WLAST) begin
              \$89  = 1'h1;
            end
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$90  = AWVALID;
    casez (fsm_state)
      3'h0:
          \$90  = 1'h0;
      3'h1:
          /* empty */;
      3'h2:
          \$90  = 1'h1;
      3'h3:
          if (write_addr_complete) begin
            \$90  = 1'h0;
          end
      3'h4:
          if (write_addr_complete) begin
            \$90  = 1'h0;
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$91  = WVALID;
    casez (fsm_state)
      3'h0:
          \$91  = 1'h0;
      3'h1:
          /* empty */;
      3'h2:
          /* empty */;
      3'h3:
          if (internal_axi_read_valid) begin
            \$91  = 1'h1;
          end
      3'h4:
        begin
          if (write_data_complete) begin
            \$91  = 1'h0;
          end
          if (\$58 ) begin
            (* full_case = 32'd1 *)
            if (WLAST) begin
            end else begin
              if (internal_axi_read_valid) begin
                \$91  = 1'h1;
              end
            end
          end
        end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$92  = WLAST;
    casez (fsm_state)
      3'h0:
          \$92  = 1'h0;
      3'h1:
          /* empty */;
      3'h2:
          /* empty */;
      3'h3:
          (* full_case = 32'd1 *)
          if (\$46 ) begin
            \$92  = 1'h1;
          end else begin
            \$92  = 1'h0;
          end
      3'h4:
          if (\$58 ) begin
            (* full_case = 32'd1 *)
            if (WLAST) begin
            end else begin
              (* full_case = 32'd1 *)
              if (\$59 ) begin
                \$92  = 1'h1;
              end else begin
                \$92  = 1'h0;
              end
            end
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$93  = axi_write_busy;
    casez (fsm_state)
      3'h0:
        begin
          \$93  = 1'h0;
          if (axi_transfer_start) begin
            \$93  = 1'h1;
          end
        end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$94  = write_stage;
    casez (fsm_state)
      3'h0:
          \$94  = 2'h0;
      3'h1:
          /* empty */;
      3'h2:
          /* empty */;
      3'h3:
          /* empty */;
      3'h4:
          /* empty */;
      3'h5:
          if (BVALID) begin
            if (\$62 ) begin
            end else if (\$63 ) begin
              \$94  = \$65 [1:0];
            end
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$95  = fsm_state;
    casez (fsm_state)
      3'h0:
          if (axi_transfer_start) begin
            \$95  = 3'h1;
          end
      3'h1:
          \$95  = 3'h2;
      3'h2:
          \$95  = 3'h3;
      3'h3:
          if (internal_axi_read_valid) begin
            \$95  = 3'h4;
          end
      3'h4:
          if (\$58 ) begin
            if (WLAST) begin
              \$95  = 3'h5;
            end
          end
      3'h5:
          if (BVALID) begin
            (* full_case = 32'd1 *)
            if (\$62 ) begin
              \$95  = 3'h2;
            end else if (\$63 ) begin
              \$95  = 3'h1;
            end else begin
              \$95  = 3'h0;
            end
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$96  = AWADDR;
    casez (fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          casez (write_stage)
            2'h0:
                \$96  = 32'd985088;
            2'h1:
                \$96  = 32'd991232;
          endcase
      3'h2:
          /* empty */;
      3'h3:
          /* empty */;
      3'h4:
          /* empty */;
      3'h5:
          if (BVALID) begin
            if (\$62 ) begin
              \$96  = \$64 [31:0];
            end
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$97  = write_bursts_remaining;
    casez (fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          casez (write_stage)
            2'h0:
                \$97  = 10'h008;
            2'h1:
                \$97  = 10'h200;
          endcase
      3'h2:
          (* full_case = 32'd1 *)
          if (\$43 ) begin
            \$97  = \$44 [9:0];
          end else begin
            \$97  = 10'h000;
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$98  = internal_axi_read_address;
    casez (fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          \$98  = 10'h000;
      3'h2:
          /* empty */;
      3'h3:
          if (internal_axi_read_valid) begin
            \$98  = \$47 [9:0];
          end
      3'h4:
        begin
          if (write_data_complete) begin
            if (\$49 ) begin
              \$98  = \$50 [9:0];
            end
          end
          if (\$58 ) begin
            (* full_case = 32'd1 *)
            if (WLAST) begin
            end else begin
              if (internal_axi_read_valid) begin
                \$98  = \$60 [9:0];
              end
            end
          end
        end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$99  = AWLEN;
    casez (fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          /* empty */;
      3'h2:
          (* full_case = 32'd1 *)
          if (\$43 ) begin
            \$99  = 4'hf;
          end else begin
            \$99  = \$45 [3:0];
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$100  = write_current_burst;
    casez (fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          /* empty */;
      3'h2:
          \$100  = 4'h0;
      3'h3:
          if (internal_axi_read_valid) begin
            \$100  = \$48 [3:0];
          end
      3'h4:
          if (\$58 ) begin
            (* full_case = 32'd1 *)
            if (WLAST) begin
            end else begin
              if (internal_axi_read_valid) begin
                \$100  = \$61 [3:0];
              end
            end
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$101  = cycle_timer_config;
    casez (read_stage)
      3'h0:
          casez (internal_axi_write_address)
            10'h000:
                if (internal_axi_write_enable) begin
                  \$101  = internal_axi_write_data[15:0];
                end
          endcase
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$102  = dma_instruction_block_select;
    casez (read_stage)
      3'h0:
          casez (internal_axi_write_address)
            10'h000:
                if (internal_axi_write_enable) begin
                  \$102  = internal_axi_write_data[19:16];
                end
          endcase
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$103  = internal_axi_write_ready;
    casez (read_stage)
      3'h0:
          \$103  = 1'h1;
      3'h1:
          \$103  = 1'h1;
      3'h2:
          \$103  = 1'h1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$104  = RREADY;
    (* full_case = 32'd1 *)
    casez (\fsm_state$120 )
      2'h0:
          \$104  = 1'h0;
      2'h1:
          /* empty */;
      2'h2:
          /* empty */;
      2'h3:
          (* full_case = 32'd1 *)
          if (\$69 ) begin
            \$104  = 1'h1;
          end else begin
            \$104  = 1'h0;
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$105  = ARVALID;
    (* full_case = 32'd1 *)
    casez (\fsm_state$120 )
      2'h0:
          \$105  = 1'h0;
      2'h1:
          /* empty */;
      2'h2:
          \$105  = 1'h1;
      2'h3:
          if (read_addr_complete) begin
            \$105  = 1'h0;
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$106  = axi_read_busy;
    casez (\fsm_state$120 )
      2'h0:
        begin
          \$106  = 1'h0;
          if (axi_transfer_start) begin
            \$106  = 1'h1;
          end
        end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$107  = read_stage;
    (* full_case = 32'd1 *)
    casez (\fsm_state$120 )
      2'h0:
          \$107  = 3'h0;
      2'h1:
          /* empty */;
      2'h2:
          /* empty */;
      2'h3:
          if (\$70 ) begin
            if (RLAST) begin
              if (\$73 ) begin
              end else if (\$74 ) begin
                \$107  = \$76 [2:0];
              end
            end
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$108  = \fsm_state$120 ;
    (* full_case = 32'd1 *)
    casez (\fsm_state$120 )
      2'h0:
          if (axi_transfer_start) begin
            \$108  = 2'h1;
          end
      2'h1:
          \$108  = 2'h2;
      2'h2:
          \$108  = 2'h3;
      2'h3:
          if (\$70 ) begin
            if (RLAST) begin
              (* full_case = 32'd1 *)
              if (\$73 ) begin
                \$108  = 2'h2;
              end else if (\$74 ) begin
                \$108  = 2'h1;
              end else begin
                \$108  = 2'h0;
              end
            end
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$109  = ARADDR;
    (* full_case = 32'd1 *)
    casez (\fsm_state$120 )
      2'h0:
          /* empty */;
      2'h1:
          casez (read_stage)
            3'h0:
                \$109  = 32'd983040;
            3'h1:
                \$109  = 32'd987136;
            3'h2:
                \$109  = 32'd995328;
          endcase
      2'h2:
          /* empty */;
      2'h3:
          if (\$70 ) begin
            if (RLAST) begin
              if (\$73 ) begin
                \$109  = \$75 [31:0];
              end
            end
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$110  = read_bursts_remaining;
    casez (\fsm_state$120 )
      2'h0:
          /* empty */;
      2'h1:
          casez (read_stage)
            3'h0:
                \$110  = 10'h008;
            3'h1:
                \$110  = 10'h200;
            3'h2:
                \$110  = 10'h100;
          endcase
      2'h2:
          (* full_case = 32'd1 *)
          if (\$66 ) begin
            \$110  = \$67 [9:0];
          end else begin
            \$110  = 10'h000;
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$111  = internal_axi_write_address;
    (* full_case = 32'd1 *)
    casez (\fsm_state$120 )
      2'h0:
          /* empty */;
      2'h1:
          \$111  = 10'h000;
      2'h2:
          /* empty */;
      2'h3:
          if (\$70 ) begin
            \$111  = \$71 [9:0];
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$112  = ARLEN;
    casez (\fsm_state$120 )
      2'h0:
          /* empty */;
      2'h1:
          /* empty */;
      2'h2:
          (* full_case = 32'd1 *)
          if (\$66 ) begin
            \$112  = 4'hf;
          end else begin
            \$112  = \$68 [3:0];
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$113  = read_current_burst;
    (* full_case = 32'd1 *)
    casez (\fsm_state$120 )
      2'h0:
          /* empty */;
      2'h1:
          /* empty */;
      2'h2:
          \$113  = 4'h0;
      2'h3:
          if (\$70 ) begin
            \$113  = \$72 [3:0];
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$114 [3:0] = pl_ps_interrupts[3:0];
    casez (\fsm_state$167 )
      3'h0:
          \$114 [0] = 1'h0;
      3'h1:
        begin
          \$114 [0] = 1'h0;
          \$114 [1] = 1'h0;
          \$114 [3] = 1'h0;
          \$114 [2] = 1'h1;
        end
      3'h2:
          if (\$77 ) begin
            \$114 [3] = 1'h1;
            \$114 [2] = 1'h0;
          end
      3'h3:
          \$114 [0] = 1'h1;
      3'h4:
          if (\$78 ) begin
            \$114 [1] = 1'h1;
            \$114 [0] = 1'h1;
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$115  = start;
    casez (\fsm_state$167 )
      3'h0:
          /* empty */;
      3'h1:
          \$115  = 1'h1;
      3'h2:
          \$115  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$116  = axi_transfer_start;
    casez (\fsm_state$167 )
      3'h0:
          /* empty */;
      3'h1:
          /* empty */;
      3'h2:
          /* empty */;
      3'h3:
          \$116  = 1'h1;
      3'h4:
          \$116  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    if (\$79 ) begin
      \$117  = cycle_timer_config;
    end else begin
      \$117  = \$80 [15:0];
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$118  = \fsm_state$167 ;
    casez (\fsm_state$167 )
      3'h0:
          if (\$81 ) begin
            if (\$82 ) begin
              \$118  = 3'h1;
            end
          end
      3'h1:
          \$118  = 3'h2;
      3'h2:
          if (\$83 ) begin
            \$118  = 3'h3;
          end
      3'h3:
          \$118  = 3'h4;
      3'h4:
          if (\$84 ) begin
            \$118  = 3'h0;
          end
    endcase
  end
  assign data_read_dma_address = data_read_read_port_dma__addr;
  assign data_read_write_port_dma__addr = data_read_read_port_dma__addr;
  assign data_read_read_port_dma__data = data_read_dma_read_data;
  assign data_read_dma_write_data = data_read_write_port_dma__data;
  assign data_read_dma_write_en = data_read_write_port_dma__en;
  assign data_write_dma_address = data_write_read_port_dma__addr;
  assign data_write_write_port_dma__addr = data_write_read_port_dma__addr;
  assign data_write_read_port_dma__data = data_write_dma_read_data;
  assign data_write_dma_write_data = data_write_write_port_dma__data;
  assign data_write_dma_write_en = data_write_write_port_dma__en;
  assign instruction_read_port__addr = instruction_memory_address[7:0];
  assign instruction_read_address = instruction_memory_address[7:0];
  assign instruction_read_port__data = instruction_read_data;
  assign instruction_write_address = instruction_write_port__addr;
  assign instruction_write_data = instruction_write_port__data;
  assign instruction_write_en = instruction_write_port__en;
  assign instruction_memory_read_data = instruction_read_data;
  assign sync_200_clk = clk_200M;
  assign sync_100_clk = clk_100M;
  assign sync_50_clk = clk_50M;
  assign sync_25_clk = clk_25M;
  assign status = 32'd0;
  assign \bram_address$123  = bram_address;
  assign \bram_write_data$125  = bram_write_data;
  assign \bram_write_enable$127  = bram_write_enable;
  assign \bram_read_data$129  = bram_read_data;
  assign \bram_address$131  = \bram_address$130 ;
  assign \bram_write_data$133  = \bram_write_data$132 ;
  assign \bram_write_enable$135  = \bram_write_enable$134 ;
  assign \bram_read_data$137  = \bram_read_data$136 ;
  assign \bram_address$139  = \bram_address$138 ;
  assign \bram_write_data$141  = \bram_write_data$140 ;
  assign \bram_write_enable$143  = \bram_write_enable$142 ;
  assign \bram_read_data$144  = 32'd0;
  assign \bram_read_data$145  = 32'd0;
  assign \bram_address$147  = \bram_address$146 ;
  assign \bram_write_data$149  = \bram_write_data$148 ;
  assign \bram_write_enable$151  = \bram_write_enable$150 ;
  assign \bram_read_data$153  = \bram_read_data$152 ;
  assign slotIn = slot_B_in;
  assign slotOut = slot_B_out;
  assign slotOutEnable = slot_B_out_enable;
  assign tx = { \$119 , \$119 , \$119 , \$119 , \$119 , \$119  };
  assign \trigger$163  = timer_pulse[0];
  assign \rx$165  = rs422_rx[9];
  assign AWSIZE = 3'h3;
  assign AWBURST = 2'h1;
  assign AWPROT = 3'h0;
  assign WSTRB = 8'hff;
  assign ARSIZE = 3'h3;
  assign ARBURST = 2'h1;
  assign ARPROT = 3'h0;
  assign buzzer = 1'h0;
  assign slot_C_out = 22'h000000;
  assign slot_C_out_enable = 22'h000000;
  assign slot_D_out = 22'h000000;
  assign slot_D_out_enable = 22'h000000;
  always @*
    \$114 [15:4] = pl_ps_interrupts[15:4];
  always @*
    debug_pins[1] = rs422_rx[9];
  always @*
    debug_pins[0] = \tx$166 ;
  always @*
    debug_pins[7] = 1'h0;
  assign rs422_tx[9] = \tx$166 ;
  assign rs422_tx[0] = \$119 ;
  assign rs422_tx[8:1] = 8'h00;
  assign rx[0] = rs422_rx[0];
  assign rx[5:1] = 5'h00;
  assign slot_A_out_enable[7:0] = 8'hff;
  assign slot_A_out_enable[21:8] = 14'h0000;
  assign slot_A_out[7:0] = debug_pins;
  assign slot_A_out[21:8] = 14'h0000;
  assign \$4  = { data_read_axi_address, 1'h0 };
  assign \$5  = { data_read_axi_address, 1'h0 };
  assign \$6 [10:1] = \$5 [10:1];
  assign \$6 [0] = 1'h1;
  assign \$7  = { 31'h00000000, data_read_dma_read_data, 32'h00000000 };
  assign \$9  = { data_write_axi_address, 1'h0 };
  assign \$10  = { data_write_axi_address, 1'h0 };
  assign \$11 [10:1] = \$10 [10:1];
  assign \$11 [0] = 1'h1;
  assign \$20  = { 3'h0, dma_instruction_block_select, 12'h000 };
  assign \$25  = data_memory_write_enable;
endmodule

(* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:103" *)
(* generator = "Amaranth" *)
module \Controller.em_serial_controller (sync_100_rst, rx, \bram_read_data$39 , tx, bram_address, bram_write_data, bram_write_enable, sync_100_clk);
  reg \$auto$verilog_backend.cc:2352:dump_module$2  = 0;
  wire [5:0] \$1 ;
  wire [37:0] \$10 ;
  wire \$100 ;
  wire [7:0] \$101 ;
  wire [16:0] \$102 ;
  wire [6:0] \$103 ;
  wire [7:0] \$104 ;
  wire [8:0] \$105 ;
  wire \$106 ;
  wire \$107 ;
  wire \$108 ;
  wire \$109 ;
  wire \$11 ;
  wire \$110 ;
  wire [3:0] \$111 ;
  wire \$112 ;
  wire [8:0] \$113 ;
  wire [4:0] \$114 ;
  wire [31:0] \$115 ;
  wire [3:0] \$116 ;
  wire [6:0] \$117 ;
  wire [31:0] \$118 ;
  wire [31:0] \$119 ;
  wire \$12 ;
  wire [3:0] \$120 ;
  wire \$121 ;
  wire [3:0] \$122 ;
  wire [3:0] \$123 ;
  wire [4:0] \$124 ;
  wire [4:0] \$125 ;
  wire [31:0] \$126 ;
  wire [3:0] \$127 ;
  wire [6:0] \$128 ;
  wire [31:0] \$129 ;
  wire \$13 ;
  wire [31:0] \$130 ;
  wire [3:0] \$131 ;
  wire [4:0] \$132 ;
  wire [3:0] \$133 ;
  wire [8:0] \$134 ;
  wire [3:0] \$135 ;
  wire [4:0] \$136 ;
  wire [5:0] \$137 ;
  wire [8:0] \$138 ;
  wire [31:0] \$139 ;
  wire \$14 ;
  wire [31:0] \$140 ;
  wire [3:0] \$141 ;
  wire [6:0] \$142 ;
  wire [158:0] \$143 ;
  wire [158:0] \$144 ;
  wire \$145 ;
  wire [8:0] \$146 ;
  reg [15:0] \$147 ;
  reg \$148 ;
  reg [15:0] \$149 ;
  wire \$15 ;
  reg \$150 ;
  reg \$151 ;
  reg \$152 ;
  reg \$153 ;
  reg \$154 ;
  reg \$155 ;
  reg \$156 ;
  reg \$157 ;
  reg [31:0] \$158 ;
  reg \$159 ;
  wire \$16 ;
  reg [4:0] \$160 ;
  reg \$161 ;
  reg \$162 ;
  reg \$163 ;
  reg [7:0] \$164 ;
  reg [7:0] \$165 ;
  reg [7:0] \$166 ;
  reg [1:0] \$167 ;
  reg [1:0] \$168 ;
  reg [2:0] \$169 ;
  wire \$17 ;
  reg [2:0] \$170 ;
  reg [5:0] \$171 ;
  reg [6:0] \$172 ;
  reg [15:0] \$173 ;
  reg \$174 ;
  reg [6:0] \$175 ;
  reg [6:0] \$176 ;
  reg \$177 ;
  reg [15:0] \$178 ;
  reg [2:0] \$179 ;
  wire \$18 ;
  reg [1:0] \$180 ;
  reg [31:0] \$181 ;
  reg [6:0] \$182 ;
  reg [31:0] \$183 ;
  reg [31:0] \$184 ;
  reg [31:0] \$185 ;
  wire [3:0] \$19 ;
  wire [6:0] \$2 ;
  wire \$20 ;
  wire \$21 ;
  wire \$22 ;
  wire \$23 ;
  wire \$24 ;
  wire \$25 ;
  wire \$26 ;
  wire \$27 ;
  wire \$28 ;
  wire \$29 ;
  wire [31:0] \$3 ;
  wire \$30 ;
  wire \$31 ;
  wire \$32 ;
  wire \$33 ;
  wire \$34 ;
  wire \$35 ;
  wire \$36 ;
  wire \$37 ;
  wire \$38 ;
  wire \$39 ;
  wire [1:0] \$4 ;
  wire \$40 ;
  wire \$41 ;
  wire \$42 ;
  wire \$43 ;
  wire \$44 ;
  wire \$45 ;
  wire \$46 ;
  wire \$47 ;
  wire \$48 ;
  wire \$49 ;
  wire [1:0] \$5 ;
  wire \$50 ;
  wire \$51 ;
  wire \$52 ;
  wire [37:0] \$53 ;
  wire \$54 ;
  wire \$55 ;
  wire \$56 ;
  wire \$57 ;
  wire \$58 ;
  wire \$59 ;
  wire [1:0] \$6 ;
  wire [7:0] \$60 ;
  wire [8:0] \$61 ;
  wire [7:0] \$62 ;
  wire [7:0] \$63 ;
  wire [8:0] \$64 ;
  wire \$65 ;
  wire \$66 ;
  wire \$67 ;
  wire \$68 ;
  wire \$69 ;
  wire [37:0] \$7 ;
  wire [3:0] \$70 ;
  wire [3:0] \$71 ;
  wire \$72 ;
  wire [62:0] \$73 ;
  wire [62:0] \$74 ;
  wire [3:0] \$75 ;
  wire [6:0] \$76 ;
  wire [31:0] \$77 ;
  wire [3:0] \$78 ;
  wire [3:0] \$79 ;
  wire [37:0] \$8 ;
  wire [4:0] \$80 ;
  wire [62:0] \$81 ;
  wire [62:0] \$82 ;
  wire \$83 ;
  wire \$84 ;
  wire [7:0] \$85 ;
  wire [8:0] \$86 ;
  wire [6:0] \$87 ;
  wire \$88 ;
  wire \$89 ;
  wire [37:0] \$9 ;
  wire [7:0] \$90 ;
  wire [8:0] \$91 ;
  wire \$92 ;
  wire \$93 ;
  wire [7:0] \$94 ;
  wire [16:0] \$95 ;
  wire \$96 ;
  wire \$97 ;
  wire \$98 ;
  wire \$99 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:143" *)
  reg [31:0] bit_time = 32'd0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:32" *)
  input [15:0] bram_address;
  wire [15:0] bram_address;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:34" *)
  reg [15:0] \bram_address$83  = 16'h0000;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:258" *)
  reg bram_control_mode = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:259" *)
  reg bram_control_mode_comb;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:36" *)
  wire [31:0] bram_read_data;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:34" *)
  output [31:0] \bram_read_data$39 ;
  reg [31:0] \bram_read_data$39 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:33" *)
  input [31:0] bram_write_data;
  wire [31:0] bram_write_data;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:35" *)
  reg [31:0] \bram_write_data$84  = 32'd0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:35" *)
  input bram_write_enable;
  wire bram_write_enable;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:37" *)
  reg \bram_write_enable$82  = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:423" *)
  reg [3:0] bytes_used;
  (* src = "C:\\Program Files\\WindowsApps\\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\\lib\\contextlib.py:142" *)
  reg [4:0] controller_fsm_state = 5'h00;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:173" *)
  reg [5:0] current_cyclic_register = 6'h00;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:155" *)
  reg [7:0] current_device_index = 8'h00;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:156" *)
  reg [7:0] current_enabled_device_index = 8'h00;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:164" *)
  reg [1:0] current_rx_byte_index = 2'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:165" *)
  reg [2:0] current_rx_word_index = 3'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:215" *)
  wire [4:0] current_tx_bit_index;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:163" *)
  reg [1:0] current_tx_byte_index = 2'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:166" *)
  reg [2:0] current_tx_word_index = 3'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:180" *)
  reg cyclic_data_enabled = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:185" *)
  wire [2:0] cyclic_read_data_size;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:186" *)
  wire [1:0] cyclic_read_data_starting_byte_index;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:175" *)
  reg [2:0] cyclic_register_size = 3'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:177" *)
  wire [4:0] cyclic_register_starting_bit_index;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:176" *)
  reg [1:0] cyclic_register_starting_byte_index = 2'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:187" *)
  wire [2:0] cyclic_write_data_size;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:188" *)
  wire [1:0] cyclic_write_data_starting_byte_index;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:98" *)
  reg [4:0] debugPins;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:99" *)
  reg [4:0] debugPins_fsm;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\memory.py:240" *)
  wire [11:0] externalReadPort__addr;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\memory.py:241" *)
  wire [31:0] externalReadPort__data;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\memory.py:401" *)
  wire [11:0] externalWritePort__addr;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\memory.py:402" *)
  reg [31:0] externalWritePort__data;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\memory.py:400" *)
  reg externalWritePort__en;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:251" *)
  reg get_rx_register_config_first_read_delay = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:251" *)
  reg get_rx_register_config_read_delay = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:251" *)
  reg get_tx_device_config_wait_read_delay = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:131" *)
  reg [15:0] internalBramAddress = 16'h0000;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:132" *)
  wire [31:0] internalBramReadData;
  (* init = 32'd0 *)
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:133" *)
  wire [31:0] internalBramWriteData;
  (* init = 1'h0 *)
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:134" *)
  wire internalBramWriteEnable;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\memory.py:240" *)
  wire [11:0] internalReadPort__addr;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\memory.py:241" *)
  wire [31:0] internalReadPort__data;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\memory.py:401" *)
  wire [11:0] internalWritePort__addr;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\memory.py:402" *)
  reg [31:0] internalWritePort__data = 32'd0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\memory.py:400" *)
  reg internalWritePort__en = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:218" *)
  wire [31:0] internal_read_port_masked_bytes;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:282" *)
  reg [15:0] last_bram_address = 16'h0000;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:157" *)
  reg [7:0] last_enabled_device_index = 8'h00;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:427" *)
  reg [2:0] offset;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:169" *)
  reg [15:0] pre_timer = 16'h0000;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:161" *)
  reg [6:0] previous_rx_packet_size = 7'h00;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:37" *)
  input rx;
  wire rx;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:37" *)
  wire \rx$1 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:153" *)
  reg [31:0] rx_data = 32'd0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:94" *)
  reg rx_invalid_crc_fault;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:96" *)
  reg rx_no_response_fault;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:95" *)
  reg rx_not_finished_fault;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:160" *)
  reg [6:0] rx_packet_size = 7'h00;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:221" *)
  wire [31:0] serial_port_control_data;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:233" *)
  wire serial_port_rx_busy;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:234" *)
  wire serial_port_rx_crc_valid;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:231" *)
  wire serial_port_rx_done;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:223" *)
  reg serial_port_rx_trigger;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:232" *)
  wire serial_port_tx_busy;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:230" *)
  wire serial_port_tx_done;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:222" *)
  reg serial_port_tx_trigger;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:251" *)
  reg start_rx_read_delay = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:142" *)
  reg start_transfers = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:273" *)
  input sync_100_clk;
  wire sync_100_clk;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:273" *)
  input sync_100_rst;
  wire sync_100_rst;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:168" *)
  reg [6:0] timer = 7'h00;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:40" *)
  output tx;
  wire tx;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:40" *)
  wire \tx$3 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:152" *)
  reg [31:0] tx_data = 32'd0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:159" *)
  reg [6:0] tx_packet_size = 7'h00;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:144" *)
  reg update_busy = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:145" *)
  reg update_done = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:146" *)
  reg update_error = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:170" *)
  reg update_word_time = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:202" *)
  reg use_future_device_bram;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:203" *)
  reg use_previous_device_bram;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:251" *)
  reg wait_for_final_rx_packet_read_delay = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:251" *)
  reg wait_tx_start_read_status_read_delay = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:171" *)
  reg [15:0] word_time = 16'h0000;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:123" *)
  reg [31:0] memory [4095:0];
  initial begin
    memory[0] = 32'd0;
    memory[1] = 32'd0;
    memory[2] = 32'd0;
    memory[3] = 32'd0;
    memory[4] = 32'd0;
    memory[5] = 32'd0;
    memory[6] = 32'd0;
    memory[7] = 32'd0;
    memory[8] = 32'd0;
    memory[9] = 32'd0;
    memory[10] = 32'd0;
    memory[11] = 32'd0;
    memory[12] = 32'd0;
    memory[13] = 32'd0;
    memory[14] = 32'd0;
    memory[15] = 32'd0;
    memory[16] = 32'd0;
    memory[17] = 32'd0;
    memory[18] = 32'd0;
    memory[19] = 32'd0;
    memory[20] = 32'd0;
    memory[21] = 32'd0;
    memory[22] = 32'd0;
    memory[23] = 32'd0;
    memory[24] = 32'd0;
    memory[25] = 32'd0;
    memory[26] = 32'd0;
    memory[27] = 32'd0;
    memory[28] = 32'd0;
    memory[29] = 32'd0;
    memory[30] = 32'd0;
    memory[31] = 32'd0;
    memory[32] = 32'd0;
    memory[33] = 32'd0;
    memory[34] = 32'd0;
    memory[35] = 32'd0;
    memory[36] = 32'd0;
    memory[37] = 32'd0;
    memory[38] = 32'd0;
    memory[39] = 32'd0;
    memory[40] = 32'd0;
    memory[41] = 32'd0;
    memory[42] = 32'd0;
    memory[43] = 32'd0;
    memory[44] = 32'd0;
    memory[45] = 32'd0;
    memory[46] = 32'd0;
    memory[47] = 32'd0;
    memory[48] = 32'd0;
    memory[49] = 32'd0;
    memory[50] = 32'd0;
    memory[51] = 32'd0;
    memory[52] = 32'd0;
    memory[53] = 32'd0;
    memory[54] = 32'd0;
    memory[55] = 32'd0;
    memory[56] = 32'd0;
    memory[57] = 32'd0;
    memory[58] = 32'd0;
    memory[59] = 32'd0;
    memory[60] = 32'd0;
    memory[61] = 32'd0;
    memory[62] = 32'd0;
    memory[63] = 32'd0;
    memory[64] = 32'd0;
    memory[65] = 32'd0;
    memory[66] = 32'd0;
    memory[67] = 32'd0;
    memory[68] = 32'd0;
    memory[69] = 32'd0;
    memory[70] = 32'd0;
    memory[71] = 32'd0;
    memory[72] = 32'd0;
    memory[73] = 32'd0;
    memory[74] = 32'd0;
    memory[75] = 32'd0;
    memory[76] = 32'd0;
    memory[77] = 32'd0;
    memory[78] = 32'd0;
    memory[79] = 32'd0;
    memory[80] = 32'd0;
    memory[81] = 32'd0;
    memory[82] = 32'd0;
    memory[83] = 32'd0;
    memory[84] = 32'd0;
    memory[85] = 32'd0;
    memory[86] = 32'd0;
    memory[87] = 32'd0;
    memory[88] = 32'd0;
    memory[89] = 32'd0;
    memory[90] = 32'd0;
    memory[91] = 32'd0;
    memory[92] = 32'd0;
    memory[93] = 32'd0;
    memory[94] = 32'd0;
    memory[95] = 32'd0;
    memory[96] = 32'd0;
    memory[97] = 32'd0;
    memory[98] = 32'd0;
    memory[99] = 32'd0;
    memory[100] = 32'd0;
    memory[101] = 32'd0;
    memory[102] = 32'd0;
    memory[103] = 32'd0;
    memory[104] = 32'd0;
    memory[105] = 32'd0;
    memory[106] = 32'd0;
    memory[107] = 32'd0;
    memory[108] = 32'd0;
    memory[109] = 32'd0;
    memory[110] = 32'd0;
    memory[111] = 32'd0;
    memory[112] = 32'd0;
    memory[113] = 32'd0;
    memory[114] = 32'd0;
    memory[115] = 32'd0;
    memory[116] = 32'd0;
    memory[117] = 32'd0;
    memory[118] = 32'd0;
    memory[119] = 32'd0;
    memory[120] = 32'd0;
    memory[121] = 32'd0;
    memory[122] = 32'd0;
    memory[123] = 32'd0;
    memory[124] = 32'd0;
    memory[125] = 32'd0;
    memory[126] = 32'd0;
    memory[127] = 32'd0;
    memory[128] = 32'd0;
    memory[129] = 32'd0;
    memory[130] = 32'd0;
    memory[131] = 32'd0;
    memory[132] = 32'd0;
    memory[133] = 32'd0;
    memory[134] = 32'd0;
    memory[135] = 32'd0;
    memory[136] = 32'd0;
    memory[137] = 32'd0;
    memory[138] = 32'd0;
    memory[139] = 32'd0;
    memory[140] = 32'd0;
    memory[141] = 32'd0;
    memory[142] = 32'd0;
    memory[143] = 32'd0;
    memory[144] = 32'd0;
    memory[145] = 32'd0;
    memory[146] = 32'd0;
    memory[147] = 32'd0;
    memory[148] = 32'd0;
    memory[149] = 32'd0;
    memory[150] = 32'd0;
    memory[151] = 32'd0;
    memory[152] = 32'd0;
    memory[153] = 32'd0;
    memory[154] = 32'd0;
    memory[155] = 32'd0;
    memory[156] = 32'd0;
    memory[157] = 32'd0;
    memory[158] = 32'd0;
    memory[159] = 32'd0;
    memory[160] = 32'd0;
    memory[161] = 32'd0;
    memory[162] = 32'd0;
    memory[163] = 32'd0;
    memory[164] = 32'd0;
    memory[165] = 32'd0;
    memory[166] = 32'd0;
    memory[167] = 32'd0;
    memory[168] = 32'd0;
    memory[169] = 32'd0;
    memory[170] = 32'd0;
    memory[171] = 32'd0;
    memory[172] = 32'd0;
    memory[173] = 32'd0;
    memory[174] = 32'd0;
    memory[175] = 32'd0;
    memory[176] = 32'd0;
    memory[177] = 32'd0;
    memory[178] = 32'd0;
    memory[179] = 32'd0;
    memory[180] = 32'd0;
    memory[181] = 32'd0;
    memory[182] = 32'd0;
    memory[183] = 32'd0;
    memory[184] = 32'd0;
    memory[185] = 32'd0;
    memory[186] = 32'd0;
    memory[187] = 32'd0;
    memory[188] = 32'd0;
    memory[189] = 32'd0;
    memory[190] = 32'd0;
    memory[191] = 32'd0;
    memory[192] = 32'd0;
    memory[193] = 32'd0;
    memory[194] = 32'd0;
    memory[195] = 32'd0;
    memory[196] = 32'd0;
    memory[197] = 32'd0;
    memory[198] = 32'd0;
    memory[199] = 32'd0;
    memory[200] = 32'd0;
    memory[201] = 32'd0;
    memory[202] = 32'd0;
    memory[203] = 32'd0;
    memory[204] = 32'd0;
    memory[205] = 32'd0;
    memory[206] = 32'd0;
    memory[207] = 32'd0;
    memory[208] = 32'd0;
    memory[209] = 32'd0;
    memory[210] = 32'd0;
    memory[211] = 32'd0;
    memory[212] = 32'd0;
    memory[213] = 32'd0;
    memory[214] = 32'd0;
    memory[215] = 32'd0;
    memory[216] = 32'd0;
    memory[217] = 32'd0;
    memory[218] = 32'd0;
    memory[219] = 32'd0;
    memory[220] = 32'd0;
    memory[221] = 32'd0;
    memory[222] = 32'd0;
    memory[223] = 32'd0;
    memory[224] = 32'd0;
    memory[225] = 32'd0;
    memory[226] = 32'd0;
    memory[227] = 32'd0;
    memory[228] = 32'd0;
    memory[229] = 32'd0;
    memory[230] = 32'd0;
    memory[231] = 32'd0;
    memory[232] = 32'd0;
    memory[233] = 32'd0;
    memory[234] = 32'd0;
    memory[235] = 32'd0;
    memory[236] = 32'd0;
    memory[237] = 32'd0;
    memory[238] = 32'd0;
    memory[239] = 32'd0;
    memory[240] = 32'd0;
    memory[241] = 32'd0;
    memory[242] = 32'd0;
    memory[243] = 32'd0;
    memory[244] = 32'd0;
    memory[245] = 32'd0;
    memory[246] = 32'd0;
    memory[247] = 32'd0;
    memory[248] = 32'd0;
    memory[249] = 32'd0;
    memory[250] = 32'd0;
    memory[251] = 32'd0;
    memory[252] = 32'd0;
    memory[253] = 32'd0;
    memory[254] = 32'd0;
    memory[255] = 32'd0;
    memory[256] = 32'd0;
    memory[257] = 32'd0;
    memory[258] = 32'd0;
    memory[259] = 32'd0;
    memory[260] = 32'd0;
    memory[261] = 32'd0;
    memory[262] = 32'd0;
    memory[263] = 32'd0;
    memory[264] = 32'd0;
    memory[265] = 32'd0;
    memory[266] = 32'd0;
    memory[267] = 32'd0;
    memory[268] = 32'd0;
    memory[269] = 32'd0;
    memory[270] = 32'd0;
    memory[271] = 32'd0;
    memory[272] = 32'd0;
    memory[273] = 32'd0;
    memory[274] = 32'd0;
    memory[275] = 32'd0;
    memory[276] = 32'd0;
    memory[277] = 32'd0;
    memory[278] = 32'd0;
    memory[279] = 32'd0;
    memory[280] = 32'd0;
    memory[281] = 32'd0;
    memory[282] = 32'd0;
    memory[283] = 32'd0;
    memory[284] = 32'd0;
    memory[285] = 32'd0;
    memory[286] = 32'd0;
    memory[287] = 32'd0;
    memory[288] = 32'd0;
    memory[289] = 32'd0;
    memory[290] = 32'd0;
    memory[291] = 32'd0;
    memory[292] = 32'd0;
    memory[293] = 32'd0;
    memory[294] = 32'd0;
    memory[295] = 32'd0;
    memory[296] = 32'd0;
    memory[297] = 32'd0;
    memory[298] = 32'd0;
    memory[299] = 32'd0;
    memory[300] = 32'd0;
    memory[301] = 32'd0;
    memory[302] = 32'd0;
    memory[303] = 32'd0;
    memory[304] = 32'd0;
    memory[305] = 32'd0;
    memory[306] = 32'd0;
    memory[307] = 32'd0;
    memory[308] = 32'd0;
    memory[309] = 32'd0;
    memory[310] = 32'd0;
    memory[311] = 32'd0;
    memory[312] = 32'd0;
    memory[313] = 32'd0;
    memory[314] = 32'd0;
    memory[315] = 32'd0;
    memory[316] = 32'd0;
    memory[317] = 32'd0;
    memory[318] = 32'd0;
    memory[319] = 32'd0;
    memory[320] = 32'd0;
    memory[321] = 32'd0;
    memory[322] = 32'd0;
    memory[323] = 32'd0;
    memory[324] = 32'd0;
    memory[325] = 32'd0;
    memory[326] = 32'd0;
    memory[327] = 32'd0;
    memory[328] = 32'd0;
    memory[329] = 32'd0;
    memory[330] = 32'd0;
    memory[331] = 32'd0;
    memory[332] = 32'd0;
    memory[333] = 32'd0;
    memory[334] = 32'd0;
    memory[335] = 32'd0;
    memory[336] = 32'd0;
    memory[337] = 32'd0;
    memory[338] = 32'd0;
    memory[339] = 32'd0;
    memory[340] = 32'd0;
    memory[341] = 32'd0;
    memory[342] = 32'd0;
    memory[343] = 32'd0;
    memory[344] = 32'd0;
    memory[345] = 32'd0;
    memory[346] = 32'd0;
    memory[347] = 32'd0;
    memory[348] = 32'd0;
    memory[349] = 32'd0;
    memory[350] = 32'd0;
    memory[351] = 32'd0;
    memory[352] = 32'd0;
    memory[353] = 32'd0;
    memory[354] = 32'd0;
    memory[355] = 32'd0;
    memory[356] = 32'd0;
    memory[357] = 32'd0;
    memory[358] = 32'd0;
    memory[359] = 32'd0;
    memory[360] = 32'd0;
    memory[361] = 32'd0;
    memory[362] = 32'd0;
    memory[363] = 32'd0;
    memory[364] = 32'd0;
    memory[365] = 32'd0;
    memory[366] = 32'd0;
    memory[367] = 32'd0;
    memory[368] = 32'd0;
    memory[369] = 32'd0;
    memory[370] = 32'd0;
    memory[371] = 32'd0;
    memory[372] = 32'd0;
    memory[373] = 32'd0;
    memory[374] = 32'd0;
    memory[375] = 32'd0;
    memory[376] = 32'd0;
    memory[377] = 32'd0;
    memory[378] = 32'd0;
    memory[379] = 32'd0;
    memory[380] = 32'd0;
    memory[381] = 32'd0;
    memory[382] = 32'd0;
    memory[383] = 32'd0;
    memory[384] = 32'd0;
    memory[385] = 32'd0;
    memory[386] = 32'd0;
    memory[387] = 32'd0;
    memory[388] = 32'd0;
    memory[389] = 32'd0;
    memory[390] = 32'd0;
    memory[391] = 32'd0;
    memory[392] = 32'd0;
    memory[393] = 32'd0;
    memory[394] = 32'd0;
    memory[395] = 32'd0;
    memory[396] = 32'd0;
    memory[397] = 32'd0;
    memory[398] = 32'd0;
    memory[399] = 32'd0;
    memory[400] = 32'd0;
    memory[401] = 32'd0;
    memory[402] = 32'd0;
    memory[403] = 32'd0;
    memory[404] = 32'd0;
    memory[405] = 32'd0;
    memory[406] = 32'd0;
    memory[407] = 32'd0;
    memory[408] = 32'd0;
    memory[409] = 32'd0;
    memory[410] = 32'd0;
    memory[411] = 32'd0;
    memory[412] = 32'd0;
    memory[413] = 32'd0;
    memory[414] = 32'd0;
    memory[415] = 32'd0;
    memory[416] = 32'd0;
    memory[417] = 32'd0;
    memory[418] = 32'd0;
    memory[419] = 32'd0;
    memory[420] = 32'd0;
    memory[421] = 32'd0;
    memory[422] = 32'd0;
    memory[423] = 32'd0;
    memory[424] = 32'd0;
    memory[425] = 32'd0;
    memory[426] = 32'd0;
    memory[427] = 32'd0;
    memory[428] = 32'd0;
    memory[429] = 32'd0;
    memory[430] = 32'd0;
    memory[431] = 32'd0;
    memory[432] = 32'd0;
    memory[433] = 32'd0;
    memory[434] = 32'd0;
    memory[435] = 32'd0;
    memory[436] = 32'd0;
    memory[437] = 32'd0;
    memory[438] = 32'd0;
    memory[439] = 32'd0;
    memory[440] = 32'd0;
    memory[441] = 32'd0;
    memory[442] = 32'd0;
    memory[443] = 32'd0;
    memory[444] = 32'd0;
    memory[445] = 32'd0;
    memory[446] = 32'd0;
    memory[447] = 32'd0;
    memory[448] = 32'd0;
    memory[449] = 32'd0;
    memory[450] = 32'd0;
    memory[451] = 32'd0;
    memory[452] = 32'd0;
    memory[453] = 32'd0;
    memory[454] = 32'd0;
    memory[455] = 32'd0;
    memory[456] = 32'd0;
    memory[457] = 32'd0;
    memory[458] = 32'd0;
    memory[459] = 32'd0;
    memory[460] = 32'd0;
    memory[461] = 32'd0;
    memory[462] = 32'd0;
    memory[463] = 32'd0;
    memory[464] = 32'd0;
    memory[465] = 32'd0;
    memory[466] = 32'd0;
    memory[467] = 32'd0;
    memory[468] = 32'd0;
    memory[469] = 32'd0;
    memory[470] = 32'd0;
    memory[471] = 32'd0;
    memory[472] = 32'd0;
    memory[473] = 32'd0;
    memory[474] = 32'd0;
    memory[475] = 32'd0;
    memory[476] = 32'd0;
    memory[477] = 32'd0;
    memory[478] = 32'd0;
    memory[479] = 32'd0;
    memory[480] = 32'd0;
    memory[481] = 32'd0;
    memory[482] = 32'd0;
    memory[483] = 32'd0;
    memory[484] = 32'd0;
    memory[485] = 32'd0;
    memory[486] = 32'd0;
    memory[487] = 32'd0;
    memory[488] = 32'd0;
    memory[489] = 32'd0;
    memory[490] = 32'd0;
    memory[491] = 32'd0;
    memory[492] = 32'd0;
    memory[493] = 32'd0;
    memory[494] = 32'd0;
    memory[495] = 32'd0;
    memory[496] = 32'd0;
    memory[497] = 32'd0;
    memory[498] = 32'd0;
    memory[499] = 32'd0;
    memory[500] = 32'd0;
    memory[501] = 32'd0;
    memory[502] = 32'd0;
    memory[503] = 32'd0;
    memory[504] = 32'd0;
    memory[505] = 32'd0;
    memory[506] = 32'd0;
    memory[507] = 32'd0;
    memory[508] = 32'd0;
    memory[509] = 32'd0;
    memory[510] = 32'd0;
    memory[511] = 32'd0;
    memory[512] = 32'd0;
    memory[513] = 32'd0;
    memory[514] = 32'd0;
    memory[515] = 32'd0;
    memory[516] = 32'd0;
    memory[517] = 32'd0;
    memory[518] = 32'd0;
    memory[519] = 32'd0;
    memory[520] = 32'd0;
    memory[521] = 32'd0;
    memory[522] = 32'd0;
    memory[523] = 32'd0;
    memory[524] = 32'd0;
    memory[525] = 32'd0;
    memory[526] = 32'd0;
    memory[527] = 32'd0;
    memory[528] = 32'd0;
    memory[529] = 32'd0;
    memory[530] = 32'd0;
    memory[531] = 32'd0;
    memory[532] = 32'd0;
    memory[533] = 32'd0;
    memory[534] = 32'd0;
    memory[535] = 32'd0;
    memory[536] = 32'd0;
    memory[537] = 32'd0;
    memory[538] = 32'd0;
    memory[539] = 32'd0;
    memory[540] = 32'd0;
    memory[541] = 32'd0;
    memory[542] = 32'd0;
    memory[543] = 32'd0;
    memory[544] = 32'd0;
    memory[545] = 32'd0;
    memory[546] = 32'd0;
    memory[547] = 32'd0;
    memory[548] = 32'd0;
    memory[549] = 32'd0;
    memory[550] = 32'd0;
    memory[551] = 32'd0;
    memory[552] = 32'd0;
    memory[553] = 32'd0;
    memory[554] = 32'd0;
    memory[555] = 32'd0;
    memory[556] = 32'd0;
    memory[557] = 32'd0;
    memory[558] = 32'd0;
    memory[559] = 32'd0;
    memory[560] = 32'd0;
    memory[561] = 32'd0;
    memory[562] = 32'd0;
    memory[563] = 32'd0;
    memory[564] = 32'd0;
    memory[565] = 32'd0;
    memory[566] = 32'd0;
    memory[567] = 32'd0;
    memory[568] = 32'd0;
    memory[569] = 32'd0;
    memory[570] = 32'd0;
    memory[571] = 32'd0;
    memory[572] = 32'd0;
    memory[573] = 32'd0;
    memory[574] = 32'd0;
    memory[575] = 32'd0;
    memory[576] = 32'd0;
    memory[577] = 32'd0;
    memory[578] = 32'd0;
    memory[579] = 32'd0;
    memory[580] = 32'd0;
    memory[581] = 32'd0;
    memory[582] = 32'd0;
    memory[583] = 32'd0;
    memory[584] = 32'd0;
    memory[585] = 32'd0;
    memory[586] = 32'd0;
    memory[587] = 32'd0;
    memory[588] = 32'd0;
    memory[589] = 32'd0;
    memory[590] = 32'd0;
    memory[591] = 32'd0;
    memory[592] = 32'd0;
    memory[593] = 32'd0;
    memory[594] = 32'd0;
    memory[595] = 32'd0;
    memory[596] = 32'd0;
    memory[597] = 32'd0;
    memory[598] = 32'd0;
    memory[599] = 32'd0;
    memory[600] = 32'd0;
    memory[601] = 32'd0;
    memory[602] = 32'd0;
    memory[603] = 32'd0;
    memory[604] = 32'd0;
    memory[605] = 32'd0;
    memory[606] = 32'd0;
    memory[607] = 32'd0;
    memory[608] = 32'd0;
    memory[609] = 32'd0;
    memory[610] = 32'd0;
    memory[611] = 32'd0;
    memory[612] = 32'd0;
    memory[613] = 32'd0;
    memory[614] = 32'd0;
    memory[615] = 32'd0;
    memory[616] = 32'd0;
    memory[617] = 32'd0;
    memory[618] = 32'd0;
    memory[619] = 32'd0;
    memory[620] = 32'd0;
    memory[621] = 32'd0;
    memory[622] = 32'd0;
    memory[623] = 32'd0;
    memory[624] = 32'd0;
    memory[625] = 32'd0;
    memory[626] = 32'd0;
    memory[627] = 32'd0;
    memory[628] = 32'd0;
    memory[629] = 32'd0;
    memory[630] = 32'd0;
    memory[631] = 32'd0;
    memory[632] = 32'd0;
    memory[633] = 32'd0;
    memory[634] = 32'd0;
    memory[635] = 32'd0;
    memory[636] = 32'd0;
    memory[637] = 32'd0;
    memory[638] = 32'd0;
    memory[639] = 32'd0;
    memory[640] = 32'd0;
    memory[641] = 32'd0;
    memory[642] = 32'd0;
    memory[643] = 32'd0;
    memory[644] = 32'd0;
    memory[645] = 32'd0;
    memory[646] = 32'd0;
    memory[647] = 32'd0;
    memory[648] = 32'd0;
    memory[649] = 32'd0;
    memory[650] = 32'd0;
    memory[651] = 32'd0;
    memory[652] = 32'd0;
    memory[653] = 32'd0;
    memory[654] = 32'd0;
    memory[655] = 32'd0;
    memory[656] = 32'd0;
    memory[657] = 32'd0;
    memory[658] = 32'd0;
    memory[659] = 32'd0;
    memory[660] = 32'd0;
    memory[661] = 32'd0;
    memory[662] = 32'd0;
    memory[663] = 32'd0;
    memory[664] = 32'd0;
    memory[665] = 32'd0;
    memory[666] = 32'd0;
    memory[667] = 32'd0;
    memory[668] = 32'd0;
    memory[669] = 32'd0;
    memory[670] = 32'd0;
    memory[671] = 32'd0;
    memory[672] = 32'd0;
    memory[673] = 32'd0;
    memory[674] = 32'd0;
    memory[675] = 32'd0;
    memory[676] = 32'd0;
    memory[677] = 32'd0;
    memory[678] = 32'd0;
    memory[679] = 32'd0;
    memory[680] = 32'd0;
    memory[681] = 32'd0;
    memory[682] = 32'd0;
    memory[683] = 32'd0;
    memory[684] = 32'd0;
    memory[685] = 32'd0;
    memory[686] = 32'd0;
    memory[687] = 32'd0;
    memory[688] = 32'd0;
    memory[689] = 32'd0;
    memory[690] = 32'd0;
    memory[691] = 32'd0;
    memory[692] = 32'd0;
    memory[693] = 32'd0;
    memory[694] = 32'd0;
    memory[695] = 32'd0;
    memory[696] = 32'd0;
    memory[697] = 32'd0;
    memory[698] = 32'd0;
    memory[699] = 32'd0;
    memory[700] = 32'd0;
    memory[701] = 32'd0;
    memory[702] = 32'd0;
    memory[703] = 32'd0;
    memory[704] = 32'd0;
    memory[705] = 32'd0;
    memory[706] = 32'd0;
    memory[707] = 32'd0;
    memory[708] = 32'd0;
    memory[709] = 32'd0;
    memory[710] = 32'd0;
    memory[711] = 32'd0;
    memory[712] = 32'd0;
    memory[713] = 32'd0;
    memory[714] = 32'd0;
    memory[715] = 32'd0;
    memory[716] = 32'd0;
    memory[717] = 32'd0;
    memory[718] = 32'd0;
    memory[719] = 32'd0;
    memory[720] = 32'd0;
    memory[721] = 32'd0;
    memory[722] = 32'd0;
    memory[723] = 32'd0;
    memory[724] = 32'd0;
    memory[725] = 32'd0;
    memory[726] = 32'd0;
    memory[727] = 32'd0;
    memory[728] = 32'd0;
    memory[729] = 32'd0;
    memory[730] = 32'd0;
    memory[731] = 32'd0;
    memory[732] = 32'd0;
    memory[733] = 32'd0;
    memory[734] = 32'd0;
    memory[735] = 32'd0;
    memory[736] = 32'd0;
    memory[737] = 32'd0;
    memory[738] = 32'd0;
    memory[739] = 32'd0;
    memory[740] = 32'd0;
    memory[741] = 32'd0;
    memory[742] = 32'd0;
    memory[743] = 32'd0;
    memory[744] = 32'd0;
    memory[745] = 32'd0;
    memory[746] = 32'd0;
    memory[747] = 32'd0;
    memory[748] = 32'd0;
    memory[749] = 32'd0;
    memory[750] = 32'd0;
    memory[751] = 32'd0;
    memory[752] = 32'd0;
    memory[753] = 32'd0;
    memory[754] = 32'd0;
    memory[755] = 32'd0;
    memory[756] = 32'd0;
    memory[757] = 32'd0;
    memory[758] = 32'd0;
    memory[759] = 32'd0;
    memory[760] = 32'd0;
    memory[761] = 32'd0;
    memory[762] = 32'd0;
    memory[763] = 32'd0;
    memory[764] = 32'd0;
    memory[765] = 32'd0;
    memory[766] = 32'd0;
    memory[767] = 32'd0;
    memory[768] = 32'd0;
    memory[769] = 32'd0;
    memory[770] = 32'd0;
    memory[771] = 32'd0;
    memory[772] = 32'd0;
    memory[773] = 32'd0;
    memory[774] = 32'd0;
    memory[775] = 32'd0;
    memory[776] = 32'd0;
    memory[777] = 32'd0;
    memory[778] = 32'd0;
    memory[779] = 32'd0;
    memory[780] = 32'd0;
    memory[781] = 32'd0;
    memory[782] = 32'd0;
    memory[783] = 32'd0;
    memory[784] = 32'd0;
    memory[785] = 32'd0;
    memory[786] = 32'd0;
    memory[787] = 32'd0;
    memory[788] = 32'd0;
    memory[789] = 32'd0;
    memory[790] = 32'd0;
    memory[791] = 32'd0;
    memory[792] = 32'd0;
    memory[793] = 32'd0;
    memory[794] = 32'd0;
    memory[795] = 32'd0;
    memory[796] = 32'd0;
    memory[797] = 32'd0;
    memory[798] = 32'd0;
    memory[799] = 32'd0;
    memory[800] = 32'd0;
    memory[801] = 32'd0;
    memory[802] = 32'd0;
    memory[803] = 32'd0;
    memory[804] = 32'd0;
    memory[805] = 32'd0;
    memory[806] = 32'd0;
    memory[807] = 32'd0;
    memory[808] = 32'd0;
    memory[809] = 32'd0;
    memory[810] = 32'd0;
    memory[811] = 32'd0;
    memory[812] = 32'd0;
    memory[813] = 32'd0;
    memory[814] = 32'd0;
    memory[815] = 32'd0;
    memory[816] = 32'd0;
    memory[817] = 32'd0;
    memory[818] = 32'd0;
    memory[819] = 32'd0;
    memory[820] = 32'd0;
    memory[821] = 32'd0;
    memory[822] = 32'd0;
    memory[823] = 32'd0;
    memory[824] = 32'd0;
    memory[825] = 32'd0;
    memory[826] = 32'd0;
    memory[827] = 32'd0;
    memory[828] = 32'd0;
    memory[829] = 32'd0;
    memory[830] = 32'd0;
    memory[831] = 32'd0;
    memory[832] = 32'd0;
    memory[833] = 32'd0;
    memory[834] = 32'd0;
    memory[835] = 32'd0;
    memory[836] = 32'd0;
    memory[837] = 32'd0;
    memory[838] = 32'd0;
    memory[839] = 32'd0;
    memory[840] = 32'd0;
    memory[841] = 32'd0;
    memory[842] = 32'd0;
    memory[843] = 32'd0;
    memory[844] = 32'd0;
    memory[845] = 32'd0;
    memory[846] = 32'd0;
    memory[847] = 32'd0;
    memory[848] = 32'd0;
    memory[849] = 32'd0;
    memory[850] = 32'd0;
    memory[851] = 32'd0;
    memory[852] = 32'd0;
    memory[853] = 32'd0;
    memory[854] = 32'd0;
    memory[855] = 32'd0;
    memory[856] = 32'd0;
    memory[857] = 32'd0;
    memory[858] = 32'd0;
    memory[859] = 32'd0;
    memory[860] = 32'd0;
    memory[861] = 32'd0;
    memory[862] = 32'd0;
    memory[863] = 32'd0;
    memory[864] = 32'd0;
    memory[865] = 32'd0;
    memory[866] = 32'd0;
    memory[867] = 32'd0;
    memory[868] = 32'd0;
    memory[869] = 32'd0;
    memory[870] = 32'd0;
    memory[871] = 32'd0;
    memory[872] = 32'd0;
    memory[873] = 32'd0;
    memory[874] = 32'd0;
    memory[875] = 32'd0;
    memory[876] = 32'd0;
    memory[877] = 32'd0;
    memory[878] = 32'd0;
    memory[879] = 32'd0;
    memory[880] = 32'd0;
    memory[881] = 32'd0;
    memory[882] = 32'd0;
    memory[883] = 32'd0;
    memory[884] = 32'd0;
    memory[885] = 32'd0;
    memory[886] = 32'd0;
    memory[887] = 32'd0;
    memory[888] = 32'd0;
    memory[889] = 32'd0;
    memory[890] = 32'd0;
    memory[891] = 32'd0;
    memory[892] = 32'd0;
    memory[893] = 32'd0;
    memory[894] = 32'd0;
    memory[895] = 32'd0;
    memory[896] = 32'd0;
    memory[897] = 32'd0;
    memory[898] = 32'd0;
    memory[899] = 32'd0;
    memory[900] = 32'd0;
    memory[901] = 32'd0;
    memory[902] = 32'd0;
    memory[903] = 32'd0;
    memory[904] = 32'd0;
    memory[905] = 32'd0;
    memory[906] = 32'd0;
    memory[907] = 32'd0;
    memory[908] = 32'd0;
    memory[909] = 32'd0;
    memory[910] = 32'd0;
    memory[911] = 32'd0;
    memory[912] = 32'd0;
    memory[913] = 32'd0;
    memory[914] = 32'd0;
    memory[915] = 32'd0;
    memory[916] = 32'd0;
    memory[917] = 32'd0;
    memory[918] = 32'd0;
    memory[919] = 32'd0;
    memory[920] = 32'd0;
    memory[921] = 32'd0;
    memory[922] = 32'd0;
    memory[923] = 32'd0;
    memory[924] = 32'd0;
    memory[925] = 32'd0;
    memory[926] = 32'd0;
    memory[927] = 32'd0;
    memory[928] = 32'd0;
    memory[929] = 32'd0;
    memory[930] = 32'd0;
    memory[931] = 32'd0;
    memory[932] = 32'd0;
    memory[933] = 32'd0;
    memory[934] = 32'd0;
    memory[935] = 32'd0;
    memory[936] = 32'd0;
    memory[937] = 32'd0;
    memory[938] = 32'd0;
    memory[939] = 32'd0;
    memory[940] = 32'd0;
    memory[941] = 32'd0;
    memory[942] = 32'd0;
    memory[943] = 32'd0;
    memory[944] = 32'd0;
    memory[945] = 32'd0;
    memory[946] = 32'd0;
    memory[947] = 32'd0;
    memory[948] = 32'd0;
    memory[949] = 32'd0;
    memory[950] = 32'd0;
    memory[951] = 32'd0;
    memory[952] = 32'd0;
    memory[953] = 32'd0;
    memory[954] = 32'd0;
    memory[955] = 32'd0;
    memory[956] = 32'd0;
    memory[957] = 32'd0;
    memory[958] = 32'd0;
    memory[959] = 32'd0;
    memory[960] = 32'd0;
    memory[961] = 32'd0;
    memory[962] = 32'd0;
    memory[963] = 32'd0;
    memory[964] = 32'd0;
    memory[965] = 32'd0;
    memory[966] = 32'd0;
    memory[967] = 32'd0;
    memory[968] = 32'd0;
    memory[969] = 32'd0;
    memory[970] = 32'd0;
    memory[971] = 32'd0;
    memory[972] = 32'd0;
    memory[973] = 32'd0;
    memory[974] = 32'd0;
    memory[975] = 32'd0;
    memory[976] = 32'd0;
    memory[977] = 32'd0;
    memory[978] = 32'd0;
    memory[979] = 32'd0;
    memory[980] = 32'd0;
    memory[981] = 32'd0;
    memory[982] = 32'd0;
    memory[983] = 32'd0;
    memory[984] = 32'd0;
    memory[985] = 32'd0;
    memory[986] = 32'd0;
    memory[987] = 32'd0;
    memory[988] = 32'd0;
    memory[989] = 32'd0;
    memory[990] = 32'd0;
    memory[991] = 32'd0;
    memory[992] = 32'd0;
    memory[993] = 32'd0;
    memory[994] = 32'd0;
    memory[995] = 32'd0;
    memory[996] = 32'd0;
    memory[997] = 32'd0;
    memory[998] = 32'd0;
    memory[999] = 32'd0;
    memory[1000] = 32'd0;
    memory[1001] = 32'd0;
    memory[1002] = 32'd0;
    memory[1003] = 32'd0;
    memory[1004] = 32'd0;
    memory[1005] = 32'd0;
    memory[1006] = 32'd0;
    memory[1007] = 32'd0;
    memory[1008] = 32'd0;
    memory[1009] = 32'd0;
    memory[1010] = 32'd0;
    memory[1011] = 32'd0;
    memory[1012] = 32'd0;
    memory[1013] = 32'd0;
    memory[1014] = 32'd0;
    memory[1015] = 32'd0;
    memory[1016] = 32'd0;
    memory[1017] = 32'd0;
    memory[1018] = 32'd0;
    memory[1019] = 32'd0;
    memory[1020] = 32'd0;
    memory[1021] = 32'd0;
    memory[1022] = 32'd0;
    memory[1023] = 32'd0;
    memory[1024] = 32'd0;
    memory[1025] = 32'd0;
    memory[1026] = 32'd0;
    memory[1027] = 32'd0;
    memory[1028] = 32'd0;
    memory[1029] = 32'd0;
    memory[1030] = 32'd0;
    memory[1031] = 32'd0;
    memory[1032] = 32'd0;
    memory[1033] = 32'd0;
    memory[1034] = 32'd0;
    memory[1035] = 32'd0;
    memory[1036] = 32'd0;
    memory[1037] = 32'd0;
    memory[1038] = 32'd0;
    memory[1039] = 32'd0;
    memory[1040] = 32'd0;
    memory[1041] = 32'd0;
    memory[1042] = 32'd0;
    memory[1043] = 32'd0;
    memory[1044] = 32'd0;
    memory[1045] = 32'd0;
    memory[1046] = 32'd0;
    memory[1047] = 32'd0;
    memory[1048] = 32'd0;
    memory[1049] = 32'd0;
    memory[1050] = 32'd0;
    memory[1051] = 32'd0;
    memory[1052] = 32'd0;
    memory[1053] = 32'd0;
    memory[1054] = 32'd0;
    memory[1055] = 32'd0;
    memory[1056] = 32'd0;
    memory[1057] = 32'd0;
    memory[1058] = 32'd0;
    memory[1059] = 32'd0;
    memory[1060] = 32'd0;
    memory[1061] = 32'd0;
    memory[1062] = 32'd0;
    memory[1063] = 32'd0;
    memory[1064] = 32'd0;
    memory[1065] = 32'd0;
    memory[1066] = 32'd0;
    memory[1067] = 32'd0;
    memory[1068] = 32'd0;
    memory[1069] = 32'd0;
    memory[1070] = 32'd0;
    memory[1071] = 32'd0;
    memory[1072] = 32'd0;
    memory[1073] = 32'd0;
    memory[1074] = 32'd0;
    memory[1075] = 32'd0;
    memory[1076] = 32'd0;
    memory[1077] = 32'd0;
    memory[1078] = 32'd0;
    memory[1079] = 32'd0;
    memory[1080] = 32'd0;
    memory[1081] = 32'd0;
    memory[1082] = 32'd0;
    memory[1083] = 32'd0;
    memory[1084] = 32'd0;
    memory[1085] = 32'd0;
    memory[1086] = 32'd0;
    memory[1087] = 32'd0;
    memory[1088] = 32'd0;
    memory[1089] = 32'd0;
    memory[1090] = 32'd0;
    memory[1091] = 32'd0;
    memory[1092] = 32'd0;
    memory[1093] = 32'd0;
    memory[1094] = 32'd0;
    memory[1095] = 32'd0;
    memory[1096] = 32'd0;
    memory[1097] = 32'd0;
    memory[1098] = 32'd0;
    memory[1099] = 32'd0;
    memory[1100] = 32'd0;
    memory[1101] = 32'd0;
    memory[1102] = 32'd0;
    memory[1103] = 32'd0;
    memory[1104] = 32'd0;
    memory[1105] = 32'd0;
    memory[1106] = 32'd0;
    memory[1107] = 32'd0;
    memory[1108] = 32'd0;
    memory[1109] = 32'd0;
    memory[1110] = 32'd0;
    memory[1111] = 32'd0;
    memory[1112] = 32'd0;
    memory[1113] = 32'd0;
    memory[1114] = 32'd0;
    memory[1115] = 32'd0;
    memory[1116] = 32'd0;
    memory[1117] = 32'd0;
    memory[1118] = 32'd0;
    memory[1119] = 32'd0;
    memory[1120] = 32'd0;
    memory[1121] = 32'd0;
    memory[1122] = 32'd0;
    memory[1123] = 32'd0;
    memory[1124] = 32'd0;
    memory[1125] = 32'd0;
    memory[1126] = 32'd0;
    memory[1127] = 32'd0;
    memory[1128] = 32'd0;
    memory[1129] = 32'd0;
    memory[1130] = 32'd0;
    memory[1131] = 32'd0;
    memory[1132] = 32'd0;
    memory[1133] = 32'd0;
    memory[1134] = 32'd0;
    memory[1135] = 32'd0;
    memory[1136] = 32'd0;
    memory[1137] = 32'd0;
    memory[1138] = 32'd0;
    memory[1139] = 32'd0;
    memory[1140] = 32'd0;
    memory[1141] = 32'd0;
    memory[1142] = 32'd0;
    memory[1143] = 32'd0;
    memory[1144] = 32'd0;
    memory[1145] = 32'd0;
    memory[1146] = 32'd0;
    memory[1147] = 32'd0;
    memory[1148] = 32'd0;
    memory[1149] = 32'd0;
    memory[1150] = 32'd0;
    memory[1151] = 32'd0;
    memory[1152] = 32'd0;
    memory[1153] = 32'd0;
    memory[1154] = 32'd0;
    memory[1155] = 32'd0;
    memory[1156] = 32'd0;
    memory[1157] = 32'd0;
    memory[1158] = 32'd0;
    memory[1159] = 32'd0;
    memory[1160] = 32'd0;
    memory[1161] = 32'd0;
    memory[1162] = 32'd0;
    memory[1163] = 32'd0;
    memory[1164] = 32'd0;
    memory[1165] = 32'd0;
    memory[1166] = 32'd0;
    memory[1167] = 32'd0;
    memory[1168] = 32'd0;
    memory[1169] = 32'd0;
    memory[1170] = 32'd0;
    memory[1171] = 32'd0;
    memory[1172] = 32'd0;
    memory[1173] = 32'd0;
    memory[1174] = 32'd0;
    memory[1175] = 32'd0;
    memory[1176] = 32'd0;
    memory[1177] = 32'd0;
    memory[1178] = 32'd0;
    memory[1179] = 32'd0;
    memory[1180] = 32'd0;
    memory[1181] = 32'd0;
    memory[1182] = 32'd0;
    memory[1183] = 32'd0;
    memory[1184] = 32'd0;
    memory[1185] = 32'd0;
    memory[1186] = 32'd0;
    memory[1187] = 32'd0;
    memory[1188] = 32'd0;
    memory[1189] = 32'd0;
    memory[1190] = 32'd0;
    memory[1191] = 32'd0;
    memory[1192] = 32'd0;
    memory[1193] = 32'd0;
    memory[1194] = 32'd0;
    memory[1195] = 32'd0;
    memory[1196] = 32'd0;
    memory[1197] = 32'd0;
    memory[1198] = 32'd0;
    memory[1199] = 32'd0;
    memory[1200] = 32'd0;
    memory[1201] = 32'd0;
    memory[1202] = 32'd0;
    memory[1203] = 32'd0;
    memory[1204] = 32'd0;
    memory[1205] = 32'd0;
    memory[1206] = 32'd0;
    memory[1207] = 32'd0;
    memory[1208] = 32'd0;
    memory[1209] = 32'd0;
    memory[1210] = 32'd0;
    memory[1211] = 32'd0;
    memory[1212] = 32'd0;
    memory[1213] = 32'd0;
    memory[1214] = 32'd0;
    memory[1215] = 32'd0;
    memory[1216] = 32'd0;
    memory[1217] = 32'd0;
    memory[1218] = 32'd0;
    memory[1219] = 32'd0;
    memory[1220] = 32'd0;
    memory[1221] = 32'd0;
    memory[1222] = 32'd0;
    memory[1223] = 32'd0;
    memory[1224] = 32'd0;
    memory[1225] = 32'd0;
    memory[1226] = 32'd0;
    memory[1227] = 32'd0;
    memory[1228] = 32'd0;
    memory[1229] = 32'd0;
    memory[1230] = 32'd0;
    memory[1231] = 32'd0;
    memory[1232] = 32'd0;
    memory[1233] = 32'd0;
    memory[1234] = 32'd0;
    memory[1235] = 32'd0;
    memory[1236] = 32'd0;
    memory[1237] = 32'd0;
    memory[1238] = 32'd0;
    memory[1239] = 32'd0;
    memory[1240] = 32'd0;
    memory[1241] = 32'd0;
    memory[1242] = 32'd0;
    memory[1243] = 32'd0;
    memory[1244] = 32'd0;
    memory[1245] = 32'd0;
    memory[1246] = 32'd0;
    memory[1247] = 32'd0;
    memory[1248] = 32'd0;
    memory[1249] = 32'd0;
    memory[1250] = 32'd0;
    memory[1251] = 32'd0;
    memory[1252] = 32'd0;
    memory[1253] = 32'd0;
    memory[1254] = 32'd0;
    memory[1255] = 32'd0;
    memory[1256] = 32'd0;
    memory[1257] = 32'd0;
    memory[1258] = 32'd0;
    memory[1259] = 32'd0;
    memory[1260] = 32'd0;
    memory[1261] = 32'd0;
    memory[1262] = 32'd0;
    memory[1263] = 32'd0;
    memory[1264] = 32'd0;
    memory[1265] = 32'd0;
    memory[1266] = 32'd0;
    memory[1267] = 32'd0;
    memory[1268] = 32'd0;
    memory[1269] = 32'd0;
    memory[1270] = 32'd0;
    memory[1271] = 32'd0;
    memory[1272] = 32'd0;
    memory[1273] = 32'd0;
    memory[1274] = 32'd0;
    memory[1275] = 32'd0;
    memory[1276] = 32'd0;
    memory[1277] = 32'd0;
    memory[1278] = 32'd0;
    memory[1279] = 32'd0;
    memory[1280] = 32'd0;
    memory[1281] = 32'd0;
    memory[1282] = 32'd0;
    memory[1283] = 32'd0;
    memory[1284] = 32'd0;
    memory[1285] = 32'd0;
    memory[1286] = 32'd0;
    memory[1287] = 32'd0;
    memory[1288] = 32'd0;
    memory[1289] = 32'd0;
    memory[1290] = 32'd0;
    memory[1291] = 32'd0;
    memory[1292] = 32'd0;
    memory[1293] = 32'd0;
    memory[1294] = 32'd0;
    memory[1295] = 32'd0;
    memory[1296] = 32'd0;
    memory[1297] = 32'd0;
    memory[1298] = 32'd0;
    memory[1299] = 32'd0;
    memory[1300] = 32'd0;
    memory[1301] = 32'd0;
    memory[1302] = 32'd0;
    memory[1303] = 32'd0;
    memory[1304] = 32'd0;
    memory[1305] = 32'd0;
    memory[1306] = 32'd0;
    memory[1307] = 32'd0;
    memory[1308] = 32'd0;
    memory[1309] = 32'd0;
    memory[1310] = 32'd0;
    memory[1311] = 32'd0;
    memory[1312] = 32'd0;
    memory[1313] = 32'd0;
    memory[1314] = 32'd0;
    memory[1315] = 32'd0;
    memory[1316] = 32'd0;
    memory[1317] = 32'd0;
    memory[1318] = 32'd0;
    memory[1319] = 32'd0;
    memory[1320] = 32'd0;
    memory[1321] = 32'd0;
    memory[1322] = 32'd0;
    memory[1323] = 32'd0;
    memory[1324] = 32'd0;
    memory[1325] = 32'd0;
    memory[1326] = 32'd0;
    memory[1327] = 32'd0;
    memory[1328] = 32'd0;
    memory[1329] = 32'd0;
    memory[1330] = 32'd0;
    memory[1331] = 32'd0;
    memory[1332] = 32'd0;
    memory[1333] = 32'd0;
    memory[1334] = 32'd0;
    memory[1335] = 32'd0;
    memory[1336] = 32'd0;
    memory[1337] = 32'd0;
    memory[1338] = 32'd0;
    memory[1339] = 32'd0;
    memory[1340] = 32'd0;
    memory[1341] = 32'd0;
    memory[1342] = 32'd0;
    memory[1343] = 32'd0;
    memory[1344] = 32'd0;
    memory[1345] = 32'd0;
    memory[1346] = 32'd0;
    memory[1347] = 32'd0;
    memory[1348] = 32'd0;
    memory[1349] = 32'd0;
    memory[1350] = 32'd0;
    memory[1351] = 32'd0;
    memory[1352] = 32'd0;
    memory[1353] = 32'd0;
    memory[1354] = 32'd0;
    memory[1355] = 32'd0;
    memory[1356] = 32'd0;
    memory[1357] = 32'd0;
    memory[1358] = 32'd0;
    memory[1359] = 32'd0;
    memory[1360] = 32'd0;
    memory[1361] = 32'd0;
    memory[1362] = 32'd0;
    memory[1363] = 32'd0;
    memory[1364] = 32'd0;
    memory[1365] = 32'd0;
    memory[1366] = 32'd0;
    memory[1367] = 32'd0;
    memory[1368] = 32'd0;
    memory[1369] = 32'd0;
    memory[1370] = 32'd0;
    memory[1371] = 32'd0;
    memory[1372] = 32'd0;
    memory[1373] = 32'd0;
    memory[1374] = 32'd0;
    memory[1375] = 32'd0;
    memory[1376] = 32'd0;
    memory[1377] = 32'd0;
    memory[1378] = 32'd0;
    memory[1379] = 32'd0;
    memory[1380] = 32'd0;
    memory[1381] = 32'd0;
    memory[1382] = 32'd0;
    memory[1383] = 32'd0;
    memory[1384] = 32'd0;
    memory[1385] = 32'd0;
    memory[1386] = 32'd0;
    memory[1387] = 32'd0;
    memory[1388] = 32'd0;
    memory[1389] = 32'd0;
    memory[1390] = 32'd0;
    memory[1391] = 32'd0;
    memory[1392] = 32'd0;
    memory[1393] = 32'd0;
    memory[1394] = 32'd0;
    memory[1395] = 32'd0;
    memory[1396] = 32'd0;
    memory[1397] = 32'd0;
    memory[1398] = 32'd0;
    memory[1399] = 32'd0;
    memory[1400] = 32'd0;
    memory[1401] = 32'd0;
    memory[1402] = 32'd0;
    memory[1403] = 32'd0;
    memory[1404] = 32'd0;
    memory[1405] = 32'd0;
    memory[1406] = 32'd0;
    memory[1407] = 32'd0;
    memory[1408] = 32'd0;
    memory[1409] = 32'd0;
    memory[1410] = 32'd0;
    memory[1411] = 32'd0;
    memory[1412] = 32'd0;
    memory[1413] = 32'd0;
    memory[1414] = 32'd0;
    memory[1415] = 32'd0;
    memory[1416] = 32'd0;
    memory[1417] = 32'd0;
    memory[1418] = 32'd0;
    memory[1419] = 32'd0;
    memory[1420] = 32'd0;
    memory[1421] = 32'd0;
    memory[1422] = 32'd0;
    memory[1423] = 32'd0;
    memory[1424] = 32'd0;
    memory[1425] = 32'd0;
    memory[1426] = 32'd0;
    memory[1427] = 32'd0;
    memory[1428] = 32'd0;
    memory[1429] = 32'd0;
    memory[1430] = 32'd0;
    memory[1431] = 32'd0;
    memory[1432] = 32'd0;
    memory[1433] = 32'd0;
    memory[1434] = 32'd0;
    memory[1435] = 32'd0;
    memory[1436] = 32'd0;
    memory[1437] = 32'd0;
    memory[1438] = 32'd0;
    memory[1439] = 32'd0;
    memory[1440] = 32'd0;
    memory[1441] = 32'd0;
    memory[1442] = 32'd0;
    memory[1443] = 32'd0;
    memory[1444] = 32'd0;
    memory[1445] = 32'd0;
    memory[1446] = 32'd0;
    memory[1447] = 32'd0;
    memory[1448] = 32'd0;
    memory[1449] = 32'd0;
    memory[1450] = 32'd0;
    memory[1451] = 32'd0;
    memory[1452] = 32'd0;
    memory[1453] = 32'd0;
    memory[1454] = 32'd0;
    memory[1455] = 32'd0;
    memory[1456] = 32'd0;
    memory[1457] = 32'd0;
    memory[1458] = 32'd0;
    memory[1459] = 32'd0;
    memory[1460] = 32'd0;
    memory[1461] = 32'd0;
    memory[1462] = 32'd0;
    memory[1463] = 32'd0;
    memory[1464] = 32'd0;
    memory[1465] = 32'd0;
    memory[1466] = 32'd0;
    memory[1467] = 32'd0;
    memory[1468] = 32'd0;
    memory[1469] = 32'd0;
    memory[1470] = 32'd0;
    memory[1471] = 32'd0;
    memory[1472] = 32'd0;
    memory[1473] = 32'd0;
    memory[1474] = 32'd0;
    memory[1475] = 32'd0;
    memory[1476] = 32'd0;
    memory[1477] = 32'd0;
    memory[1478] = 32'd0;
    memory[1479] = 32'd0;
    memory[1480] = 32'd0;
    memory[1481] = 32'd0;
    memory[1482] = 32'd0;
    memory[1483] = 32'd0;
    memory[1484] = 32'd0;
    memory[1485] = 32'd0;
    memory[1486] = 32'd0;
    memory[1487] = 32'd0;
    memory[1488] = 32'd0;
    memory[1489] = 32'd0;
    memory[1490] = 32'd0;
    memory[1491] = 32'd0;
    memory[1492] = 32'd0;
    memory[1493] = 32'd0;
    memory[1494] = 32'd0;
    memory[1495] = 32'd0;
    memory[1496] = 32'd0;
    memory[1497] = 32'd0;
    memory[1498] = 32'd0;
    memory[1499] = 32'd0;
    memory[1500] = 32'd0;
    memory[1501] = 32'd0;
    memory[1502] = 32'd0;
    memory[1503] = 32'd0;
    memory[1504] = 32'd0;
    memory[1505] = 32'd0;
    memory[1506] = 32'd0;
    memory[1507] = 32'd0;
    memory[1508] = 32'd0;
    memory[1509] = 32'd0;
    memory[1510] = 32'd0;
    memory[1511] = 32'd0;
    memory[1512] = 32'd0;
    memory[1513] = 32'd0;
    memory[1514] = 32'd0;
    memory[1515] = 32'd0;
    memory[1516] = 32'd0;
    memory[1517] = 32'd0;
    memory[1518] = 32'd0;
    memory[1519] = 32'd0;
    memory[1520] = 32'd0;
    memory[1521] = 32'd0;
    memory[1522] = 32'd0;
    memory[1523] = 32'd0;
    memory[1524] = 32'd0;
    memory[1525] = 32'd0;
    memory[1526] = 32'd0;
    memory[1527] = 32'd0;
    memory[1528] = 32'd0;
    memory[1529] = 32'd0;
    memory[1530] = 32'd0;
    memory[1531] = 32'd0;
    memory[1532] = 32'd0;
    memory[1533] = 32'd0;
    memory[1534] = 32'd0;
    memory[1535] = 32'd0;
    memory[1536] = 32'd0;
    memory[1537] = 32'd0;
    memory[1538] = 32'd0;
    memory[1539] = 32'd0;
    memory[1540] = 32'd0;
    memory[1541] = 32'd0;
    memory[1542] = 32'd0;
    memory[1543] = 32'd0;
    memory[1544] = 32'd0;
    memory[1545] = 32'd0;
    memory[1546] = 32'd0;
    memory[1547] = 32'd0;
    memory[1548] = 32'd0;
    memory[1549] = 32'd0;
    memory[1550] = 32'd0;
    memory[1551] = 32'd0;
    memory[1552] = 32'd0;
    memory[1553] = 32'd0;
    memory[1554] = 32'd0;
    memory[1555] = 32'd0;
    memory[1556] = 32'd0;
    memory[1557] = 32'd0;
    memory[1558] = 32'd0;
    memory[1559] = 32'd0;
    memory[1560] = 32'd0;
    memory[1561] = 32'd0;
    memory[1562] = 32'd0;
    memory[1563] = 32'd0;
    memory[1564] = 32'd0;
    memory[1565] = 32'd0;
    memory[1566] = 32'd0;
    memory[1567] = 32'd0;
    memory[1568] = 32'd0;
    memory[1569] = 32'd0;
    memory[1570] = 32'd0;
    memory[1571] = 32'd0;
    memory[1572] = 32'd0;
    memory[1573] = 32'd0;
    memory[1574] = 32'd0;
    memory[1575] = 32'd0;
    memory[1576] = 32'd0;
    memory[1577] = 32'd0;
    memory[1578] = 32'd0;
    memory[1579] = 32'd0;
    memory[1580] = 32'd0;
    memory[1581] = 32'd0;
    memory[1582] = 32'd0;
    memory[1583] = 32'd0;
    memory[1584] = 32'd0;
    memory[1585] = 32'd0;
    memory[1586] = 32'd0;
    memory[1587] = 32'd0;
    memory[1588] = 32'd0;
    memory[1589] = 32'd0;
    memory[1590] = 32'd0;
    memory[1591] = 32'd0;
    memory[1592] = 32'd0;
    memory[1593] = 32'd0;
    memory[1594] = 32'd0;
    memory[1595] = 32'd0;
    memory[1596] = 32'd0;
    memory[1597] = 32'd0;
    memory[1598] = 32'd0;
    memory[1599] = 32'd0;
    memory[1600] = 32'd0;
    memory[1601] = 32'd0;
    memory[1602] = 32'd0;
    memory[1603] = 32'd0;
    memory[1604] = 32'd0;
    memory[1605] = 32'd0;
    memory[1606] = 32'd0;
    memory[1607] = 32'd0;
    memory[1608] = 32'd0;
    memory[1609] = 32'd0;
    memory[1610] = 32'd0;
    memory[1611] = 32'd0;
    memory[1612] = 32'd0;
    memory[1613] = 32'd0;
    memory[1614] = 32'd0;
    memory[1615] = 32'd0;
    memory[1616] = 32'd0;
    memory[1617] = 32'd0;
    memory[1618] = 32'd0;
    memory[1619] = 32'd0;
    memory[1620] = 32'd0;
    memory[1621] = 32'd0;
    memory[1622] = 32'd0;
    memory[1623] = 32'd0;
    memory[1624] = 32'd0;
    memory[1625] = 32'd0;
    memory[1626] = 32'd0;
    memory[1627] = 32'd0;
    memory[1628] = 32'd0;
    memory[1629] = 32'd0;
    memory[1630] = 32'd0;
    memory[1631] = 32'd0;
    memory[1632] = 32'd0;
    memory[1633] = 32'd0;
    memory[1634] = 32'd0;
    memory[1635] = 32'd0;
    memory[1636] = 32'd0;
    memory[1637] = 32'd0;
    memory[1638] = 32'd0;
    memory[1639] = 32'd0;
    memory[1640] = 32'd0;
    memory[1641] = 32'd0;
    memory[1642] = 32'd0;
    memory[1643] = 32'd0;
    memory[1644] = 32'd0;
    memory[1645] = 32'd0;
    memory[1646] = 32'd0;
    memory[1647] = 32'd0;
    memory[1648] = 32'd0;
    memory[1649] = 32'd0;
    memory[1650] = 32'd0;
    memory[1651] = 32'd0;
    memory[1652] = 32'd0;
    memory[1653] = 32'd0;
    memory[1654] = 32'd0;
    memory[1655] = 32'd0;
    memory[1656] = 32'd0;
    memory[1657] = 32'd0;
    memory[1658] = 32'd0;
    memory[1659] = 32'd0;
    memory[1660] = 32'd0;
    memory[1661] = 32'd0;
    memory[1662] = 32'd0;
    memory[1663] = 32'd0;
    memory[1664] = 32'd0;
    memory[1665] = 32'd0;
    memory[1666] = 32'd0;
    memory[1667] = 32'd0;
    memory[1668] = 32'd0;
    memory[1669] = 32'd0;
    memory[1670] = 32'd0;
    memory[1671] = 32'd0;
    memory[1672] = 32'd0;
    memory[1673] = 32'd0;
    memory[1674] = 32'd0;
    memory[1675] = 32'd0;
    memory[1676] = 32'd0;
    memory[1677] = 32'd0;
    memory[1678] = 32'd0;
    memory[1679] = 32'd0;
    memory[1680] = 32'd0;
    memory[1681] = 32'd0;
    memory[1682] = 32'd0;
    memory[1683] = 32'd0;
    memory[1684] = 32'd0;
    memory[1685] = 32'd0;
    memory[1686] = 32'd0;
    memory[1687] = 32'd0;
    memory[1688] = 32'd0;
    memory[1689] = 32'd0;
    memory[1690] = 32'd0;
    memory[1691] = 32'd0;
    memory[1692] = 32'd0;
    memory[1693] = 32'd0;
    memory[1694] = 32'd0;
    memory[1695] = 32'd0;
    memory[1696] = 32'd0;
    memory[1697] = 32'd0;
    memory[1698] = 32'd0;
    memory[1699] = 32'd0;
    memory[1700] = 32'd0;
    memory[1701] = 32'd0;
    memory[1702] = 32'd0;
    memory[1703] = 32'd0;
    memory[1704] = 32'd0;
    memory[1705] = 32'd0;
    memory[1706] = 32'd0;
    memory[1707] = 32'd0;
    memory[1708] = 32'd0;
    memory[1709] = 32'd0;
    memory[1710] = 32'd0;
    memory[1711] = 32'd0;
    memory[1712] = 32'd0;
    memory[1713] = 32'd0;
    memory[1714] = 32'd0;
    memory[1715] = 32'd0;
    memory[1716] = 32'd0;
    memory[1717] = 32'd0;
    memory[1718] = 32'd0;
    memory[1719] = 32'd0;
    memory[1720] = 32'd0;
    memory[1721] = 32'd0;
    memory[1722] = 32'd0;
    memory[1723] = 32'd0;
    memory[1724] = 32'd0;
    memory[1725] = 32'd0;
    memory[1726] = 32'd0;
    memory[1727] = 32'd0;
    memory[1728] = 32'd0;
    memory[1729] = 32'd0;
    memory[1730] = 32'd0;
    memory[1731] = 32'd0;
    memory[1732] = 32'd0;
    memory[1733] = 32'd0;
    memory[1734] = 32'd0;
    memory[1735] = 32'd0;
    memory[1736] = 32'd0;
    memory[1737] = 32'd0;
    memory[1738] = 32'd0;
    memory[1739] = 32'd0;
    memory[1740] = 32'd0;
    memory[1741] = 32'd0;
    memory[1742] = 32'd0;
    memory[1743] = 32'd0;
    memory[1744] = 32'd0;
    memory[1745] = 32'd0;
    memory[1746] = 32'd0;
    memory[1747] = 32'd0;
    memory[1748] = 32'd0;
    memory[1749] = 32'd0;
    memory[1750] = 32'd0;
    memory[1751] = 32'd0;
    memory[1752] = 32'd0;
    memory[1753] = 32'd0;
    memory[1754] = 32'd0;
    memory[1755] = 32'd0;
    memory[1756] = 32'd0;
    memory[1757] = 32'd0;
    memory[1758] = 32'd0;
    memory[1759] = 32'd0;
    memory[1760] = 32'd0;
    memory[1761] = 32'd0;
    memory[1762] = 32'd0;
    memory[1763] = 32'd0;
    memory[1764] = 32'd0;
    memory[1765] = 32'd0;
    memory[1766] = 32'd0;
    memory[1767] = 32'd0;
    memory[1768] = 32'd0;
    memory[1769] = 32'd0;
    memory[1770] = 32'd0;
    memory[1771] = 32'd0;
    memory[1772] = 32'd0;
    memory[1773] = 32'd0;
    memory[1774] = 32'd0;
    memory[1775] = 32'd0;
    memory[1776] = 32'd0;
    memory[1777] = 32'd0;
    memory[1778] = 32'd0;
    memory[1779] = 32'd0;
    memory[1780] = 32'd0;
    memory[1781] = 32'd0;
    memory[1782] = 32'd0;
    memory[1783] = 32'd0;
    memory[1784] = 32'd0;
    memory[1785] = 32'd0;
    memory[1786] = 32'd0;
    memory[1787] = 32'd0;
    memory[1788] = 32'd0;
    memory[1789] = 32'd0;
    memory[1790] = 32'd0;
    memory[1791] = 32'd0;
    memory[1792] = 32'd0;
    memory[1793] = 32'd0;
    memory[1794] = 32'd0;
    memory[1795] = 32'd0;
    memory[1796] = 32'd0;
    memory[1797] = 32'd0;
    memory[1798] = 32'd0;
    memory[1799] = 32'd0;
    memory[1800] = 32'd0;
    memory[1801] = 32'd0;
    memory[1802] = 32'd0;
    memory[1803] = 32'd0;
    memory[1804] = 32'd0;
    memory[1805] = 32'd0;
    memory[1806] = 32'd0;
    memory[1807] = 32'd0;
    memory[1808] = 32'd0;
    memory[1809] = 32'd0;
    memory[1810] = 32'd0;
    memory[1811] = 32'd0;
    memory[1812] = 32'd0;
    memory[1813] = 32'd0;
    memory[1814] = 32'd0;
    memory[1815] = 32'd0;
    memory[1816] = 32'd0;
    memory[1817] = 32'd0;
    memory[1818] = 32'd0;
    memory[1819] = 32'd0;
    memory[1820] = 32'd0;
    memory[1821] = 32'd0;
    memory[1822] = 32'd0;
    memory[1823] = 32'd0;
    memory[1824] = 32'd0;
    memory[1825] = 32'd0;
    memory[1826] = 32'd0;
    memory[1827] = 32'd0;
    memory[1828] = 32'd0;
    memory[1829] = 32'd0;
    memory[1830] = 32'd0;
    memory[1831] = 32'd0;
    memory[1832] = 32'd0;
    memory[1833] = 32'd0;
    memory[1834] = 32'd0;
    memory[1835] = 32'd0;
    memory[1836] = 32'd0;
    memory[1837] = 32'd0;
    memory[1838] = 32'd0;
    memory[1839] = 32'd0;
    memory[1840] = 32'd0;
    memory[1841] = 32'd0;
    memory[1842] = 32'd0;
    memory[1843] = 32'd0;
    memory[1844] = 32'd0;
    memory[1845] = 32'd0;
    memory[1846] = 32'd0;
    memory[1847] = 32'd0;
    memory[1848] = 32'd0;
    memory[1849] = 32'd0;
    memory[1850] = 32'd0;
    memory[1851] = 32'd0;
    memory[1852] = 32'd0;
    memory[1853] = 32'd0;
    memory[1854] = 32'd0;
    memory[1855] = 32'd0;
    memory[1856] = 32'd0;
    memory[1857] = 32'd0;
    memory[1858] = 32'd0;
    memory[1859] = 32'd0;
    memory[1860] = 32'd0;
    memory[1861] = 32'd0;
    memory[1862] = 32'd0;
    memory[1863] = 32'd0;
    memory[1864] = 32'd0;
    memory[1865] = 32'd0;
    memory[1866] = 32'd0;
    memory[1867] = 32'd0;
    memory[1868] = 32'd0;
    memory[1869] = 32'd0;
    memory[1870] = 32'd0;
    memory[1871] = 32'd0;
    memory[1872] = 32'd0;
    memory[1873] = 32'd0;
    memory[1874] = 32'd0;
    memory[1875] = 32'd0;
    memory[1876] = 32'd0;
    memory[1877] = 32'd0;
    memory[1878] = 32'd0;
    memory[1879] = 32'd0;
    memory[1880] = 32'd0;
    memory[1881] = 32'd0;
    memory[1882] = 32'd0;
    memory[1883] = 32'd0;
    memory[1884] = 32'd0;
    memory[1885] = 32'd0;
    memory[1886] = 32'd0;
    memory[1887] = 32'd0;
    memory[1888] = 32'd0;
    memory[1889] = 32'd0;
    memory[1890] = 32'd0;
    memory[1891] = 32'd0;
    memory[1892] = 32'd0;
    memory[1893] = 32'd0;
    memory[1894] = 32'd0;
    memory[1895] = 32'd0;
    memory[1896] = 32'd0;
    memory[1897] = 32'd0;
    memory[1898] = 32'd0;
    memory[1899] = 32'd0;
    memory[1900] = 32'd0;
    memory[1901] = 32'd0;
    memory[1902] = 32'd0;
    memory[1903] = 32'd0;
    memory[1904] = 32'd0;
    memory[1905] = 32'd0;
    memory[1906] = 32'd0;
    memory[1907] = 32'd0;
    memory[1908] = 32'd0;
    memory[1909] = 32'd0;
    memory[1910] = 32'd0;
    memory[1911] = 32'd0;
    memory[1912] = 32'd0;
    memory[1913] = 32'd0;
    memory[1914] = 32'd0;
    memory[1915] = 32'd0;
    memory[1916] = 32'd0;
    memory[1917] = 32'd0;
    memory[1918] = 32'd0;
    memory[1919] = 32'd0;
    memory[1920] = 32'd0;
    memory[1921] = 32'd0;
    memory[1922] = 32'd0;
    memory[1923] = 32'd0;
    memory[1924] = 32'd0;
    memory[1925] = 32'd0;
    memory[1926] = 32'd0;
    memory[1927] = 32'd0;
    memory[1928] = 32'd0;
    memory[1929] = 32'd0;
    memory[1930] = 32'd0;
    memory[1931] = 32'd0;
    memory[1932] = 32'd0;
    memory[1933] = 32'd0;
    memory[1934] = 32'd0;
    memory[1935] = 32'd0;
    memory[1936] = 32'd0;
    memory[1937] = 32'd0;
    memory[1938] = 32'd0;
    memory[1939] = 32'd0;
    memory[1940] = 32'd0;
    memory[1941] = 32'd0;
    memory[1942] = 32'd0;
    memory[1943] = 32'd0;
    memory[1944] = 32'd0;
    memory[1945] = 32'd0;
    memory[1946] = 32'd0;
    memory[1947] = 32'd0;
    memory[1948] = 32'd0;
    memory[1949] = 32'd0;
    memory[1950] = 32'd0;
    memory[1951] = 32'd0;
    memory[1952] = 32'd0;
    memory[1953] = 32'd0;
    memory[1954] = 32'd0;
    memory[1955] = 32'd0;
    memory[1956] = 32'd0;
    memory[1957] = 32'd0;
    memory[1958] = 32'd0;
    memory[1959] = 32'd0;
    memory[1960] = 32'd0;
    memory[1961] = 32'd0;
    memory[1962] = 32'd0;
    memory[1963] = 32'd0;
    memory[1964] = 32'd0;
    memory[1965] = 32'd0;
    memory[1966] = 32'd0;
    memory[1967] = 32'd0;
    memory[1968] = 32'd0;
    memory[1969] = 32'd0;
    memory[1970] = 32'd0;
    memory[1971] = 32'd0;
    memory[1972] = 32'd0;
    memory[1973] = 32'd0;
    memory[1974] = 32'd0;
    memory[1975] = 32'd0;
    memory[1976] = 32'd0;
    memory[1977] = 32'd0;
    memory[1978] = 32'd0;
    memory[1979] = 32'd0;
    memory[1980] = 32'd0;
    memory[1981] = 32'd0;
    memory[1982] = 32'd0;
    memory[1983] = 32'd0;
    memory[1984] = 32'd0;
    memory[1985] = 32'd0;
    memory[1986] = 32'd0;
    memory[1987] = 32'd0;
    memory[1988] = 32'd0;
    memory[1989] = 32'd0;
    memory[1990] = 32'd0;
    memory[1991] = 32'd0;
    memory[1992] = 32'd0;
    memory[1993] = 32'd0;
    memory[1994] = 32'd0;
    memory[1995] = 32'd0;
    memory[1996] = 32'd0;
    memory[1997] = 32'd0;
    memory[1998] = 32'd0;
    memory[1999] = 32'd0;
    memory[2000] = 32'd0;
    memory[2001] = 32'd0;
    memory[2002] = 32'd0;
    memory[2003] = 32'd0;
    memory[2004] = 32'd0;
    memory[2005] = 32'd0;
    memory[2006] = 32'd0;
    memory[2007] = 32'd0;
    memory[2008] = 32'd0;
    memory[2009] = 32'd0;
    memory[2010] = 32'd0;
    memory[2011] = 32'd0;
    memory[2012] = 32'd0;
    memory[2013] = 32'd0;
    memory[2014] = 32'd0;
    memory[2015] = 32'd0;
    memory[2016] = 32'd0;
    memory[2017] = 32'd0;
    memory[2018] = 32'd0;
    memory[2019] = 32'd0;
    memory[2020] = 32'd0;
    memory[2021] = 32'd0;
    memory[2022] = 32'd0;
    memory[2023] = 32'd0;
    memory[2024] = 32'd0;
    memory[2025] = 32'd0;
    memory[2026] = 32'd0;
    memory[2027] = 32'd0;
    memory[2028] = 32'd0;
    memory[2029] = 32'd0;
    memory[2030] = 32'd0;
    memory[2031] = 32'd0;
    memory[2032] = 32'd0;
    memory[2033] = 32'd0;
    memory[2034] = 32'd0;
    memory[2035] = 32'd0;
    memory[2036] = 32'd0;
    memory[2037] = 32'd0;
    memory[2038] = 32'd0;
    memory[2039] = 32'd0;
    memory[2040] = 32'd0;
    memory[2041] = 32'd0;
    memory[2042] = 32'd0;
    memory[2043] = 32'd0;
    memory[2044] = 32'd0;
    memory[2045] = 32'd0;
    memory[2046] = 32'd0;
    memory[2047] = 32'd0;
    memory[2048] = 32'd0;
    memory[2049] = 32'd0;
    memory[2050] = 32'd0;
    memory[2051] = 32'd0;
    memory[2052] = 32'd0;
    memory[2053] = 32'd0;
    memory[2054] = 32'd0;
    memory[2055] = 32'd0;
    memory[2056] = 32'd0;
    memory[2057] = 32'd0;
    memory[2058] = 32'd0;
    memory[2059] = 32'd0;
    memory[2060] = 32'd0;
    memory[2061] = 32'd0;
    memory[2062] = 32'd0;
    memory[2063] = 32'd0;
    memory[2064] = 32'd0;
    memory[2065] = 32'd0;
    memory[2066] = 32'd0;
    memory[2067] = 32'd0;
    memory[2068] = 32'd0;
    memory[2069] = 32'd0;
    memory[2070] = 32'd0;
    memory[2071] = 32'd0;
    memory[2072] = 32'd0;
    memory[2073] = 32'd0;
    memory[2074] = 32'd0;
    memory[2075] = 32'd0;
    memory[2076] = 32'd0;
    memory[2077] = 32'd0;
    memory[2078] = 32'd0;
    memory[2079] = 32'd0;
    memory[2080] = 32'd0;
    memory[2081] = 32'd0;
    memory[2082] = 32'd0;
    memory[2083] = 32'd0;
    memory[2084] = 32'd0;
    memory[2085] = 32'd0;
    memory[2086] = 32'd0;
    memory[2087] = 32'd0;
    memory[2088] = 32'd0;
    memory[2089] = 32'd0;
    memory[2090] = 32'd0;
    memory[2091] = 32'd0;
    memory[2092] = 32'd0;
    memory[2093] = 32'd0;
    memory[2094] = 32'd0;
    memory[2095] = 32'd0;
    memory[2096] = 32'd0;
    memory[2097] = 32'd0;
    memory[2098] = 32'd0;
    memory[2099] = 32'd0;
    memory[2100] = 32'd0;
    memory[2101] = 32'd0;
    memory[2102] = 32'd0;
    memory[2103] = 32'd0;
    memory[2104] = 32'd0;
    memory[2105] = 32'd0;
    memory[2106] = 32'd0;
    memory[2107] = 32'd0;
    memory[2108] = 32'd0;
    memory[2109] = 32'd0;
    memory[2110] = 32'd0;
    memory[2111] = 32'd0;
    memory[2112] = 32'd0;
    memory[2113] = 32'd0;
    memory[2114] = 32'd0;
    memory[2115] = 32'd0;
    memory[2116] = 32'd0;
    memory[2117] = 32'd0;
    memory[2118] = 32'd0;
    memory[2119] = 32'd0;
    memory[2120] = 32'd0;
    memory[2121] = 32'd0;
    memory[2122] = 32'd0;
    memory[2123] = 32'd0;
    memory[2124] = 32'd0;
    memory[2125] = 32'd0;
    memory[2126] = 32'd0;
    memory[2127] = 32'd0;
    memory[2128] = 32'd0;
    memory[2129] = 32'd0;
    memory[2130] = 32'd0;
    memory[2131] = 32'd0;
    memory[2132] = 32'd0;
    memory[2133] = 32'd0;
    memory[2134] = 32'd0;
    memory[2135] = 32'd0;
    memory[2136] = 32'd0;
    memory[2137] = 32'd0;
    memory[2138] = 32'd0;
    memory[2139] = 32'd0;
    memory[2140] = 32'd0;
    memory[2141] = 32'd0;
    memory[2142] = 32'd0;
    memory[2143] = 32'd0;
    memory[2144] = 32'd0;
    memory[2145] = 32'd0;
    memory[2146] = 32'd0;
    memory[2147] = 32'd0;
    memory[2148] = 32'd0;
    memory[2149] = 32'd0;
    memory[2150] = 32'd0;
    memory[2151] = 32'd0;
    memory[2152] = 32'd0;
    memory[2153] = 32'd0;
    memory[2154] = 32'd0;
    memory[2155] = 32'd0;
    memory[2156] = 32'd0;
    memory[2157] = 32'd0;
    memory[2158] = 32'd0;
    memory[2159] = 32'd0;
    memory[2160] = 32'd0;
    memory[2161] = 32'd0;
    memory[2162] = 32'd0;
    memory[2163] = 32'd0;
    memory[2164] = 32'd0;
    memory[2165] = 32'd0;
    memory[2166] = 32'd0;
    memory[2167] = 32'd0;
    memory[2168] = 32'd0;
    memory[2169] = 32'd0;
    memory[2170] = 32'd0;
    memory[2171] = 32'd0;
    memory[2172] = 32'd0;
    memory[2173] = 32'd0;
    memory[2174] = 32'd0;
    memory[2175] = 32'd0;
    memory[2176] = 32'd0;
    memory[2177] = 32'd0;
    memory[2178] = 32'd0;
    memory[2179] = 32'd0;
    memory[2180] = 32'd0;
    memory[2181] = 32'd0;
    memory[2182] = 32'd0;
    memory[2183] = 32'd0;
    memory[2184] = 32'd0;
    memory[2185] = 32'd0;
    memory[2186] = 32'd0;
    memory[2187] = 32'd0;
    memory[2188] = 32'd0;
    memory[2189] = 32'd0;
    memory[2190] = 32'd0;
    memory[2191] = 32'd0;
    memory[2192] = 32'd0;
    memory[2193] = 32'd0;
    memory[2194] = 32'd0;
    memory[2195] = 32'd0;
    memory[2196] = 32'd0;
    memory[2197] = 32'd0;
    memory[2198] = 32'd0;
    memory[2199] = 32'd0;
    memory[2200] = 32'd0;
    memory[2201] = 32'd0;
    memory[2202] = 32'd0;
    memory[2203] = 32'd0;
    memory[2204] = 32'd0;
    memory[2205] = 32'd0;
    memory[2206] = 32'd0;
    memory[2207] = 32'd0;
    memory[2208] = 32'd0;
    memory[2209] = 32'd0;
    memory[2210] = 32'd0;
    memory[2211] = 32'd0;
    memory[2212] = 32'd0;
    memory[2213] = 32'd0;
    memory[2214] = 32'd0;
    memory[2215] = 32'd0;
    memory[2216] = 32'd0;
    memory[2217] = 32'd0;
    memory[2218] = 32'd0;
    memory[2219] = 32'd0;
    memory[2220] = 32'd0;
    memory[2221] = 32'd0;
    memory[2222] = 32'd0;
    memory[2223] = 32'd0;
    memory[2224] = 32'd0;
    memory[2225] = 32'd0;
    memory[2226] = 32'd0;
    memory[2227] = 32'd0;
    memory[2228] = 32'd0;
    memory[2229] = 32'd0;
    memory[2230] = 32'd0;
    memory[2231] = 32'd0;
    memory[2232] = 32'd0;
    memory[2233] = 32'd0;
    memory[2234] = 32'd0;
    memory[2235] = 32'd0;
    memory[2236] = 32'd0;
    memory[2237] = 32'd0;
    memory[2238] = 32'd0;
    memory[2239] = 32'd0;
    memory[2240] = 32'd0;
    memory[2241] = 32'd0;
    memory[2242] = 32'd0;
    memory[2243] = 32'd0;
    memory[2244] = 32'd0;
    memory[2245] = 32'd0;
    memory[2246] = 32'd0;
    memory[2247] = 32'd0;
    memory[2248] = 32'd0;
    memory[2249] = 32'd0;
    memory[2250] = 32'd0;
    memory[2251] = 32'd0;
    memory[2252] = 32'd0;
    memory[2253] = 32'd0;
    memory[2254] = 32'd0;
    memory[2255] = 32'd0;
    memory[2256] = 32'd0;
    memory[2257] = 32'd0;
    memory[2258] = 32'd0;
    memory[2259] = 32'd0;
    memory[2260] = 32'd0;
    memory[2261] = 32'd0;
    memory[2262] = 32'd0;
    memory[2263] = 32'd0;
    memory[2264] = 32'd0;
    memory[2265] = 32'd0;
    memory[2266] = 32'd0;
    memory[2267] = 32'd0;
    memory[2268] = 32'd0;
    memory[2269] = 32'd0;
    memory[2270] = 32'd0;
    memory[2271] = 32'd0;
    memory[2272] = 32'd0;
    memory[2273] = 32'd0;
    memory[2274] = 32'd0;
    memory[2275] = 32'd0;
    memory[2276] = 32'd0;
    memory[2277] = 32'd0;
    memory[2278] = 32'd0;
    memory[2279] = 32'd0;
    memory[2280] = 32'd0;
    memory[2281] = 32'd0;
    memory[2282] = 32'd0;
    memory[2283] = 32'd0;
    memory[2284] = 32'd0;
    memory[2285] = 32'd0;
    memory[2286] = 32'd0;
    memory[2287] = 32'd0;
    memory[2288] = 32'd0;
    memory[2289] = 32'd0;
    memory[2290] = 32'd0;
    memory[2291] = 32'd0;
    memory[2292] = 32'd0;
    memory[2293] = 32'd0;
    memory[2294] = 32'd0;
    memory[2295] = 32'd0;
    memory[2296] = 32'd0;
    memory[2297] = 32'd0;
    memory[2298] = 32'd0;
    memory[2299] = 32'd0;
    memory[2300] = 32'd0;
    memory[2301] = 32'd0;
    memory[2302] = 32'd0;
    memory[2303] = 32'd0;
    memory[2304] = 32'd0;
    memory[2305] = 32'd0;
    memory[2306] = 32'd0;
    memory[2307] = 32'd0;
    memory[2308] = 32'd0;
    memory[2309] = 32'd0;
    memory[2310] = 32'd0;
    memory[2311] = 32'd0;
    memory[2312] = 32'd0;
    memory[2313] = 32'd0;
    memory[2314] = 32'd0;
    memory[2315] = 32'd0;
    memory[2316] = 32'd0;
    memory[2317] = 32'd0;
    memory[2318] = 32'd0;
    memory[2319] = 32'd0;
    memory[2320] = 32'd0;
    memory[2321] = 32'd0;
    memory[2322] = 32'd0;
    memory[2323] = 32'd0;
    memory[2324] = 32'd0;
    memory[2325] = 32'd0;
    memory[2326] = 32'd0;
    memory[2327] = 32'd0;
    memory[2328] = 32'd0;
    memory[2329] = 32'd0;
    memory[2330] = 32'd0;
    memory[2331] = 32'd0;
    memory[2332] = 32'd0;
    memory[2333] = 32'd0;
    memory[2334] = 32'd0;
    memory[2335] = 32'd0;
    memory[2336] = 32'd0;
    memory[2337] = 32'd0;
    memory[2338] = 32'd0;
    memory[2339] = 32'd0;
    memory[2340] = 32'd0;
    memory[2341] = 32'd0;
    memory[2342] = 32'd0;
    memory[2343] = 32'd0;
    memory[2344] = 32'd0;
    memory[2345] = 32'd0;
    memory[2346] = 32'd0;
    memory[2347] = 32'd0;
    memory[2348] = 32'd0;
    memory[2349] = 32'd0;
    memory[2350] = 32'd0;
    memory[2351] = 32'd0;
    memory[2352] = 32'd0;
    memory[2353] = 32'd0;
    memory[2354] = 32'd0;
    memory[2355] = 32'd0;
    memory[2356] = 32'd0;
    memory[2357] = 32'd0;
    memory[2358] = 32'd0;
    memory[2359] = 32'd0;
    memory[2360] = 32'd0;
    memory[2361] = 32'd0;
    memory[2362] = 32'd0;
    memory[2363] = 32'd0;
    memory[2364] = 32'd0;
    memory[2365] = 32'd0;
    memory[2366] = 32'd0;
    memory[2367] = 32'd0;
    memory[2368] = 32'd0;
    memory[2369] = 32'd0;
    memory[2370] = 32'd0;
    memory[2371] = 32'd0;
    memory[2372] = 32'd0;
    memory[2373] = 32'd0;
    memory[2374] = 32'd0;
    memory[2375] = 32'd0;
    memory[2376] = 32'd0;
    memory[2377] = 32'd0;
    memory[2378] = 32'd0;
    memory[2379] = 32'd0;
    memory[2380] = 32'd0;
    memory[2381] = 32'd0;
    memory[2382] = 32'd0;
    memory[2383] = 32'd0;
    memory[2384] = 32'd0;
    memory[2385] = 32'd0;
    memory[2386] = 32'd0;
    memory[2387] = 32'd0;
    memory[2388] = 32'd0;
    memory[2389] = 32'd0;
    memory[2390] = 32'd0;
    memory[2391] = 32'd0;
    memory[2392] = 32'd0;
    memory[2393] = 32'd0;
    memory[2394] = 32'd0;
    memory[2395] = 32'd0;
    memory[2396] = 32'd0;
    memory[2397] = 32'd0;
    memory[2398] = 32'd0;
    memory[2399] = 32'd0;
    memory[2400] = 32'd0;
    memory[2401] = 32'd0;
    memory[2402] = 32'd0;
    memory[2403] = 32'd0;
    memory[2404] = 32'd0;
    memory[2405] = 32'd0;
    memory[2406] = 32'd0;
    memory[2407] = 32'd0;
    memory[2408] = 32'd0;
    memory[2409] = 32'd0;
    memory[2410] = 32'd0;
    memory[2411] = 32'd0;
    memory[2412] = 32'd0;
    memory[2413] = 32'd0;
    memory[2414] = 32'd0;
    memory[2415] = 32'd0;
    memory[2416] = 32'd0;
    memory[2417] = 32'd0;
    memory[2418] = 32'd0;
    memory[2419] = 32'd0;
    memory[2420] = 32'd0;
    memory[2421] = 32'd0;
    memory[2422] = 32'd0;
    memory[2423] = 32'd0;
    memory[2424] = 32'd0;
    memory[2425] = 32'd0;
    memory[2426] = 32'd0;
    memory[2427] = 32'd0;
    memory[2428] = 32'd0;
    memory[2429] = 32'd0;
    memory[2430] = 32'd0;
    memory[2431] = 32'd0;
    memory[2432] = 32'd0;
    memory[2433] = 32'd0;
    memory[2434] = 32'd0;
    memory[2435] = 32'd0;
    memory[2436] = 32'd0;
    memory[2437] = 32'd0;
    memory[2438] = 32'd0;
    memory[2439] = 32'd0;
    memory[2440] = 32'd0;
    memory[2441] = 32'd0;
    memory[2442] = 32'd0;
    memory[2443] = 32'd0;
    memory[2444] = 32'd0;
    memory[2445] = 32'd0;
    memory[2446] = 32'd0;
    memory[2447] = 32'd0;
    memory[2448] = 32'd0;
    memory[2449] = 32'd0;
    memory[2450] = 32'd0;
    memory[2451] = 32'd0;
    memory[2452] = 32'd0;
    memory[2453] = 32'd0;
    memory[2454] = 32'd0;
    memory[2455] = 32'd0;
    memory[2456] = 32'd0;
    memory[2457] = 32'd0;
    memory[2458] = 32'd0;
    memory[2459] = 32'd0;
    memory[2460] = 32'd0;
    memory[2461] = 32'd0;
    memory[2462] = 32'd0;
    memory[2463] = 32'd0;
    memory[2464] = 32'd0;
    memory[2465] = 32'd0;
    memory[2466] = 32'd0;
    memory[2467] = 32'd0;
    memory[2468] = 32'd0;
    memory[2469] = 32'd0;
    memory[2470] = 32'd0;
    memory[2471] = 32'd0;
    memory[2472] = 32'd0;
    memory[2473] = 32'd0;
    memory[2474] = 32'd0;
    memory[2475] = 32'd0;
    memory[2476] = 32'd0;
    memory[2477] = 32'd0;
    memory[2478] = 32'd0;
    memory[2479] = 32'd0;
    memory[2480] = 32'd0;
    memory[2481] = 32'd0;
    memory[2482] = 32'd0;
    memory[2483] = 32'd0;
    memory[2484] = 32'd0;
    memory[2485] = 32'd0;
    memory[2486] = 32'd0;
    memory[2487] = 32'd0;
    memory[2488] = 32'd0;
    memory[2489] = 32'd0;
    memory[2490] = 32'd0;
    memory[2491] = 32'd0;
    memory[2492] = 32'd0;
    memory[2493] = 32'd0;
    memory[2494] = 32'd0;
    memory[2495] = 32'd0;
    memory[2496] = 32'd0;
    memory[2497] = 32'd0;
    memory[2498] = 32'd0;
    memory[2499] = 32'd0;
    memory[2500] = 32'd0;
    memory[2501] = 32'd0;
    memory[2502] = 32'd0;
    memory[2503] = 32'd0;
    memory[2504] = 32'd0;
    memory[2505] = 32'd0;
    memory[2506] = 32'd0;
    memory[2507] = 32'd0;
    memory[2508] = 32'd0;
    memory[2509] = 32'd0;
    memory[2510] = 32'd0;
    memory[2511] = 32'd0;
    memory[2512] = 32'd0;
    memory[2513] = 32'd0;
    memory[2514] = 32'd0;
    memory[2515] = 32'd0;
    memory[2516] = 32'd0;
    memory[2517] = 32'd0;
    memory[2518] = 32'd0;
    memory[2519] = 32'd0;
    memory[2520] = 32'd0;
    memory[2521] = 32'd0;
    memory[2522] = 32'd0;
    memory[2523] = 32'd0;
    memory[2524] = 32'd0;
    memory[2525] = 32'd0;
    memory[2526] = 32'd0;
    memory[2527] = 32'd0;
    memory[2528] = 32'd0;
    memory[2529] = 32'd0;
    memory[2530] = 32'd0;
    memory[2531] = 32'd0;
    memory[2532] = 32'd0;
    memory[2533] = 32'd0;
    memory[2534] = 32'd0;
    memory[2535] = 32'd0;
    memory[2536] = 32'd0;
    memory[2537] = 32'd0;
    memory[2538] = 32'd0;
    memory[2539] = 32'd0;
    memory[2540] = 32'd0;
    memory[2541] = 32'd0;
    memory[2542] = 32'd0;
    memory[2543] = 32'd0;
    memory[2544] = 32'd0;
    memory[2545] = 32'd0;
    memory[2546] = 32'd0;
    memory[2547] = 32'd0;
    memory[2548] = 32'd0;
    memory[2549] = 32'd0;
    memory[2550] = 32'd0;
    memory[2551] = 32'd0;
    memory[2552] = 32'd0;
    memory[2553] = 32'd0;
    memory[2554] = 32'd0;
    memory[2555] = 32'd0;
    memory[2556] = 32'd0;
    memory[2557] = 32'd0;
    memory[2558] = 32'd0;
    memory[2559] = 32'd0;
    memory[2560] = 32'd0;
    memory[2561] = 32'd0;
    memory[2562] = 32'd0;
    memory[2563] = 32'd0;
    memory[2564] = 32'd0;
    memory[2565] = 32'd0;
    memory[2566] = 32'd0;
    memory[2567] = 32'd0;
    memory[2568] = 32'd0;
    memory[2569] = 32'd0;
    memory[2570] = 32'd0;
    memory[2571] = 32'd0;
    memory[2572] = 32'd0;
    memory[2573] = 32'd0;
    memory[2574] = 32'd0;
    memory[2575] = 32'd0;
    memory[2576] = 32'd0;
    memory[2577] = 32'd0;
    memory[2578] = 32'd0;
    memory[2579] = 32'd0;
    memory[2580] = 32'd0;
    memory[2581] = 32'd0;
    memory[2582] = 32'd0;
    memory[2583] = 32'd0;
    memory[2584] = 32'd0;
    memory[2585] = 32'd0;
    memory[2586] = 32'd0;
    memory[2587] = 32'd0;
    memory[2588] = 32'd0;
    memory[2589] = 32'd0;
    memory[2590] = 32'd0;
    memory[2591] = 32'd0;
    memory[2592] = 32'd0;
    memory[2593] = 32'd0;
    memory[2594] = 32'd0;
    memory[2595] = 32'd0;
    memory[2596] = 32'd0;
    memory[2597] = 32'd0;
    memory[2598] = 32'd0;
    memory[2599] = 32'd0;
    memory[2600] = 32'd0;
    memory[2601] = 32'd0;
    memory[2602] = 32'd0;
    memory[2603] = 32'd0;
    memory[2604] = 32'd0;
    memory[2605] = 32'd0;
    memory[2606] = 32'd0;
    memory[2607] = 32'd0;
    memory[2608] = 32'd0;
    memory[2609] = 32'd0;
    memory[2610] = 32'd0;
    memory[2611] = 32'd0;
    memory[2612] = 32'd0;
    memory[2613] = 32'd0;
    memory[2614] = 32'd0;
    memory[2615] = 32'd0;
    memory[2616] = 32'd0;
    memory[2617] = 32'd0;
    memory[2618] = 32'd0;
    memory[2619] = 32'd0;
    memory[2620] = 32'd0;
    memory[2621] = 32'd0;
    memory[2622] = 32'd0;
    memory[2623] = 32'd0;
    memory[2624] = 32'd0;
    memory[2625] = 32'd0;
    memory[2626] = 32'd0;
    memory[2627] = 32'd0;
    memory[2628] = 32'd0;
    memory[2629] = 32'd0;
    memory[2630] = 32'd0;
    memory[2631] = 32'd0;
    memory[2632] = 32'd0;
    memory[2633] = 32'd0;
    memory[2634] = 32'd0;
    memory[2635] = 32'd0;
    memory[2636] = 32'd0;
    memory[2637] = 32'd0;
    memory[2638] = 32'd0;
    memory[2639] = 32'd0;
    memory[2640] = 32'd0;
    memory[2641] = 32'd0;
    memory[2642] = 32'd0;
    memory[2643] = 32'd0;
    memory[2644] = 32'd0;
    memory[2645] = 32'd0;
    memory[2646] = 32'd0;
    memory[2647] = 32'd0;
    memory[2648] = 32'd0;
    memory[2649] = 32'd0;
    memory[2650] = 32'd0;
    memory[2651] = 32'd0;
    memory[2652] = 32'd0;
    memory[2653] = 32'd0;
    memory[2654] = 32'd0;
    memory[2655] = 32'd0;
    memory[2656] = 32'd0;
    memory[2657] = 32'd0;
    memory[2658] = 32'd0;
    memory[2659] = 32'd0;
    memory[2660] = 32'd0;
    memory[2661] = 32'd0;
    memory[2662] = 32'd0;
    memory[2663] = 32'd0;
    memory[2664] = 32'd0;
    memory[2665] = 32'd0;
    memory[2666] = 32'd0;
    memory[2667] = 32'd0;
    memory[2668] = 32'd0;
    memory[2669] = 32'd0;
    memory[2670] = 32'd0;
    memory[2671] = 32'd0;
    memory[2672] = 32'd0;
    memory[2673] = 32'd0;
    memory[2674] = 32'd0;
    memory[2675] = 32'd0;
    memory[2676] = 32'd0;
    memory[2677] = 32'd0;
    memory[2678] = 32'd0;
    memory[2679] = 32'd0;
    memory[2680] = 32'd0;
    memory[2681] = 32'd0;
    memory[2682] = 32'd0;
    memory[2683] = 32'd0;
    memory[2684] = 32'd0;
    memory[2685] = 32'd0;
    memory[2686] = 32'd0;
    memory[2687] = 32'd0;
    memory[2688] = 32'd0;
    memory[2689] = 32'd0;
    memory[2690] = 32'd0;
    memory[2691] = 32'd0;
    memory[2692] = 32'd0;
    memory[2693] = 32'd0;
    memory[2694] = 32'd0;
    memory[2695] = 32'd0;
    memory[2696] = 32'd0;
    memory[2697] = 32'd0;
    memory[2698] = 32'd0;
    memory[2699] = 32'd0;
    memory[2700] = 32'd0;
    memory[2701] = 32'd0;
    memory[2702] = 32'd0;
    memory[2703] = 32'd0;
    memory[2704] = 32'd0;
    memory[2705] = 32'd0;
    memory[2706] = 32'd0;
    memory[2707] = 32'd0;
    memory[2708] = 32'd0;
    memory[2709] = 32'd0;
    memory[2710] = 32'd0;
    memory[2711] = 32'd0;
    memory[2712] = 32'd0;
    memory[2713] = 32'd0;
    memory[2714] = 32'd0;
    memory[2715] = 32'd0;
    memory[2716] = 32'd0;
    memory[2717] = 32'd0;
    memory[2718] = 32'd0;
    memory[2719] = 32'd0;
    memory[2720] = 32'd0;
    memory[2721] = 32'd0;
    memory[2722] = 32'd0;
    memory[2723] = 32'd0;
    memory[2724] = 32'd0;
    memory[2725] = 32'd0;
    memory[2726] = 32'd0;
    memory[2727] = 32'd0;
    memory[2728] = 32'd0;
    memory[2729] = 32'd0;
    memory[2730] = 32'd0;
    memory[2731] = 32'd0;
    memory[2732] = 32'd0;
    memory[2733] = 32'd0;
    memory[2734] = 32'd0;
    memory[2735] = 32'd0;
    memory[2736] = 32'd0;
    memory[2737] = 32'd0;
    memory[2738] = 32'd0;
    memory[2739] = 32'd0;
    memory[2740] = 32'd0;
    memory[2741] = 32'd0;
    memory[2742] = 32'd0;
    memory[2743] = 32'd0;
    memory[2744] = 32'd0;
    memory[2745] = 32'd0;
    memory[2746] = 32'd0;
    memory[2747] = 32'd0;
    memory[2748] = 32'd0;
    memory[2749] = 32'd0;
    memory[2750] = 32'd0;
    memory[2751] = 32'd0;
    memory[2752] = 32'd0;
    memory[2753] = 32'd0;
    memory[2754] = 32'd0;
    memory[2755] = 32'd0;
    memory[2756] = 32'd0;
    memory[2757] = 32'd0;
    memory[2758] = 32'd0;
    memory[2759] = 32'd0;
    memory[2760] = 32'd0;
    memory[2761] = 32'd0;
    memory[2762] = 32'd0;
    memory[2763] = 32'd0;
    memory[2764] = 32'd0;
    memory[2765] = 32'd0;
    memory[2766] = 32'd0;
    memory[2767] = 32'd0;
    memory[2768] = 32'd0;
    memory[2769] = 32'd0;
    memory[2770] = 32'd0;
    memory[2771] = 32'd0;
    memory[2772] = 32'd0;
    memory[2773] = 32'd0;
    memory[2774] = 32'd0;
    memory[2775] = 32'd0;
    memory[2776] = 32'd0;
    memory[2777] = 32'd0;
    memory[2778] = 32'd0;
    memory[2779] = 32'd0;
    memory[2780] = 32'd0;
    memory[2781] = 32'd0;
    memory[2782] = 32'd0;
    memory[2783] = 32'd0;
    memory[2784] = 32'd0;
    memory[2785] = 32'd0;
    memory[2786] = 32'd0;
    memory[2787] = 32'd0;
    memory[2788] = 32'd0;
    memory[2789] = 32'd0;
    memory[2790] = 32'd0;
    memory[2791] = 32'd0;
    memory[2792] = 32'd0;
    memory[2793] = 32'd0;
    memory[2794] = 32'd0;
    memory[2795] = 32'd0;
    memory[2796] = 32'd0;
    memory[2797] = 32'd0;
    memory[2798] = 32'd0;
    memory[2799] = 32'd0;
    memory[2800] = 32'd0;
    memory[2801] = 32'd0;
    memory[2802] = 32'd0;
    memory[2803] = 32'd0;
    memory[2804] = 32'd0;
    memory[2805] = 32'd0;
    memory[2806] = 32'd0;
    memory[2807] = 32'd0;
    memory[2808] = 32'd0;
    memory[2809] = 32'd0;
    memory[2810] = 32'd0;
    memory[2811] = 32'd0;
    memory[2812] = 32'd0;
    memory[2813] = 32'd0;
    memory[2814] = 32'd0;
    memory[2815] = 32'd0;
    memory[2816] = 32'd0;
    memory[2817] = 32'd0;
    memory[2818] = 32'd0;
    memory[2819] = 32'd0;
    memory[2820] = 32'd0;
    memory[2821] = 32'd0;
    memory[2822] = 32'd0;
    memory[2823] = 32'd0;
    memory[2824] = 32'd0;
    memory[2825] = 32'd0;
    memory[2826] = 32'd0;
    memory[2827] = 32'd0;
    memory[2828] = 32'd0;
    memory[2829] = 32'd0;
    memory[2830] = 32'd0;
    memory[2831] = 32'd0;
    memory[2832] = 32'd0;
    memory[2833] = 32'd0;
    memory[2834] = 32'd0;
    memory[2835] = 32'd0;
    memory[2836] = 32'd0;
    memory[2837] = 32'd0;
    memory[2838] = 32'd0;
    memory[2839] = 32'd0;
    memory[2840] = 32'd0;
    memory[2841] = 32'd0;
    memory[2842] = 32'd0;
    memory[2843] = 32'd0;
    memory[2844] = 32'd0;
    memory[2845] = 32'd0;
    memory[2846] = 32'd0;
    memory[2847] = 32'd0;
    memory[2848] = 32'd0;
    memory[2849] = 32'd0;
    memory[2850] = 32'd0;
    memory[2851] = 32'd0;
    memory[2852] = 32'd0;
    memory[2853] = 32'd0;
    memory[2854] = 32'd0;
    memory[2855] = 32'd0;
    memory[2856] = 32'd0;
    memory[2857] = 32'd0;
    memory[2858] = 32'd0;
    memory[2859] = 32'd0;
    memory[2860] = 32'd0;
    memory[2861] = 32'd0;
    memory[2862] = 32'd0;
    memory[2863] = 32'd0;
    memory[2864] = 32'd0;
    memory[2865] = 32'd0;
    memory[2866] = 32'd0;
    memory[2867] = 32'd0;
    memory[2868] = 32'd0;
    memory[2869] = 32'd0;
    memory[2870] = 32'd0;
    memory[2871] = 32'd0;
    memory[2872] = 32'd0;
    memory[2873] = 32'd0;
    memory[2874] = 32'd0;
    memory[2875] = 32'd0;
    memory[2876] = 32'd0;
    memory[2877] = 32'd0;
    memory[2878] = 32'd0;
    memory[2879] = 32'd0;
    memory[2880] = 32'd0;
    memory[2881] = 32'd0;
    memory[2882] = 32'd0;
    memory[2883] = 32'd0;
    memory[2884] = 32'd0;
    memory[2885] = 32'd0;
    memory[2886] = 32'd0;
    memory[2887] = 32'd0;
    memory[2888] = 32'd0;
    memory[2889] = 32'd0;
    memory[2890] = 32'd0;
    memory[2891] = 32'd0;
    memory[2892] = 32'd0;
    memory[2893] = 32'd0;
    memory[2894] = 32'd0;
    memory[2895] = 32'd0;
    memory[2896] = 32'd0;
    memory[2897] = 32'd0;
    memory[2898] = 32'd0;
    memory[2899] = 32'd0;
    memory[2900] = 32'd0;
    memory[2901] = 32'd0;
    memory[2902] = 32'd0;
    memory[2903] = 32'd0;
    memory[2904] = 32'd0;
    memory[2905] = 32'd0;
    memory[2906] = 32'd0;
    memory[2907] = 32'd0;
    memory[2908] = 32'd0;
    memory[2909] = 32'd0;
    memory[2910] = 32'd0;
    memory[2911] = 32'd0;
    memory[2912] = 32'd0;
    memory[2913] = 32'd0;
    memory[2914] = 32'd0;
    memory[2915] = 32'd0;
    memory[2916] = 32'd0;
    memory[2917] = 32'd0;
    memory[2918] = 32'd0;
    memory[2919] = 32'd0;
    memory[2920] = 32'd0;
    memory[2921] = 32'd0;
    memory[2922] = 32'd0;
    memory[2923] = 32'd0;
    memory[2924] = 32'd0;
    memory[2925] = 32'd0;
    memory[2926] = 32'd0;
    memory[2927] = 32'd0;
    memory[2928] = 32'd0;
    memory[2929] = 32'd0;
    memory[2930] = 32'd0;
    memory[2931] = 32'd0;
    memory[2932] = 32'd0;
    memory[2933] = 32'd0;
    memory[2934] = 32'd0;
    memory[2935] = 32'd0;
    memory[2936] = 32'd0;
    memory[2937] = 32'd0;
    memory[2938] = 32'd0;
    memory[2939] = 32'd0;
    memory[2940] = 32'd0;
    memory[2941] = 32'd0;
    memory[2942] = 32'd0;
    memory[2943] = 32'd0;
    memory[2944] = 32'd0;
    memory[2945] = 32'd0;
    memory[2946] = 32'd0;
    memory[2947] = 32'd0;
    memory[2948] = 32'd0;
    memory[2949] = 32'd0;
    memory[2950] = 32'd0;
    memory[2951] = 32'd0;
    memory[2952] = 32'd0;
    memory[2953] = 32'd0;
    memory[2954] = 32'd0;
    memory[2955] = 32'd0;
    memory[2956] = 32'd0;
    memory[2957] = 32'd0;
    memory[2958] = 32'd0;
    memory[2959] = 32'd0;
    memory[2960] = 32'd0;
    memory[2961] = 32'd0;
    memory[2962] = 32'd0;
    memory[2963] = 32'd0;
    memory[2964] = 32'd0;
    memory[2965] = 32'd0;
    memory[2966] = 32'd0;
    memory[2967] = 32'd0;
    memory[2968] = 32'd0;
    memory[2969] = 32'd0;
    memory[2970] = 32'd0;
    memory[2971] = 32'd0;
    memory[2972] = 32'd0;
    memory[2973] = 32'd0;
    memory[2974] = 32'd0;
    memory[2975] = 32'd0;
    memory[2976] = 32'd0;
    memory[2977] = 32'd0;
    memory[2978] = 32'd0;
    memory[2979] = 32'd0;
    memory[2980] = 32'd0;
    memory[2981] = 32'd0;
    memory[2982] = 32'd0;
    memory[2983] = 32'd0;
    memory[2984] = 32'd0;
    memory[2985] = 32'd0;
    memory[2986] = 32'd0;
    memory[2987] = 32'd0;
    memory[2988] = 32'd0;
    memory[2989] = 32'd0;
    memory[2990] = 32'd0;
    memory[2991] = 32'd0;
    memory[2992] = 32'd0;
    memory[2993] = 32'd0;
    memory[2994] = 32'd0;
    memory[2995] = 32'd0;
    memory[2996] = 32'd0;
    memory[2997] = 32'd0;
    memory[2998] = 32'd0;
    memory[2999] = 32'd0;
    memory[3000] = 32'd0;
    memory[3001] = 32'd0;
    memory[3002] = 32'd0;
    memory[3003] = 32'd0;
    memory[3004] = 32'd0;
    memory[3005] = 32'd0;
    memory[3006] = 32'd0;
    memory[3007] = 32'd0;
    memory[3008] = 32'd0;
    memory[3009] = 32'd0;
    memory[3010] = 32'd0;
    memory[3011] = 32'd0;
    memory[3012] = 32'd0;
    memory[3013] = 32'd0;
    memory[3014] = 32'd0;
    memory[3015] = 32'd0;
    memory[3016] = 32'd0;
    memory[3017] = 32'd0;
    memory[3018] = 32'd0;
    memory[3019] = 32'd0;
    memory[3020] = 32'd0;
    memory[3021] = 32'd0;
    memory[3022] = 32'd0;
    memory[3023] = 32'd0;
    memory[3024] = 32'd0;
    memory[3025] = 32'd0;
    memory[3026] = 32'd0;
    memory[3027] = 32'd0;
    memory[3028] = 32'd0;
    memory[3029] = 32'd0;
    memory[3030] = 32'd0;
    memory[3031] = 32'd0;
    memory[3032] = 32'd0;
    memory[3033] = 32'd0;
    memory[3034] = 32'd0;
    memory[3035] = 32'd0;
    memory[3036] = 32'd0;
    memory[3037] = 32'd0;
    memory[3038] = 32'd0;
    memory[3039] = 32'd0;
    memory[3040] = 32'd0;
    memory[3041] = 32'd0;
    memory[3042] = 32'd0;
    memory[3043] = 32'd0;
    memory[3044] = 32'd0;
    memory[3045] = 32'd0;
    memory[3046] = 32'd0;
    memory[3047] = 32'd0;
    memory[3048] = 32'd0;
    memory[3049] = 32'd0;
    memory[3050] = 32'd0;
    memory[3051] = 32'd0;
    memory[3052] = 32'd0;
    memory[3053] = 32'd0;
    memory[3054] = 32'd0;
    memory[3055] = 32'd0;
    memory[3056] = 32'd0;
    memory[3057] = 32'd0;
    memory[3058] = 32'd0;
    memory[3059] = 32'd0;
    memory[3060] = 32'd0;
    memory[3061] = 32'd0;
    memory[3062] = 32'd0;
    memory[3063] = 32'd0;
    memory[3064] = 32'd0;
    memory[3065] = 32'd0;
    memory[3066] = 32'd0;
    memory[3067] = 32'd0;
    memory[3068] = 32'd0;
    memory[3069] = 32'd0;
    memory[3070] = 32'd0;
    memory[3071] = 32'd0;
    memory[3072] = 32'd0;
    memory[3073] = 32'd0;
    memory[3074] = 32'd0;
    memory[3075] = 32'd0;
    memory[3076] = 32'd0;
    memory[3077] = 32'd0;
    memory[3078] = 32'd0;
    memory[3079] = 32'd0;
    memory[3080] = 32'd0;
    memory[3081] = 32'd0;
    memory[3082] = 32'd0;
    memory[3083] = 32'd0;
    memory[3084] = 32'd0;
    memory[3085] = 32'd0;
    memory[3086] = 32'd0;
    memory[3087] = 32'd0;
    memory[3088] = 32'd0;
    memory[3089] = 32'd0;
    memory[3090] = 32'd0;
    memory[3091] = 32'd0;
    memory[3092] = 32'd0;
    memory[3093] = 32'd0;
    memory[3094] = 32'd0;
    memory[3095] = 32'd0;
    memory[3096] = 32'd0;
    memory[3097] = 32'd0;
    memory[3098] = 32'd0;
    memory[3099] = 32'd0;
    memory[3100] = 32'd0;
    memory[3101] = 32'd0;
    memory[3102] = 32'd0;
    memory[3103] = 32'd0;
    memory[3104] = 32'd0;
    memory[3105] = 32'd0;
    memory[3106] = 32'd0;
    memory[3107] = 32'd0;
    memory[3108] = 32'd0;
    memory[3109] = 32'd0;
    memory[3110] = 32'd0;
    memory[3111] = 32'd0;
    memory[3112] = 32'd0;
    memory[3113] = 32'd0;
    memory[3114] = 32'd0;
    memory[3115] = 32'd0;
    memory[3116] = 32'd0;
    memory[3117] = 32'd0;
    memory[3118] = 32'd0;
    memory[3119] = 32'd0;
    memory[3120] = 32'd0;
    memory[3121] = 32'd0;
    memory[3122] = 32'd0;
    memory[3123] = 32'd0;
    memory[3124] = 32'd0;
    memory[3125] = 32'd0;
    memory[3126] = 32'd0;
    memory[3127] = 32'd0;
    memory[3128] = 32'd0;
    memory[3129] = 32'd0;
    memory[3130] = 32'd0;
    memory[3131] = 32'd0;
    memory[3132] = 32'd0;
    memory[3133] = 32'd0;
    memory[3134] = 32'd0;
    memory[3135] = 32'd0;
    memory[3136] = 32'd0;
    memory[3137] = 32'd0;
    memory[3138] = 32'd0;
    memory[3139] = 32'd0;
    memory[3140] = 32'd0;
    memory[3141] = 32'd0;
    memory[3142] = 32'd0;
    memory[3143] = 32'd0;
    memory[3144] = 32'd0;
    memory[3145] = 32'd0;
    memory[3146] = 32'd0;
    memory[3147] = 32'd0;
    memory[3148] = 32'd0;
    memory[3149] = 32'd0;
    memory[3150] = 32'd0;
    memory[3151] = 32'd0;
    memory[3152] = 32'd0;
    memory[3153] = 32'd0;
    memory[3154] = 32'd0;
    memory[3155] = 32'd0;
    memory[3156] = 32'd0;
    memory[3157] = 32'd0;
    memory[3158] = 32'd0;
    memory[3159] = 32'd0;
    memory[3160] = 32'd0;
    memory[3161] = 32'd0;
    memory[3162] = 32'd0;
    memory[3163] = 32'd0;
    memory[3164] = 32'd0;
    memory[3165] = 32'd0;
    memory[3166] = 32'd0;
    memory[3167] = 32'd0;
    memory[3168] = 32'd0;
    memory[3169] = 32'd0;
    memory[3170] = 32'd0;
    memory[3171] = 32'd0;
    memory[3172] = 32'd0;
    memory[3173] = 32'd0;
    memory[3174] = 32'd0;
    memory[3175] = 32'd0;
    memory[3176] = 32'd0;
    memory[3177] = 32'd0;
    memory[3178] = 32'd0;
    memory[3179] = 32'd0;
    memory[3180] = 32'd0;
    memory[3181] = 32'd0;
    memory[3182] = 32'd0;
    memory[3183] = 32'd0;
    memory[3184] = 32'd0;
    memory[3185] = 32'd0;
    memory[3186] = 32'd0;
    memory[3187] = 32'd0;
    memory[3188] = 32'd0;
    memory[3189] = 32'd0;
    memory[3190] = 32'd0;
    memory[3191] = 32'd0;
    memory[3192] = 32'd0;
    memory[3193] = 32'd0;
    memory[3194] = 32'd0;
    memory[3195] = 32'd0;
    memory[3196] = 32'd0;
    memory[3197] = 32'd0;
    memory[3198] = 32'd0;
    memory[3199] = 32'd0;
    memory[3200] = 32'd0;
    memory[3201] = 32'd0;
    memory[3202] = 32'd0;
    memory[3203] = 32'd0;
    memory[3204] = 32'd0;
    memory[3205] = 32'd0;
    memory[3206] = 32'd0;
    memory[3207] = 32'd0;
    memory[3208] = 32'd0;
    memory[3209] = 32'd0;
    memory[3210] = 32'd0;
    memory[3211] = 32'd0;
    memory[3212] = 32'd0;
    memory[3213] = 32'd0;
    memory[3214] = 32'd0;
    memory[3215] = 32'd0;
    memory[3216] = 32'd0;
    memory[3217] = 32'd0;
    memory[3218] = 32'd0;
    memory[3219] = 32'd0;
    memory[3220] = 32'd0;
    memory[3221] = 32'd0;
    memory[3222] = 32'd0;
    memory[3223] = 32'd0;
    memory[3224] = 32'd0;
    memory[3225] = 32'd0;
    memory[3226] = 32'd0;
    memory[3227] = 32'd0;
    memory[3228] = 32'd0;
    memory[3229] = 32'd0;
    memory[3230] = 32'd0;
    memory[3231] = 32'd0;
    memory[3232] = 32'd0;
    memory[3233] = 32'd0;
    memory[3234] = 32'd0;
    memory[3235] = 32'd0;
    memory[3236] = 32'd0;
    memory[3237] = 32'd0;
    memory[3238] = 32'd0;
    memory[3239] = 32'd0;
    memory[3240] = 32'd0;
    memory[3241] = 32'd0;
    memory[3242] = 32'd0;
    memory[3243] = 32'd0;
    memory[3244] = 32'd0;
    memory[3245] = 32'd0;
    memory[3246] = 32'd0;
    memory[3247] = 32'd0;
    memory[3248] = 32'd0;
    memory[3249] = 32'd0;
    memory[3250] = 32'd0;
    memory[3251] = 32'd0;
    memory[3252] = 32'd0;
    memory[3253] = 32'd0;
    memory[3254] = 32'd0;
    memory[3255] = 32'd0;
    memory[3256] = 32'd0;
    memory[3257] = 32'd0;
    memory[3258] = 32'd0;
    memory[3259] = 32'd0;
    memory[3260] = 32'd0;
    memory[3261] = 32'd0;
    memory[3262] = 32'd0;
    memory[3263] = 32'd0;
    memory[3264] = 32'd0;
    memory[3265] = 32'd0;
    memory[3266] = 32'd0;
    memory[3267] = 32'd0;
    memory[3268] = 32'd0;
    memory[3269] = 32'd0;
    memory[3270] = 32'd0;
    memory[3271] = 32'd0;
    memory[3272] = 32'd0;
    memory[3273] = 32'd0;
    memory[3274] = 32'd0;
    memory[3275] = 32'd0;
    memory[3276] = 32'd0;
    memory[3277] = 32'd0;
    memory[3278] = 32'd0;
    memory[3279] = 32'd0;
    memory[3280] = 32'd0;
    memory[3281] = 32'd0;
    memory[3282] = 32'd0;
    memory[3283] = 32'd0;
    memory[3284] = 32'd0;
    memory[3285] = 32'd0;
    memory[3286] = 32'd0;
    memory[3287] = 32'd0;
    memory[3288] = 32'd0;
    memory[3289] = 32'd0;
    memory[3290] = 32'd0;
    memory[3291] = 32'd0;
    memory[3292] = 32'd0;
    memory[3293] = 32'd0;
    memory[3294] = 32'd0;
    memory[3295] = 32'd0;
    memory[3296] = 32'd0;
    memory[3297] = 32'd0;
    memory[3298] = 32'd0;
    memory[3299] = 32'd0;
    memory[3300] = 32'd0;
    memory[3301] = 32'd0;
    memory[3302] = 32'd0;
    memory[3303] = 32'd0;
    memory[3304] = 32'd0;
    memory[3305] = 32'd0;
    memory[3306] = 32'd0;
    memory[3307] = 32'd0;
    memory[3308] = 32'd0;
    memory[3309] = 32'd0;
    memory[3310] = 32'd0;
    memory[3311] = 32'd0;
    memory[3312] = 32'd0;
    memory[3313] = 32'd0;
    memory[3314] = 32'd0;
    memory[3315] = 32'd0;
    memory[3316] = 32'd0;
    memory[3317] = 32'd0;
    memory[3318] = 32'd0;
    memory[3319] = 32'd0;
    memory[3320] = 32'd0;
    memory[3321] = 32'd0;
    memory[3322] = 32'd0;
    memory[3323] = 32'd0;
    memory[3324] = 32'd0;
    memory[3325] = 32'd0;
    memory[3326] = 32'd0;
    memory[3327] = 32'd0;
    memory[3328] = 32'd0;
    memory[3329] = 32'd0;
    memory[3330] = 32'd0;
    memory[3331] = 32'd0;
    memory[3332] = 32'd0;
    memory[3333] = 32'd0;
    memory[3334] = 32'd0;
    memory[3335] = 32'd0;
    memory[3336] = 32'd0;
    memory[3337] = 32'd0;
    memory[3338] = 32'd0;
    memory[3339] = 32'd0;
    memory[3340] = 32'd0;
    memory[3341] = 32'd0;
    memory[3342] = 32'd0;
    memory[3343] = 32'd0;
    memory[3344] = 32'd0;
    memory[3345] = 32'd0;
    memory[3346] = 32'd0;
    memory[3347] = 32'd0;
    memory[3348] = 32'd0;
    memory[3349] = 32'd0;
    memory[3350] = 32'd0;
    memory[3351] = 32'd0;
    memory[3352] = 32'd0;
    memory[3353] = 32'd0;
    memory[3354] = 32'd0;
    memory[3355] = 32'd0;
    memory[3356] = 32'd0;
    memory[3357] = 32'd0;
    memory[3358] = 32'd0;
    memory[3359] = 32'd0;
    memory[3360] = 32'd0;
    memory[3361] = 32'd0;
    memory[3362] = 32'd0;
    memory[3363] = 32'd0;
    memory[3364] = 32'd0;
    memory[3365] = 32'd0;
    memory[3366] = 32'd0;
    memory[3367] = 32'd0;
    memory[3368] = 32'd0;
    memory[3369] = 32'd0;
    memory[3370] = 32'd0;
    memory[3371] = 32'd0;
    memory[3372] = 32'd0;
    memory[3373] = 32'd0;
    memory[3374] = 32'd0;
    memory[3375] = 32'd0;
    memory[3376] = 32'd0;
    memory[3377] = 32'd0;
    memory[3378] = 32'd0;
    memory[3379] = 32'd0;
    memory[3380] = 32'd0;
    memory[3381] = 32'd0;
    memory[3382] = 32'd0;
    memory[3383] = 32'd0;
    memory[3384] = 32'd0;
    memory[3385] = 32'd0;
    memory[3386] = 32'd0;
    memory[3387] = 32'd0;
    memory[3388] = 32'd0;
    memory[3389] = 32'd0;
    memory[3390] = 32'd0;
    memory[3391] = 32'd0;
    memory[3392] = 32'd0;
    memory[3393] = 32'd0;
    memory[3394] = 32'd0;
    memory[3395] = 32'd0;
    memory[3396] = 32'd0;
    memory[3397] = 32'd0;
    memory[3398] = 32'd0;
    memory[3399] = 32'd0;
    memory[3400] = 32'd0;
    memory[3401] = 32'd0;
    memory[3402] = 32'd0;
    memory[3403] = 32'd0;
    memory[3404] = 32'd0;
    memory[3405] = 32'd0;
    memory[3406] = 32'd0;
    memory[3407] = 32'd0;
    memory[3408] = 32'd0;
    memory[3409] = 32'd0;
    memory[3410] = 32'd0;
    memory[3411] = 32'd0;
    memory[3412] = 32'd0;
    memory[3413] = 32'd0;
    memory[3414] = 32'd0;
    memory[3415] = 32'd0;
    memory[3416] = 32'd0;
    memory[3417] = 32'd0;
    memory[3418] = 32'd0;
    memory[3419] = 32'd0;
    memory[3420] = 32'd0;
    memory[3421] = 32'd0;
    memory[3422] = 32'd0;
    memory[3423] = 32'd0;
    memory[3424] = 32'd0;
    memory[3425] = 32'd0;
    memory[3426] = 32'd0;
    memory[3427] = 32'd0;
    memory[3428] = 32'd0;
    memory[3429] = 32'd0;
    memory[3430] = 32'd0;
    memory[3431] = 32'd0;
    memory[3432] = 32'd0;
    memory[3433] = 32'd0;
    memory[3434] = 32'd0;
    memory[3435] = 32'd0;
    memory[3436] = 32'd0;
    memory[3437] = 32'd0;
    memory[3438] = 32'd0;
    memory[3439] = 32'd0;
    memory[3440] = 32'd0;
    memory[3441] = 32'd0;
    memory[3442] = 32'd0;
    memory[3443] = 32'd0;
    memory[3444] = 32'd0;
    memory[3445] = 32'd0;
    memory[3446] = 32'd0;
    memory[3447] = 32'd0;
    memory[3448] = 32'd0;
    memory[3449] = 32'd0;
    memory[3450] = 32'd0;
    memory[3451] = 32'd0;
    memory[3452] = 32'd0;
    memory[3453] = 32'd0;
    memory[3454] = 32'd0;
    memory[3455] = 32'd0;
    memory[3456] = 32'd0;
    memory[3457] = 32'd0;
    memory[3458] = 32'd0;
    memory[3459] = 32'd0;
    memory[3460] = 32'd0;
    memory[3461] = 32'd0;
    memory[3462] = 32'd0;
    memory[3463] = 32'd0;
    memory[3464] = 32'd0;
    memory[3465] = 32'd0;
    memory[3466] = 32'd0;
    memory[3467] = 32'd0;
    memory[3468] = 32'd0;
    memory[3469] = 32'd0;
    memory[3470] = 32'd0;
    memory[3471] = 32'd0;
    memory[3472] = 32'd0;
    memory[3473] = 32'd0;
    memory[3474] = 32'd0;
    memory[3475] = 32'd0;
    memory[3476] = 32'd0;
    memory[3477] = 32'd0;
    memory[3478] = 32'd0;
    memory[3479] = 32'd0;
    memory[3480] = 32'd0;
    memory[3481] = 32'd0;
    memory[3482] = 32'd0;
    memory[3483] = 32'd0;
    memory[3484] = 32'd0;
    memory[3485] = 32'd0;
    memory[3486] = 32'd0;
    memory[3487] = 32'd0;
    memory[3488] = 32'd0;
    memory[3489] = 32'd0;
    memory[3490] = 32'd0;
    memory[3491] = 32'd0;
    memory[3492] = 32'd0;
    memory[3493] = 32'd0;
    memory[3494] = 32'd0;
    memory[3495] = 32'd0;
    memory[3496] = 32'd0;
    memory[3497] = 32'd0;
    memory[3498] = 32'd0;
    memory[3499] = 32'd0;
    memory[3500] = 32'd0;
    memory[3501] = 32'd0;
    memory[3502] = 32'd0;
    memory[3503] = 32'd0;
    memory[3504] = 32'd0;
    memory[3505] = 32'd0;
    memory[3506] = 32'd0;
    memory[3507] = 32'd0;
    memory[3508] = 32'd0;
    memory[3509] = 32'd0;
    memory[3510] = 32'd0;
    memory[3511] = 32'd0;
    memory[3512] = 32'd0;
    memory[3513] = 32'd0;
    memory[3514] = 32'd0;
    memory[3515] = 32'd0;
    memory[3516] = 32'd0;
    memory[3517] = 32'd0;
    memory[3518] = 32'd0;
    memory[3519] = 32'd0;
    memory[3520] = 32'd0;
    memory[3521] = 32'd0;
    memory[3522] = 32'd0;
    memory[3523] = 32'd0;
    memory[3524] = 32'd0;
    memory[3525] = 32'd0;
    memory[3526] = 32'd0;
    memory[3527] = 32'd0;
    memory[3528] = 32'd0;
    memory[3529] = 32'd0;
    memory[3530] = 32'd0;
    memory[3531] = 32'd0;
    memory[3532] = 32'd0;
    memory[3533] = 32'd0;
    memory[3534] = 32'd0;
    memory[3535] = 32'd0;
    memory[3536] = 32'd0;
    memory[3537] = 32'd0;
    memory[3538] = 32'd0;
    memory[3539] = 32'd0;
    memory[3540] = 32'd0;
    memory[3541] = 32'd0;
    memory[3542] = 32'd0;
    memory[3543] = 32'd0;
    memory[3544] = 32'd0;
    memory[3545] = 32'd0;
    memory[3546] = 32'd0;
    memory[3547] = 32'd0;
    memory[3548] = 32'd0;
    memory[3549] = 32'd0;
    memory[3550] = 32'd0;
    memory[3551] = 32'd0;
    memory[3552] = 32'd0;
    memory[3553] = 32'd0;
    memory[3554] = 32'd0;
    memory[3555] = 32'd0;
    memory[3556] = 32'd0;
    memory[3557] = 32'd0;
    memory[3558] = 32'd0;
    memory[3559] = 32'd0;
    memory[3560] = 32'd0;
    memory[3561] = 32'd0;
    memory[3562] = 32'd0;
    memory[3563] = 32'd0;
    memory[3564] = 32'd0;
    memory[3565] = 32'd0;
    memory[3566] = 32'd0;
    memory[3567] = 32'd0;
    memory[3568] = 32'd0;
    memory[3569] = 32'd0;
    memory[3570] = 32'd0;
    memory[3571] = 32'd0;
    memory[3572] = 32'd0;
    memory[3573] = 32'd0;
    memory[3574] = 32'd0;
    memory[3575] = 32'd0;
    memory[3576] = 32'd0;
    memory[3577] = 32'd0;
    memory[3578] = 32'd0;
    memory[3579] = 32'd0;
    memory[3580] = 32'd0;
    memory[3581] = 32'd0;
    memory[3582] = 32'd0;
    memory[3583] = 32'd0;
    memory[3584] = 32'd0;
    memory[3585] = 32'd0;
    memory[3586] = 32'd0;
    memory[3587] = 32'd0;
    memory[3588] = 32'd0;
    memory[3589] = 32'd0;
    memory[3590] = 32'd0;
    memory[3591] = 32'd0;
    memory[3592] = 32'd0;
    memory[3593] = 32'd0;
    memory[3594] = 32'd0;
    memory[3595] = 32'd0;
    memory[3596] = 32'd0;
    memory[3597] = 32'd0;
    memory[3598] = 32'd0;
    memory[3599] = 32'd0;
    memory[3600] = 32'd0;
    memory[3601] = 32'd0;
    memory[3602] = 32'd0;
    memory[3603] = 32'd0;
    memory[3604] = 32'd0;
    memory[3605] = 32'd0;
    memory[3606] = 32'd0;
    memory[3607] = 32'd0;
    memory[3608] = 32'd0;
    memory[3609] = 32'd0;
    memory[3610] = 32'd0;
    memory[3611] = 32'd0;
    memory[3612] = 32'd0;
    memory[3613] = 32'd0;
    memory[3614] = 32'd0;
    memory[3615] = 32'd0;
    memory[3616] = 32'd0;
    memory[3617] = 32'd0;
    memory[3618] = 32'd0;
    memory[3619] = 32'd0;
    memory[3620] = 32'd0;
    memory[3621] = 32'd0;
    memory[3622] = 32'd0;
    memory[3623] = 32'd0;
    memory[3624] = 32'd0;
    memory[3625] = 32'd0;
    memory[3626] = 32'd0;
    memory[3627] = 32'd0;
    memory[3628] = 32'd0;
    memory[3629] = 32'd0;
    memory[3630] = 32'd0;
    memory[3631] = 32'd0;
    memory[3632] = 32'd0;
    memory[3633] = 32'd0;
    memory[3634] = 32'd0;
    memory[3635] = 32'd0;
    memory[3636] = 32'd0;
    memory[3637] = 32'd0;
    memory[3638] = 32'd0;
    memory[3639] = 32'd0;
    memory[3640] = 32'd0;
    memory[3641] = 32'd0;
    memory[3642] = 32'd0;
    memory[3643] = 32'd0;
    memory[3644] = 32'd0;
    memory[3645] = 32'd0;
    memory[3646] = 32'd0;
    memory[3647] = 32'd0;
    memory[3648] = 32'd0;
    memory[3649] = 32'd0;
    memory[3650] = 32'd0;
    memory[3651] = 32'd0;
    memory[3652] = 32'd0;
    memory[3653] = 32'd0;
    memory[3654] = 32'd0;
    memory[3655] = 32'd0;
    memory[3656] = 32'd0;
    memory[3657] = 32'd0;
    memory[3658] = 32'd0;
    memory[3659] = 32'd0;
    memory[3660] = 32'd0;
    memory[3661] = 32'd0;
    memory[3662] = 32'd0;
    memory[3663] = 32'd0;
    memory[3664] = 32'd0;
    memory[3665] = 32'd0;
    memory[3666] = 32'd0;
    memory[3667] = 32'd0;
    memory[3668] = 32'd0;
    memory[3669] = 32'd0;
    memory[3670] = 32'd0;
    memory[3671] = 32'd0;
    memory[3672] = 32'd0;
    memory[3673] = 32'd0;
    memory[3674] = 32'd0;
    memory[3675] = 32'd0;
    memory[3676] = 32'd0;
    memory[3677] = 32'd0;
    memory[3678] = 32'd0;
    memory[3679] = 32'd0;
    memory[3680] = 32'd0;
    memory[3681] = 32'd0;
    memory[3682] = 32'd0;
    memory[3683] = 32'd0;
    memory[3684] = 32'd0;
    memory[3685] = 32'd0;
    memory[3686] = 32'd0;
    memory[3687] = 32'd0;
    memory[3688] = 32'd0;
    memory[3689] = 32'd0;
    memory[3690] = 32'd0;
    memory[3691] = 32'd0;
    memory[3692] = 32'd0;
    memory[3693] = 32'd0;
    memory[3694] = 32'd0;
    memory[3695] = 32'd0;
    memory[3696] = 32'd0;
    memory[3697] = 32'd0;
    memory[3698] = 32'd0;
    memory[3699] = 32'd0;
    memory[3700] = 32'd0;
    memory[3701] = 32'd0;
    memory[3702] = 32'd0;
    memory[3703] = 32'd0;
    memory[3704] = 32'd0;
    memory[3705] = 32'd0;
    memory[3706] = 32'd0;
    memory[3707] = 32'd0;
    memory[3708] = 32'd0;
    memory[3709] = 32'd0;
    memory[3710] = 32'd0;
    memory[3711] = 32'd0;
    memory[3712] = 32'd0;
    memory[3713] = 32'd0;
    memory[3714] = 32'd0;
    memory[3715] = 32'd0;
    memory[3716] = 32'd0;
    memory[3717] = 32'd0;
    memory[3718] = 32'd0;
    memory[3719] = 32'd0;
    memory[3720] = 32'd0;
    memory[3721] = 32'd0;
    memory[3722] = 32'd0;
    memory[3723] = 32'd0;
    memory[3724] = 32'd0;
    memory[3725] = 32'd0;
    memory[3726] = 32'd0;
    memory[3727] = 32'd0;
    memory[3728] = 32'd0;
    memory[3729] = 32'd0;
    memory[3730] = 32'd0;
    memory[3731] = 32'd0;
    memory[3732] = 32'd0;
    memory[3733] = 32'd0;
    memory[3734] = 32'd0;
    memory[3735] = 32'd0;
    memory[3736] = 32'd0;
    memory[3737] = 32'd0;
    memory[3738] = 32'd0;
    memory[3739] = 32'd0;
    memory[3740] = 32'd0;
    memory[3741] = 32'd0;
    memory[3742] = 32'd0;
    memory[3743] = 32'd0;
    memory[3744] = 32'd0;
    memory[3745] = 32'd0;
    memory[3746] = 32'd0;
    memory[3747] = 32'd0;
    memory[3748] = 32'd0;
    memory[3749] = 32'd0;
    memory[3750] = 32'd0;
    memory[3751] = 32'd0;
    memory[3752] = 32'd0;
    memory[3753] = 32'd0;
    memory[3754] = 32'd0;
    memory[3755] = 32'd0;
    memory[3756] = 32'd0;
    memory[3757] = 32'd0;
    memory[3758] = 32'd0;
    memory[3759] = 32'd0;
    memory[3760] = 32'd0;
    memory[3761] = 32'd0;
    memory[3762] = 32'd0;
    memory[3763] = 32'd0;
    memory[3764] = 32'd0;
    memory[3765] = 32'd0;
    memory[3766] = 32'd0;
    memory[3767] = 32'd0;
    memory[3768] = 32'd0;
    memory[3769] = 32'd0;
    memory[3770] = 32'd0;
    memory[3771] = 32'd0;
    memory[3772] = 32'd0;
    memory[3773] = 32'd0;
    memory[3774] = 32'd0;
    memory[3775] = 32'd0;
    memory[3776] = 32'd0;
    memory[3777] = 32'd0;
    memory[3778] = 32'd0;
    memory[3779] = 32'd0;
    memory[3780] = 32'd0;
    memory[3781] = 32'd0;
    memory[3782] = 32'd0;
    memory[3783] = 32'd0;
    memory[3784] = 32'd0;
    memory[3785] = 32'd0;
    memory[3786] = 32'd0;
    memory[3787] = 32'd0;
    memory[3788] = 32'd0;
    memory[3789] = 32'd0;
    memory[3790] = 32'd0;
    memory[3791] = 32'd0;
    memory[3792] = 32'd0;
    memory[3793] = 32'd0;
    memory[3794] = 32'd0;
    memory[3795] = 32'd0;
    memory[3796] = 32'd0;
    memory[3797] = 32'd0;
    memory[3798] = 32'd0;
    memory[3799] = 32'd0;
    memory[3800] = 32'd0;
    memory[3801] = 32'd0;
    memory[3802] = 32'd0;
    memory[3803] = 32'd0;
    memory[3804] = 32'd0;
    memory[3805] = 32'd0;
    memory[3806] = 32'd0;
    memory[3807] = 32'd0;
    memory[3808] = 32'd0;
    memory[3809] = 32'd0;
    memory[3810] = 32'd0;
    memory[3811] = 32'd0;
    memory[3812] = 32'd0;
    memory[3813] = 32'd0;
    memory[3814] = 32'd0;
    memory[3815] = 32'd0;
    memory[3816] = 32'd0;
    memory[3817] = 32'd0;
    memory[3818] = 32'd0;
    memory[3819] = 32'd0;
    memory[3820] = 32'd0;
    memory[3821] = 32'd0;
    memory[3822] = 32'd0;
    memory[3823] = 32'd0;
    memory[3824] = 32'd0;
    memory[3825] = 32'd0;
    memory[3826] = 32'd0;
    memory[3827] = 32'd0;
    memory[3828] = 32'd0;
    memory[3829] = 32'd0;
    memory[3830] = 32'd0;
    memory[3831] = 32'd0;
    memory[3832] = 32'd0;
    memory[3833] = 32'd0;
    memory[3834] = 32'd0;
    memory[3835] = 32'd0;
    memory[3836] = 32'd0;
    memory[3837] = 32'd0;
    memory[3838] = 32'd0;
    memory[3839] = 32'd0;
    memory[3840] = 32'd0;
    memory[3841] = 32'd0;
    memory[3842] = 32'd0;
    memory[3843] = 32'd0;
    memory[3844] = 32'd0;
    memory[3845] = 32'd0;
    memory[3846] = 32'd0;
    memory[3847] = 32'd0;
    memory[3848] = 32'd0;
    memory[3849] = 32'd0;
    memory[3850] = 32'd0;
    memory[3851] = 32'd0;
    memory[3852] = 32'd0;
    memory[3853] = 32'd0;
    memory[3854] = 32'd0;
    memory[3855] = 32'd0;
    memory[3856] = 32'd0;
    memory[3857] = 32'd0;
    memory[3858] = 32'd0;
    memory[3859] = 32'd0;
    memory[3860] = 32'd0;
    memory[3861] = 32'd0;
    memory[3862] = 32'd0;
    memory[3863] = 32'd0;
    memory[3864] = 32'd0;
    memory[3865] = 32'd0;
    memory[3866] = 32'd0;
    memory[3867] = 32'd0;
    memory[3868] = 32'd0;
    memory[3869] = 32'd0;
    memory[3870] = 32'd0;
    memory[3871] = 32'd0;
    memory[3872] = 32'd0;
    memory[3873] = 32'd0;
    memory[3874] = 32'd0;
    memory[3875] = 32'd0;
    memory[3876] = 32'd0;
    memory[3877] = 32'd0;
    memory[3878] = 32'd0;
    memory[3879] = 32'd0;
    memory[3880] = 32'd0;
    memory[3881] = 32'd0;
    memory[3882] = 32'd0;
    memory[3883] = 32'd0;
    memory[3884] = 32'd0;
    memory[3885] = 32'd0;
    memory[3886] = 32'd0;
    memory[3887] = 32'd0;
    memory[3888] = 32'd0;
    memory[3889] = 32'd0;
    memory[3890] = 32'd0;
    memory[3891] = 32'd0;
    memory[3892] = 32'd0;
    memory[3893] = 32'd0;
    memory[3894] = 32'd0;
    memory[3895] = 32'd0;
    memory[3896] = 32'd0;
    memory[3897] = 32'd0;
    memory[3898] = 32'd0;
    memory[3899] = 32'd0;
    memory[3900] = 32'd0;
    memory[3901] = 32'd0;
    memory[3902] = 32'd0;
    memory[3903] = 32'd0;
    memory[3904] = 32'd0;
    memory[3905] = 32'd0;
    memory[3906] = 32'd0;
    memory[3907] = 32'd0;
    memory[3908] = 32'd0;
    memory[3909] = 32'd0;
    memory[3910] = 32'd0;
    memory[3911] = 32'd0;
    memory[3912] = 32'd0;
    memory[3913] = 32'd0;
    memory[3914] = 32'd0;
    memory[3915] = 32'd0;
    memory[3916] = 32'd0;
    memory[3917] = 32'd0;
    memory[3918] = 32'd0;
    memory[3919] = 32'd0;
    memory[3920] = 32'd0;
    memory[3921] = 32'd0;
    memory[3922] = 32'd0;
    memory[3923] = 32'd0;
    memory[3924] = 32'd0;
    memory[3925] = 32'd0;
    memory[3926] = 32'd0;
    memory[3927] = 32'd0;
    memory[3928] = 32'd0;
    memory[3929] = 32'd0;
    memory[3930] = 32'd0;
    memory[3931] = 32'd0;
    memory[3932] = 32'd0;
    memory[3933] = 32'd0;
    memory[3934] = 32'd0;
    memory[3935] = 32'd0;
    memory[3936] = 32'd0;
    memory[3937] = 32'd0;
    memory[3938] = 32'd0;
    memory[3939] = 32'd0;
    memory[3940] = 32'd0;
    memory[3941] = 32'd0;
    memory[3942] = 32'd0;
    memory[3943] = 32'd0;
    memory[3944] = 32'd0;
    memory[3945] = 32'd0;
    memory[3946] = 32'd0;
    memory[3947] = 32'd0;
    memory[3948] = 32'd0;
    memory[3949] = 32'd0;
    memory[3950] = 32'd0;
    memory[3951] = 32'd0;
    memory[3952] = 32'd0;
    memory[3953] = 32'd0;
    memory[3954] = 32'd0;
    memory[3955] = 32'd0;
    memory[3956] = 32'd0;
    memory[3957] = 32'd0;
    memory[3958] = 32'd0;
    memory[3959] = 32'd0;
    memory[3960] = 32'd0;
    memory[3961] = 32'd0;
    memory[3962] = 32'd0;
    memory[3963] = 32'd0;
    memory[3964] = 32'd0;
    memory[3965] = 32'd0;
    memory[3966] = 32'd0;
    memory[3967] = 32'd0;
    memory[3968] = 32'd0;
    memory[3969] = 32'd0;
    memory[3970] = 32'd0;
    memory[3971] = 32'd0;
    memory[3972] = 32'd0;
    memory[3973] = 32'd0;
    memory[3974] = 32'd0;
    memory[3975] = 32'd0;
    memory[3976] = 32'd0;
    memory[3977] = 32'd0;
    memory[3978] = 32'd0;
    memory[3979] = 32'd0;
    memory[3980] = 32'd0;
    memory[3981] = 32'd0;
    memory[3982] = 32'd0;
    memory[3983] = 32'd0;
    memory[3984] = 32'd0;
    memory[3985] = 32'd0;
    memory[3986] = 32'd0;
    memory[3987] = 32'd0;
    memory[3988] = 32'd0;
    memory[3989] = 32'd0;
    memory[3990] = 32'd0;
    memory[3991] = 32'd0;
    memory[3992] = 32'd0;
    memory[3993] = 32'd0;
    memory[3994] = 32'd0;
    memory[3995] = 32'd0;
    memory[3996] = 32'd0;
    memory[3997] = 32'd0;
    memory[3998] = 32'd0;
    memory[3999] = 32'd0;
    memory[4000] = 32'd0;
    memory[4001] = 32'd0;
    memory[4002] = 32'd0;
    memory[4003] = 32'd0;
    memory[4004] = 32'd0;
    memory[4005] = 32'd0;
    memory[4006] = 32'd0;
    memory[4007] = 32'd0;
    memory[4008] = 32'd0;
    memory[4009] = 32'd0;
    memory[4010] = 32'd0;
    memory[4011] = 32'd0;
    memory[4012] = 32'd0;
    memory[4013] = 32'd0;
    memory[4014] = 32'd0;
    memory[4015] = 32'd0;
    memory[4016] = 32'd0;
    memory[4017] = 32'd0;
    memory[4018] = 32'd0;
    memory[4019] = 32'd0;
    memory[4020] = 32'd0;
    memory[4021] = 32'd0;
    memory[4022] = 32'd0;
    memory[4023] = 32'd0;
    memory[4024] = 32'd0;
    memory[4025] = 32'd0;
    memory[4026] = 32'd0;
    memory[4027] = 32'd0;
    memory[4028] = 32'd0;
    memory[4029] = 32'd0;
    memory[4030] = 32'd0;
    memory[4031] = 32'd0;
    memory[4032] = 32'd0;
    memory[4033] = 32'd0;
    memory[4034] = 32'd0;
    memory[4035] = 32'd0;
    memory[4036] = 32'd0;
    memory[4037] = 32'd0;
    memory[4038] = 32'd0;
    memory[4039] = 32'd0;
    memory[4040] = 32'd0;
    memory[4041] = 32'd0;
    memory[4042] = 32'd0;
    memory[4043] = 32'd0;
    memory[4044] = 32'd0;
    memory[4045] = 32'd0;
    memory[4046] = 32'd0;
    memory[4047] = 32'd0;
    memory[4048] = 32'd0;
    memory[4049] = 32'd0;
    memory[4050] = 32'd0;
    memory[4051] = 32'd0;
    memory[4052] = 32'd0;
    memory[4053] = 32'd0;
    memory[4054] = 32'd0;
    memory[4055] = 32'd0;
    memory[4056] = 32'd0;
    memory[4057] = 32'd0;
    memory[4058] = 32'd0;
    memory[4059] = 32'd0;
    memory[4060] = 32'd0;
    memory[4061] = 32'd0;
    memory[4062] = 32'd0;
    memory[4063] = 32'd0;
    memory[4064] = 32'd0;
    memory[4065] = 32'd0;
    memory[4066] = 32'd0;
    memory[4067] = 32'd0;
    memory[4068] = 32'd0;
    memory[4069] = 32'd0;
    memory[4070] = 32'd0;
    memory[4071] = 32'd0;
    memory[4072] = 32'd0;
    memory[4073] = 32'd0;
    memory[4074] = 32'd0;
    memory[4075] = 32'd0;
    memory[4076] = 32'd0;
    memory[4077] = 32'd0;
    memory[4078] = 32'd0;
    memory[4079] = 32'd0;
    memory[4080] = 32'd0;
    memory[4081] = 32'd0;
    memory[4082] = 32'd0;
    memory[4083] = 32'd0;
    memory[4084] = 32'd0;
    memory[4085] = 32'd0;
    memory[4086] = 32'd0;
    memory[4087] = 32'd0;
    memory[4088] = 32'd0;
    memory[4089] = 32'd0;
    memory[4090] = 32'd0;
    memory[4091] = 32'd0;
    memory[4092] = 32'd0;
    memory[4093] = 32'd0;
    memory[4094] = 32'd0;
    memory[4095] = 32'd0;
  end
  always @(posedge sync_100_clk) begin
    if (externalWritePort__en)
      memory[bram_address[11:0]] <= externalWritePort__data;
  end
  always @(posedge sync_100_clk) begin
    if (internalWritePort__en)
      memory[internalBramAddress[11:0]] <= internalWritePort__data;
  end
  reg [31:0] _0_;
  reg [31:0] _1_;
  always @(posedge sync_100_clk) begin
    _0_ <= memory[internalBramAddress[11:0]];
    _1_ <= memory[bram_address[11:0]];
  end
  assign internalBramReadData = _0_;
  assign externalReadPort__data = _1_;
  assign \$2  = 6'h20 - (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:219" *) \$1 ;
  assign \$3  = 32'd4294967295 >> (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:219" *) \$2 ;
  assign internal_read_port_masked_bytes = internalBramReadData & (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:219" *) \$3 ;
  assign \$6  = \$4  | (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:225" *) \$5 ;
  assign \$8  = { 36'h000000000, \$6  } | (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:225" *) \$7 ;
  assign \$10  = \$8  | (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:225" *) \$9 ;
  assign \$11  = bram_address == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:260" *) 13'h1000;
  assign \$12  = bram_address == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:260" *) 13'h1001;
  assign \$13  = \$11  | (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:260" *) \$12 ;
  assign \$14  = bram_address == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:260" *) 13'h1002;
  assign \$15  = \$13  | (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:260" *) \$14 ;
  assign \$16  = ~ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:307" *) bram_control_mode_comb;
  assign \$17  = ~ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:311" *) bram_control_mode;
  assign \$18  = current_device_index != (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:381" *) 4'hf;
  assign \$19  = current_tx_byte_index + (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:424" *) cyclic_register_size;
  assign \$20  = bytes_used >= (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:426" *) 3'h4;
  assign \$21  = bytes_used == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:428" *) 3'h4;
  assign \$22  = ! (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:467" *) timer;
  assign \$23  = | (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:505" *) current_device_index;
  assign \$24  = bram_read_data[2] & (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:507" *) bram_read_data[4];
  assign \$25  = ~ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:512" *) bram_read_data[4];
  assign \$26  = bram_read_data[2] & (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:512" *) \$25 ;
  assign \$27  = ~ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:515" *) bram_read_data[2];
  assign \$28  = \$27  & (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:515" *) bram_read_data[3];
  assign \$29  = ~ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:518" *) bram_read_data[2];
  assign \$30  = ~ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:518" *) bram_read_data[3];
  assign \$31  = \$29  & (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:518" *) \$30 ;
  assign \$32  = ! (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\hdl\\_dsl.py:490" *) controller_fsm_state;
  assign \$33  = controller_fsm_state == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\hdl\\_dsl.py:490" *) 1'h1;
  assign \$34  = controller_fsm_state == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\hdl\\_dsl.py:490" *) 2'h2;
  assign \$35  = controller_fsm_state == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\hdl\\_dsl.py:490" *) 2'h3;
  assign \$36  = controller_fsm_state == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\hdl\\_dsl.py:490" *) 3'h4;
  assign \$37  = controller_fsm_state == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\hdl\\_dsl.py:490" *) 3'h5;
  assign \$38  = controller_fsm_state == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\hdl\\_dsl.py:490" *) 3'h6;
  assign \$39  = controller_fsm_state == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\hdl\\_dsl.py:490" *) 3'h7;
  assign \$40  = controller_fsm_state == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\hdl\\_dsl.py:490" *) 4'h8;
  assign \$41  = controller_fsm_state == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\hdl\\_dsl.py:490" *) 4'h9;
  assign \$42  = controller_fsm_state == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\hdl\\_dsl.py:490" *) 4'ha;
  assign \$43  = controller_fsm_state == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\hdl\\_dsl.py:490" *) 4'hb;
  assign \$44  = controller_fsm_state == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\hdl\\_dsl.py:490" *) 4'hc;
  assign \$45  = controller_fsm_state == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\hdl\\_dsl.py:490" *) 4'hd;
  assign \$46  = controller_fsm_state == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\hdl\\_dsl.py:490" *) 4'he;
  assign \$47  = controller_fsm_state == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\hdl\\_dsl.py:490" *) 4'hf;
  assign \$48  = controller_fsm_state == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\hdl\\_dsl.py:490" *) 5'h10;
  assign \$49  = controller_fsm_state == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\hdl\\_dsl.py:490" *) 5'h11;
  assign \$50  = controller_fsm_state == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\hdl\\_dsl.py:490" *) 5'h12;
  assign \$51  = controller_fsm_state == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\hdl\\_dsl.py:490" *) 5'h13;
  assign \$52  = controller_fsm_state == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\hdl\\_dsl.py:490" *) 5'h14;
  assign \$53  = bit_time * (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:199" *) 6'h28;
  assign \$54  = bram_address == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:260" *) 13'h1000;
  assign \$55  = bram_address == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:260" *) 13'h1001;
  assign \$56  = \$54  | (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:260" *) \$55 ;
  assign \$57  = bram_address == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:260" *) 13'h1002;
  assign \$58  = \$56  | (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:260" *) \$57 ;
  assign \$59  = current_device_index != (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:381" *) 4'hf;
  assign \$60  = 7'h40 + (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:371" *) current_cyclic_register;
  assign \$61  = current_device_index + (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:383" *) 1'h1;
  assign \$62  = rx_packet_size + (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:389" *) 3'h4;
  assign \$63  = 7'h40 + (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:398" *) current_tx_word_index;
  assign \$64  = 8'hc0 + (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:400" *) current_cyclic_register;
  assign \$65  = | (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:407" *) internalBramReadData[7:5];
  assign \$66  = current_cyclic_register < (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:407" *) 2'h3;
  assign \$67  = \$66  | (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:407" *) cyclic_data_enabled;
  assign \$68  = \$65  & (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:407" *) \$67 ;
  assign \$69  = | (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:413" *) current_tx_byte_index;
  assign \$70  = current_tx_word_index + (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:416" *) 1'h1;
  assign \$71  = current_tx_word_index + (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:417" *) 1'h1;
  assign \$72  = bytes_used >= (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:426" *) 3'h4;
  assign \$73  = internal_read_port_masked_bytes << (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:433" *) current_tx_bit_index;
  assign \$74  = { 31'h00000000, tx_data } | (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:433" *) \$73 ;
  assign \$75  = 3'h4 - (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:434" *) cyclic_register_starting_byte_index;
  assign \$77  = internal_read_port_masked_bytes >> (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:434" *) \$76 ;
  assign \$78  = current_tx_word_index + (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:437" *) 1'h1;
  assign \$79  = 3'h4 - (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:438" *) current_tx_byte_index;
  assign \$80  = $signed({ 1'h0, cyclic_register_size }) - (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:438" *) $signed(\$79 );
  assign \$81  = internal_read_port_masked_bytes << (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:442" *) current_tx_bit_index;
  assign \$82  = { 31'h00000000, tx_data } | (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:442" *) \$81 ;
  assign \$83  = current_cyclic_register < (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:445" *) 2'h3;
  assign \$84  = \$83  | (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:445" *) cyclic_data_enabled;
  assign \$85  = 7'h40 + (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:446" *) current_cyclic_register;
  assign \$86  = \$85  + (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:446" *) 1'h1;
  assign \$87  = current_cyclic_register + (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:447" *) 1'h1;
  assign \$88  = | (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:456" *) current_device_index;
  assign \$89  = previous_rx_packet_size >= (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:457" *) tx_packet_size;
  assign \$90  = previous_rx_packet_size - (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:458" *) tx_packet_size;
  assign \$91  = $signed(\$90 ) + (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:458" *) $signed(4'h4);
  assign \$92  = ! (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:467" *) timer;
  assign \$93  = ! (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:476" *) pre_timer;
  assign \$94  = timer - (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:477" *) 1'h1;
  assign \$95  = pre_timer - (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:480" *) 1'h1;
  assign \$96  = | (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:505" *) current_device_index;
  assign \$97  = bram_read_data[2] & (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:507" *) bram_read_data[4];
  assign \$98  = current_device_index != (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:525" *) 4'hf;
  assign \$99  = ! (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:549" *) timer;
  assign \$100  = ! (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:557" *) pre_timer;
  assign \$101  = timer - (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:558" *) 1'h1;
  assign \$102  = pre_timer - (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:561" *) 1'h1;
  assign \$103  = current_cyclic_register + (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:571" *) 1'h1;
  assign \$104  = 7'h40 + (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:573" *) current_cyclic_register;
  assign \$105  = \$104  + (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:573" *) 1'h1;
  assign \$106  = | (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:606" *) internalBramReadData[2:0];
  assign \$107  = current_cyclic_register < (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:606" *) 2'h3;
  assign \$108  = \$107  | (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:606" *) cyclic_data_enabled;
  assign \$109  = \$106  & (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:606" *) \$108 ;
  assign \$110  = current_device_index < (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:641" *) 4'hf;
  assign \$111  = internalBramReadData[4:3] + (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:611" *) internalBramReadData[2:0];
  assign \$112  = \$111  <= (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:611" *) 3'h4;
  assign \$113  = 8'h80 + (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:615" *) current_cyclic_register;
  assign \$115  = bram_read_data >> (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:617" *) \$114 ;
  assign \$116  = 3'h4 - (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:617" *) internalBramReadData[2:0];
  assign \$118  = 32'd4294967295 >> (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:617" *) \$117 ;
  assign \$119  = \$115  & (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:617" *) \$118 ;
  assign \$120  = internalBramReadData[4:3] + (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:620" *) internalBramReadData[2:0];
  assign \$121  = \$120  == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:620" *) 3'h4;
  assign \$122  = current_rx_word_index + (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:623" *) 1'h1;
  assign \$123  = 1'h0 + (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:624" *) current_rx_word_index;
  assign \$124  = \$123  + (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:624" *) 1'h1;
  assign \$126  = bram_read_data >> (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:632" *) \$125 ;
  assign \$127  = 3'h4 - (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:632" *) internalBramReadData[2:0];
  assign \$129  = 32'd4294967295 >> (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:632" *) \$128 ;
  assign \$130  = \$126  & (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:632" *) \$129 ;
  assign \$131  = 1'h0 + (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:635" *) current_rx_word_index;
  assign \$132  = \$131  + (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:635" *) 1'h1;
  assign \$133  = current_rx_word_index + (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:636" *) 1'h1;
  assign \$134  = 8'h80 + (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:663" *) current_cyclic_register;
  assign \$135  = cyclic_register_starting_byte_index + (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:666" *) cyclic_register_size;
  assign \$136  = \$135  - (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:666" *) 3'h4;
  assign \$137  = $signed(4'h4) - (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:666" *) $signed(\$136 );
  assign \$139  = 32'd4294967295 >> (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:666" *) \$138 ;
  assign \$140  = bram_read_data & (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:665" *) \$139 ;
  assign \$141  = 3'h4 - (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:667" *) cyclic_register_starting_byte_index;
  assign \$143  = \$140  << (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:665" *) \$142 ;
  assign \$144  = { 127'h00000000000000000000000000000000, rx_data } | (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:664" *) \$143 ;
  assign \$145  = current_device_index < (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:675" *) 4'hf;
  assign \$146  = current_device_index + (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:713" *) 1'h1;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:171" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) word_time <= 16'h0000;
    else word_time <= \$147 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:170" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) update_word_time <= 1'h0;
    else update_word_time <= \$148 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:131" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) internalBramAddress <= 16'h0000;
    else internalBramAddress <= \$149 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:251" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) get_tx_device_config_wait_read_delay <= 1'h0;
    else get_tx_device_config_wait_read_delay <= \$150 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:251" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) wait_tx_start_read_status_read_delay <= 1'h0;
    else wait_tx_start_read_status_read_delay <= \$151 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:251" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) wait_for_final_rx_packet_read_delay <= 1'h0;
    else wait_for_final_rx_packet_read_delay <= \$152 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:251" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) get_rx_register_config_read_delay <= 1'h0;
    else get_rx_register_config_read_delay <= \$153 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:251" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) get_rx_register_config_first_read_delay <= 1'h0;
    else get_rx_register_config_first_read_delay <= \$154 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:251" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) start_rx_read_delay <= 1'h0;
    else start_rx_read_delay <= \$155 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:258" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) bram_control_mode <= 1'h0;
    else bram_control_mode <= \$156 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:142" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) start_transfers <= 1'h0;
    else start_transfers <= \$157 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:143" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) bit_time <= 32'd0;
    else bit_time <= \$158 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:282" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) last_bram_address <= 16'h0000;
    else last_bram_address <= bram_address;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:134" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) internalWritePort__en <= 1'h0;
    else internalWritePort__en <= \$159 ;
  (* src = "C:\\Program Files\\WindowsApps\\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\\lib\\contextlib.py:142" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) controller_fsm_state <= 5'h00;
    else controller_fsm_state <= \$160 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:144" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) update_busy <= 1'h0;
    else update_busy <= \$161 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:145" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) update_done <= 1'h0;
    else update_done <= \$162 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:146" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) update_error <= 1'h0;
    else update_error <= \$163 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:155" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) current_device_index <= 8'h00;
    else current_device_index <= \$164 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:157" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) last_enabled_device_index <= 8'h00;
    else last_enabled_device_index <= \$165 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:156" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) current_enabled_device_index <= 8'h00;
    else current_enabled_device_index <= \$166 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:163" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) current_tx_byte_index <= 2'h0;
    else current_tx_byte_index <= \$167 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:164" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) current_rx_byte_index <= 2'h0;
    else current_rx_byte_index <= \$168 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:165" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) current_rx_word_index <= 3'h0;
    else current_rx_word_index <= \$169 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:166" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) current_tx_word_index <= 3'h0;
    else current_tx_word_index <= \$170 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:173" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) current_cyclic_register <= 6'h00;
    else current_cyclic_register <= \$171 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:168" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) timer <= 7'h00;
    else timer <= \$172 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:169" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) pre_timer <= 16'h0000;
    else pre_timer <= \$173 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:180" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) cyclic_data_enabled <= 1'h0;
    else cyclic_data_enabled <= \$174 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:161" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) previous_rx_packet_size <= 7'h00;
    else previous_rx_packet_size <= \$175 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:160" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) rx_packet_size <= 7'h00;
    else rx_packet_size <= \$176 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:37" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) \bram_write_enable$82  <= 1'h0;
    else \bram_write_enable$82  <= \$177 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:34" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) \bram_address$83  <= 16'h0000;
    else \bram_address$83  <= \$178 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:175" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) cyclic_register_size <= 3'h0;
    else cyclic_register_size <= \$179 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:176" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) cyclic_register_starting_byte_index <= 2'h0;
    else cyclic_register_starting_byte_index <= \$180 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:35" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) \bram_write_data$84  <= 32'd0;
    else \bram_write_data$84  <= \$181 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:159" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) tx_packet_size <= 7'h00;
    else tx_packet_size <= \$182 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:152" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) tx_data <= 32'd0;
    else tx_data <= \$183 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:133" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) internalWritePort__data <= 32'd0;
    else internalWritePort__data <= \$184 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:153" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) rx_data <= 32'd0;
    else rx_data <= \$185 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_controller.py:107" *)
  \Controller.em_serial_controller.drive_serial_port  drive_serial_port (
    .address(\bram_address$83 ),
    .bram_read_data(bram_read_data),
    .bram_write_data(\bram_write_data$84 ),
    .bram_write_enable(\bram_write_enable$82 ),
    .rx(rx),
    .sync_100_clk(sync_100_clk),
    .sync_100_rst(sync_100_rst),
    .tx(tx)
  );
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    bram_control_mode_comb = 1'h0;
    if (\$15 ) begin
      bram_control_mode_comb = 1'h1;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    debugPins[0] = 1'h0;
    if (\$15 ) begin
      debugPins[0] = 1'h1;
    end
    casez (controller_fsm_state)
      5'h00:
          /* empty */;
      5'h01:
          /* empty */;
      5'h02:
          /* empty */;
      5'h03:
          if (internalBramReadData[0]) begin
            debugPins[0] = 1'h1;
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    \bram_read_data$39  = 32'd0;
    casez (last_bram_address)
      16'h1002:
          if (bram_control_mode) begin
            \bram_read_data$39  = { 29'h00000000, update_error, update_done, update_busy };
          end
    endcase
    if (\$17 ) begin
      \bram_read_data$39  = externalReadPort__data;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    externalWritePort__data = 32'd0;
    if (\$16 ) begin
      externalWritePort__data = bram_write_data;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    externalWritePort__en = 1'h0;
    if (\$16 ) begin
      externalWritePort__en = bram_write_enable;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    debugPins_fsm = 5'h00;
    casez (controller_fsm_state)
      5'h00:
          debugPins_fsm = 5'h01;
      5'h01:
          debugPins_fsm = 5'h02;
      5'h02:
          debugPins_fsm = 5'h03;
      5'h03:
          debugPins_fsm = 5'h04;
      5'h04:
          debugPins_fsm = 5'h05;
      5'h06:
          debugPins_fsm = 5'h06;
      5'h07:
          debugPins_fsm = 5'h07;
      5'h08:
          debugPins_fsm = 5'h08;
      5'h09:
          debugPins_fsm = 5'h09;
      5'h0a:
          debugPins_fsm = 5'h0a;
      5'h0b:
          debugPins_fsm = 5'h0b;
      5'h0c:
          debugPins_fsm = 5'h0c;
      5'h05:
          debugPins_fsm = 5'h0d;
      5'h0f:
          debugPins_fsm = 5'h0e;
      5'h0d:
          debugPins_fsm = 5'h0e;
      5'h11:
          debugPins_fsm = 5'h0f;
      5'h10:
          debugPins_fsm = 5'h10;
      5'h12:
          debugPins_fsm = 5'h11;
      5'h13:
          debugPins_fsm = 5'h12;
      5'h14:
          debugPins_fsm = 5'h13;
      5'h0e:
          debugPins_fsm = 5'h14;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    use_future_device_bram = 1'h0;
    casez (controller_fsm_state)
      5'h00:
          /* empty */;
      5'h01:
          /* empty */;
      5'h02:
          use_future_device_bram = 1'h1;
      5'h03:
          use_future_device_bram = 1'h1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    bytes_used = 4'h0;
    casez (controller_fsm_state)
      5'h00:
          /* empty */;
      5'h01:
          /* empty */;
      5'h02:
          /* empty */;
      5'h03:
          /* empty */;
      5'h04:
          /* empty */;
      5'h06:
          /* empty */;
      5'h07:
          bytes_used = \$19 ;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    offset = 3'h0;
    casez (controller_fsm_state)
      5'h00:
          /* empty */;
      5'h01:
          /* empty */;
      5'h02:
          /* empty */;
      5'h03:
          /* empty */;
      5'h04:
          /* empty */;
      5'h06:
          /* empty */;
      5'h07:
          if (\$20 ) begin
            (* full_case = 32'd1 *)
            if (\$21 ) begin
              offset = 3'h4;
            end else begin
              offset = 3'h3;
            end
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    serial_port_tx_trigger = 1'h0;
    casez (controller_fsm_state)
      5'h00:
          /* empty */;
      5'h01:
          /* empty */;
      5'h02:
          /* empty */;
      5'h03:
          /* empty */;
      5'h04:
          /* empty */;
      5'h06:
          /* empty */;
      5'h07:
          /* empty */;
      5'h08:
          /* empty */;
      5'h09:
          if (\$22 ) begin
            serial_port_tx_trigger = 1'h1;
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    rx_invalid_crc_fault = 1'h0;
    casez (controller_fsm_state)
      5'h00:
          /* empty */;
      5'h01:
          /* empty */;
      5'h02:
          /* empty */;
      5'h03:
          /* empty */;
      5'h04:
          /* empty */;
      5'h06:
          /* empty */;
      5'h07:
          /* empty */;
      5'h08:
          /* empty */;
      5'h09:
          /* empty */;
      5'h0a:
          /* empty */;
      5'h0b:
          /* empty */;
      5'h0c:
          if (bram_read_data[0]) begin
            if (\$23 ) begin
              (* full_case = 32'd1 *)
              if (\$24 ) begin
              end else begin
                if (\$26 ) begin
                  rx_invalid_crc_fault = 1'h1;
                end
              end
            end
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    rx_not_finished_fault = 1'h0;
    casez (controller_fsm_state)
      5'h00:
          /* empty */;
      5'h01:
          /* empty */;
      5'h02:
          /* empty */;
      5'h03:
          /* empty */;
      5'h04:
          /* empty */;
      5'h06:
          /* empty */;
      5'h07:
          /* empty */;
      5'h08:
          /* empty */;
      5'h09:
          /* empty */;
      5'h0a:
          /* empty */;
      5'h0b:
          /* empty */;
      5'h0c:
          if (bram_read_data[0]) begin
            if (\$23 ) begin
              (* full_case = 32'd1 *)
              if (\$24 ) begin
              end else begin
                if (\$28 ) begin
                  rx_not_finished_fault = 1'h1;
                end
              end
            end
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    rx_no_response_fault = 1'h0;
    casez (controller_fsm_state)
      5'h00:
          /* empty */;
      5'h01:
          /* empty */;
      5'h02:
          /* empty */;
      5'h03:
          /* empty */;
      5'h04:
          /* empty */;
      5'h06:
          /* empty */;
      5'h07:
          /* empty */;
      5'h08:
          /* empty */;
      5'h09:
          /* empty */;
      5'h0a:
          /* empty */;
      5'h0b:
          /* empty */;
      5'h0c:
          if (bram_read_data[0]) begin
            if (\$23 ) begin
              (* full_case = 32'd1 *)
              if (\$24 ) begin
              end else begin
                if (\$31 ) begin
                  rx_no_response_fault = 1'h1;
                end
              end
            end
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    use_previous_device_bram = 1'h0;
    casez (controller_fsm_state)
      5'h00:
          /* empty */;
      5'h01:
          /* empty */;
      5'h02:
          /* empty */;
      5'h03:
          /* empty */;
      5'h04:
          /* empty */;
      5'h06:
          /* empty */;
      5'h07:
          /* empty */;
      5'h08:
          /* empty */;
      5'h09:
          /* empty */;
      5'h0a:
          /* empty */;
      5'h0b:
          /* empty */;
      5'h0c:
          if (bram_read_data[0]) begin
            if (\$23 ) begin
              use_previous_device_bram = 1'h1;
            end
          end
      5'h05:
          /* empty */;
      5'h0f:
          use_previous_device_bram = 1'h1;
      5'h0d:
          use_previous_device_bram = 1'h1;
      5'h11:
          /* empty */;
      5'h10:
          use_previous_device_bram = 1'h1;
      5'h12:
          use_previous_device_bram = 1'h1;
      5'h13:
          use_previous_device_bram = 1'h1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    serial_port_rx_trigger = 1'h0;
    casez (controller_fsm_state)
      5'h00:
          /* empty */;
      5'h01:
          /* empty */;
      5'h02:
          /* empty */;
      5'h03:
          /* empty */;
      5'h04:
          /* empty */;
      5'h06:
          /* empty */;
      5'h07:
          /* empty */;
      5'h08:
          /* empty */;
      5'h09:
          /* empty */;
      5'h0a:
          /* empty */;
      5'h0b:
          /* empty */;
      5'h0c:
          /* empty */;
      5'h05:
          /* empty */;
      5'h0f:
          /* empty */;
      5'h0d:
          /* empty */;
      5'h11:
          /* empty */;
      5'h10:
          /* empty */;
      5'h12:
          /* empty */;
      5'h13:
          /* empty */;
      5'h14:
          /* empty */;
      5'h0e:
          serial_port_rx_trigger = 1'h1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    \$147  = word_time;
    if (update_word_time) begin
      \$147  = \$53 [15:0];
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    \$148  = update_word_time;
    if (update_word_time) begin
      \$148  = 1'h0;
    end
    if (bram_write_enable) begin
      casez (bram_address)
        16'h1000:
            /* empty */;
        16'h1001:
            \$148  = 1'h1;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    \$149 [7:0] = internalBramAddress[7:0];
    (* full_case = 32'd1 *)
    if (use_previous_device_bram) begin
      \$149 [15:8] = last_enabled_device_index;
    end else if (use_future_device_bram) begin
      \$149 [15:8] = current_device_index;
    end else begin
      \$149 [15:8] = current_enabled_device_index;
    end
    casez (controller_fsm_state)
      5'h00:
          /* empty */;
      5'h01:
          /* empty */;
      5'h02:
          \$149 [7:0] = 8'h00;
      5'h03:
          if (internalBramReadData[0]) begin
            \$149 [7:0] = \$60 ;
          end
      5'h04:
          \$149 [7:0] = \$64 [7:0];
      5'h06:
          /* empty */;
      5'h07:
          if (\$84 ) begin
            \$149 [7:0] = \$86 [7:0];
          end
      5'h08:
          /* empty */;
      5'h09:
          /* empty */;
      5'h0a:
          /* empty */;
      5'h0b:
          /* empty */;
      5'h0c:
          if (bram_read_data[0]) begin
            if (\$96 ) begin
              \$149 [7:0] = 8'h01;
            end
          end
      5'h05:
          /* empty */;
      5'h0f:
          (* full_case = 32'd1 *)
          if (get_rx_register_config_read_delay) begin
          end else begin
            \$149 [7:0] = \$105 [7:0];
          end
      5'h0d:
          (* full_case = 32'd1 *)
          if (get_rx_register_config_first_read_delay) begin
          end else begin
            \$149 [7:0] = 8'h40;
          end
      5'h11:
          /* empty */;
      5'h10:
          if (\$109 ) begin
            if (\$112 ) begin
              \$149 [7:0] = \$113 [7:0];
            end
          end
      5'h12:
          /* empty */;
      5'h13:
          \$149 [7:0] = \$134 [7:0];
      5'h14:
          /* empty */;
      5'h0e:
          \$149 [7:0] = 8'h00;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    \$150  = get_tx_device_config_wait_read_delay;
    if (get_tx_device_config_wait_read_delay) begin
      \$150  = 1'h0;
    end
    casez (controller_fsm_state)
      5'h00:
          /* empty */;
      5'h01:
          /* empty */;
      5'h02:
          \$150  = 1'h1;
      5'h03:
          if (internalBramReadData[0]) begin
          end else if (\$59 ) begin
            \$150  = 1'h1;
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    \$151  = wait_tx_start_read_status_read_delay;
    if (wait_tx_start_read_status_read_delay) begin
      \$151  = 1'h0;
    end
    casez (controller_fsm_state)
      5'h00:
          /* empty */;
      5'h01:
          /* empty */;
      5'h02:
          /* empty */;
      5'h03:
          /* empty */;
      5'h04:
          /* empty */;
      5'h06:
          /* empty */;
      5'h07:
          /* empty */;
      5'h08:
          /* empty */;
      5'h09:
          /* empty */;
      5'h0a:
          \$151  = 1'h1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    \$152  = wait_for_final_rx_packet_read_delay;
    if (wait_for_final_rx_packet_read_delay) begin
      \$152  = 1'h0;
    end
    casez (controller_fsm_state)
      5'h00:
          /* empty */;
      5'h01:
          /* empty */;
      5'h02:
          /* empty */;
      5'h03:
          /* empty */;
      5'h04:
          /* empty */;
      5'h06:
          /* empty */;
      5'h07:
          /* empty */;
      5'h08:
          /* empty */;
      5'h09:
          /* empty */;
      5'h0a:
          /* empty */;
      5'h0b:
          /* empty */;
      5'h0c:
          /* empty */;
      5'h05:
          if (\$99 ) begin
            \$152  = 1'h1;
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    \$153  = get_rx_register_config_read_delay;
    if (get_rx_register_config_read_delay) begin
      \$153  = 1'h0;
    end
    casez (controller_fsm_state)
      5'h00:
          /* empty */;
      5'h01:
          /* empty */;
      5'h02:
          /* empty */;
      5'h03:
          /* empty */;
      5'h04:
          /* empty */;
      5'h06:
          /* empty */;
      5'h07:
          /* empty */;
      5'h08:
          /* empty */;
      5'h09:
          /* empty */;
      5'h0a:
          /* empty */;
      5'h0b:
          /* empty */;
      5'h0c:
          /* empty */;
      5'h05:
          /* empty */;
      5'h0f:
          (* full_case = 32'd1 *)
          if (get_rx_register_config_read_delay) begin
          end else begin
            \$153  = 1'h1;
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    \$154  = get_rx_register_config_first_read_delay;
    if (get_rx_register_config_first_read_delay) begin
      \$154  = 1'h0;
    end
    casez (controller_fsm_state)
      5'h00:
          /* empty */;
      5'h01:
          /* empty */;
      5'h02:
          /* empty */;
      5'h03:
          /* empty */;
      5'h04:
          /* empty */;
      5'h06:
          /* empty */;
      5'h07:
          /* empty */;
      5'h08:
          /* empty */;
      5'h09:
          /* empty */;
      5'h0a:
          /* empty */;
      5'h0b:
          /* empty */;
      5'h0c:
          /* empty */;
      5'h05:
          /* empty */;
      5'h0f:
          /* empty */;
      5'h0d:
          (* full_case = 32'd1 *)
          if (get_rx_register_config_first_read_delay) begin
          end else begin
            \$154  = 1'h1;
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    \$155  = start_rx_read_delay;
    if (start_rx_read_delay) begin
      \$155  = 1'h0;
    end
    casez (controller_fsm_state)
      5'h00:
          /* empty */;
      5'h01:
          /* empty */;
      5'h02:
          /* empty */;
      5'h03:
          /* empty */;
      5'h04:
          /* empty */;
      5'h06:
          /* empty */;
      5'h07:
          /* empty */;
      5'h08:
          /* empty */;
      5'h09:
          /* empty */;
      5'h0a:
          /* empty */;
      5'h0b:
          /* empty */;
      5'h0c:
          /* empty */;
      5'h05:
          /* empty */;
      5'h0f:
          /* empty */;
      5'h0d:
          /* empty */;
      5'h11:
          /* empty */;
      5'h10:
          /* empty */;
      5'h12:
          /* empty */;
      5'h13:
          /* empty */;
      5'h14:
          /* empty */;
      5'h0e:
          \$155  = 1'h1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    (* full_case = 32'd1 *)
    if (\$58 ) begin
      \$156  = 1'h1;
    end else begin
      \$156  = 1'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    \$157  = start_transfers;
    if (bram_write_enable) begin
      casez (bram_address)
        16'h1000:
            \$157  = bram_write_data[0];
      endcase
    end
    casez (controller_fsm_state)
      5'h00:
          /* empty */;
      5'h01:
          \$157  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    \$158  = bit_time;
    if (bram_write_enable) begin
      casez (bram_address)
        16'h1000:
            /* empty */;
        16'h1001:
            \$158  = bram_write_data;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    \$159  = internalWritePort__en;
    casez (controller_fsm_state)
      5'h00:
          \$159  = 1'h0;
      5'h01:
          /* empty */;
      5'h02:
          /* empty */;
      5'h03:
          /* empty */;
      5'h04:
          /* empty */;
      5'h06:
          /* empty */;
      5'h07:
          /* empty */;
      5'h08:
          /* empty */;
      5'h09:
          /* empty */;
      5'h0a:
          /* empty */;
      5'h0b:
          /* empty */;
      5'h0c:
          if (bram_read_data[0]) begin
            if (\$96 ) begin
              \$159  = 1'h1;
            end
          end
      5'h05:
          /* empty */;
      5'h0f:
          \$159  = 1'h0;
      5'h0d:
          \$159  = 1'h0;
      5'h11:
          \$159  = 1'h0;
      5'h10:
          if (\$109 ) begin
            if (\$112 ) begin
              \$159  = 1'h1;
            end
          end
      5'h12:
          /* empty */;
      5'h13:
          \$159  = 1'h1;
      5'h14:
          /* empty */;
      5'h0e:
          \$159  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    \$160  = controller_fsm_state;
    casez (controller_fsm_state)
      5'h00:
          if (start_transfers) begin
            \$160  = 5'h01;
          end
      5'h01:
          \$160  = 5'h02;
      5'h02:
          if (get_tx_device_config_wait_read_delay) begin
            \$160  = 5'h03;
          end
      5'h03:
          (* full_case = 32'd1 *)
          if (internalBramReadData[0]) begin
            \$160  = 5'h04;
          end else if (\$59 ) begin
            \$160  = 5'h02;
          end else begin
            \$160  = 5'h05;
          end
      5'h04:
          \$160  = 5'h06;
      5'h06:
          (* full_case = 32'd1 *)
          if (\$68 ) begin
            \$160  = 5'h07;
          end else begin
            \$160  = 5'h08;
          end
      5'h07:
          (* full_case = 32'd1 *)
          if (\$84 ) begin
            \$160  = 5'h04;
          end else begin
            \$160  = 5'h08;
          end
      5'h08:
          \$160  = 5'h09;
      5'h09:
          if (\$92 ) begin
            \$160  = 5'h0a;
          end
      5'h0a:
          if (wait_tx_start_read_status_read_delay) begin
            \$160  = 5'h0b;
          end
      5'h0b:
          if (bram_read_data[1]) begin
            \$160  = 5'h0c;
          end
      5'h0c:
          if (bram_read_data[0]) begin
            (* full_case = 32'd1 *)
            if (\$96 ) begin
              (* full_case = 32'd1 *)
              if (\$97 ) begin
                \$160  = 5'h0d;
              end else begin
                (* full_case = 32'd1 *)
                if (\$98 ) begin
                  \$160  = 5'h0e;
                end else begin
                  \$160  = 5'h00;
                end
              end
            end else begin
              \$160  = 5'h0e;
            end
          end
      5'h05:
          if (\$99 ) begin
            if (wait_for_final_rx_packet_read_delay) begin
              \$160  = 5'h0c;
            end
          end
      5'h0f:
          if (get_rx_register_config_read_delay) begin
            \$160  = 5'h10;
          end
      5'h0d:
          if (get_rx_register_config_first_read_delay) begin
            \$160  = 5'h10;
          end
      5'h11:
          \$160  = 5'h10;
      5'h10:
          (* full_case = 32'd1 *)
          if (\$109 ) begin
            (* full_case = 32'd1 *)
            if (\$112 ) begin
              \$160  = 5'h0f;
            end else begin
              \$160  = 5'h12;
            end
          end else if (\$110 ) begin
            \$160  = 5'h0e;
          end else begin
            \$160  = 5'h00;
          end
      5'h12:
          \$160  = 5'h13;
      5'h13:
          \$160  = 5'h0f;
      5'h14:
          (* full_case = 32'd1 *)
          if (\$145 ) begin
            \$160  = 5'h0e;
          end else begin
            \$160  = 5'h00;
          end
      5'h0e:
          if (start_rx_read_delay) begin
            \$160  = 5'h02;
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    \$161  = update_busy;
    casez (controller_fsm_state)
      5'h00:
          /* empty */;
      5'h01:
          \$161  = 1'h1;
      5'h02:
          /* empty */;
      5'h03:
          /* empty */;
      5'h04:
          /* empty */;
      5'h06:
          /* empty */;
      5'h07:
          /* empty */;
      5'h08:
          /* empty */;
      5'h09:
          /* empty */;
      5'h0a:
          /* empty */;
      5'h0b:
          /* empty */;
      5'h0c:
          if (bram_read_data[0]) begin
            if (\$96 ) begin
              (* full_case = 32'd1 *)
              if (\$97 ) begin
              end else begin
                (* full_case = 32'd1 *)
                if (\$98 ) begin
                end else begin
                  \$161  = 1'h0;
                end
              end
            end
          end
      5'h05:
          /* empty */;
      5'h0f:
          /* empty */;
      5'h0d:
          /* empty */;
      5'h11:
          /* empty */;
      5'h10:
          (* full_case = 32'd1 *)
          if (\$109 ) begin
          end else if (\$110 ) begin
          end else begin
            \$161  = 1'h0;
          end
      5'h12:
          /* empty */;
      5'h13:
          /* empty */;
      5'h14:
          (* full_case = 32'd1 *)
          if (\$145 ) begin
          end else begin
            \$161  = 1'h0;
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    \$162  = update_done;
    casez (controller_fsm_state)
      5'h00:
          /* empty */;
      5'h01:
          \$162  = 1'h0;
      5'h02:
          /* empty */;
      5'h03:
          /* empty */;
      5'h04:
          /* empty */;
      5'h06:
          /* empty */;
      5'h07:
          /* empty */;
      5'h08:
          /* empty */;
      5'h09:
          /* empty */;
      5'h0a:
          /* empty */;
      5'h0b:
          /* empty */;
      5'h0c:
          if (bram_read_data[0]) begin
            if (\$96 ) begin
              (* full_case = 32'd1 *)
              if (\$97 ) begin
              end else begin
                (* full_case = 32'd1 *)
                if (\$98 ) begin
                end else begin
                  \$162  = 1'h1;
                end
              end
            end
          end
      5'h05:
          /* empty */;
      5'h0f:
          /* empty */;
      5'h0d:
          /* empty */;
      5'h11:
          /* empty */;
      5'h10:
          (* full_case = 32'd1 *)
          if (\$109 ) begin
          end else if (\$110 ) begin
          end else begin
            \$162  = 1'h1;
          end
      5'h12:
          /* empty */;
      5'h13:
          /* empty */;
      5'h14:
          (* full_case = 32'd1 *)
          if (\$145 ) begin
          end else begin
            \$162  = 1'h1;
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    \$163  = update_error;
    casez (controller_fsm_state)
      5'h00:
          /* empty */;
      5'h01:
          \$163  = 1'h0;
      5'h02:
          /* empty */;
      5'h03:
          /* empty */;
      5'h04:
          /* empty */;
      5'h06:
          /* empty */;
      5'h07:
          /* empty */;
      5'h08:
          /* empty */;
      5'h09:
          /* empty */;
      5'h0a:
          /* empty */;
      5'h0b:
          /* empty */;
      5'h0c:
          if (bram_read_data[0]) begin
            if (\$96 ) begin
              (* full_case = 32'd1 *)
              if (\$97 ) begin
              end else begin
                \$163  = 1'h1;
              end
            end
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    \$164  = current_device_index;
    casez (controller_fsm_state)
      5'h00:
          /* empty */;
      5'h01:
          \$164  = 8'h00;
      5'h02:
          /* empty */;
      5'h03:
          if (internalBramReadData[0]) begin
          end else if (\$59 ) begin
            \$164  = \$61 [7:0];
          end
      5'h04:
          /* empty */;
      5'h06:
          /* empty */;
      5'h07:
          /* empty */;
      5'h08:
          /* empty */;
      5'h09:
          /* empty */;
      5'h0a:
          /* empty */;
      5'h0b:
          /* empty */;
      5'h0c:
          /* empty */;
      5'h05:
          /* empty */;
      5'h0f:
          /* empty */;
      5'h0d:
          /* empty */;
      5'h11:
          /* empty */;
      5'h10:
          /* empty */;
      5'h12:
          /* empty */;
      5'h13:
          /* empty */;
      5'h14:
          /* empty */;
      5'h0e:
          (* full_case = 32'd1 *)
          if (start_rx_read_delay) begin
          end else begin
            \$164  = \$146 [7:0];
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    \$165  = last_enabled_device_index;
    casez (controller_fsm_state)
      5'h00:
          /* empty */;
      5'h01:
          \$165  = 8'h00;
      5'h02:
          /* empty */;
      5'h03:
          if (internalBramReadData[0]) begin
            \$165  = current_enabled_device_index;
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    \$166  = current_enabled_device_index;
    casez (controller_fsm_state)
      5'h00:
          /* empty */;
      5'h01:
          \$166  = 8'h00;
      5'h02:
          /* empty */;
      5'h03:
          if (internalBramReadData[0]) begin
            \$166  = current_device_index;
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    \$167  = current_tx_byte_index;
    casez (controller_fsm_state)
      5'h00:
          /* empty */;
      5'h01:
          \$167  = 2'h0;
      5'h02:
          /* empty */;
      5'h03:
          /* empty */;
      5'h04:
          /* empty */;
      5'h06:
          /* empty */;
      5'h07:
          (* full_case = 32'd1 *)
          if (\$72 ) begin
            \$167  = \$80 [1:0];
          end else begin
            \$167  = bytes_used[1:0];
          end
      5'h08:
          /* empty */;
      5'h09:
          /* empty */;
      5'h0a:
          /* empty */;
      5'h0b:
          /* empty */;
      5'h0c:
          /* empty */;
      5'h05:
          /* empty */;
      5'h0f:
          /* empty */;
      5'h0d:
          /* empty */;
      5'h11:
          /* empty */;
      5'h10:
          /* empty */;
      5'h12:
          /* empty */;
      5'h13:
          /* empty */;
      5'h14:
          /* empty */;
      5'h0e:
          \$167  = 2'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    \$168  = current_rx_byte_index;
    casez (controller_fsm_state)
      5'h00:
          /* empty */;
      5'h01:
          \$168  = 2'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    \$169  = current_rx_word_index;
    casez (controller_fsm_state)
      5'h00:
          /* empty */;
      5'h01:
          \$169  = 3'h0;
      5'h02:
          /* empty */;
      5'h03:
          /* empty */;
      5'h04:
          /* empty */;
      5'h06:
          /* empty */;
      5'h07:
          /* empty */;
      5'h08:
          /* empty */;
      5'h09:
          /* empty */;
      5'h0a:
          /* empty */;
      5'h0b:
          /* empty */;
      5'h0c:
          /* empty */;
      5'h05:
          /* empty */;
      5'h0f:
          /* empty */;
      5'h0d:
          (* full_case = 32'd1 *)
          if (get_rx_register_config_first_read_delay) begin
          end else begin
            \$169  = 3'h0;
          end
      5'h11:
          /* empty */;
      5'h10:
          if (\$109 ) begin
            (* full_case = 32'd1 *)
            if (\$112 ) begin
              if (\$121 ) begin
                \$169  = \$122 [2:0];
              end
            end else begin
              \$169  = \$133 [2:0];
            end
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    \$170  = current_tx_word_index;
    casez (controller_fsm_state)
      5'h00:
          /* empty */;
      5'h01:
          \$170  = 3'h0;
      5'h02:
          /* empty */;
      5'h03:
          /* empty */;
      5'h04:
          /* empty */;
      5'h06:
          (* full_case = 32'd1 *)
          if (\$68 ) begin
          end else begin
            if (\$69 ) begin
              \$170  = \$70 [2:0];
            end
          end
      5'h07:
          if (\$72 ) begin
            \$170  = \$78 [2:0];
          end
      5'h08:
          /* empty */;
      5'h09:
          /* empty */;
      5'h0a:
          /* empty */;
      5'h0b:
          /* empty */;
      5'h0c:
          /* empty */;
      5'h05:
          /* empty */;
      5'h0f:
          /* empty */;
      5'h0d:
          /* empty */;
      5'h11:
          /* empty */;
      5'h10:
          /* empty */;
      5'h12:
          /* empty */;
      5'h13:
          /* empty */;
      5'h14:
          /* empty */;
      5'h0e:
          \$170  = 3'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    \$171  = current_cyclic_register;
    casez (controller_fsm_state)
      5'h00:
          /* empty */;
      5'h01:
          \$171  = 6'h00;
      5'h02:
          /* empty */;
      5'h03:
          /* empty */;
      5'h04:
          /* empty */;
      5'h06:
          /* empty */;
      5'h07:
          if (\$84 ) begin
            \$171  = \$87 [5:0];
          end
      5'h08:
          /* empty */;
      5'h09:
          /* empty */;
      5'h0a:
          /* empty */;
      5'h0b:
          /* empty */;
      5'h0c:
          /* empty */;
      5'h05:
          /* empty */;
      5'h0f:
          (* full_case = 32'd1 *)
          if (get_rx_register_config_read_delay) begin
          end else begin
            \$171  = \$103 [5:0];
          end
      5'h0d:
          (* full_case = 32'd1 *)
          if (get_rx_register_config_first_read_delay) begin
          end else begin
            \$171  = 6'h00;
          end
      5'h11:
          /* empty */;
      5'h10:
          /* empty */;
      5'h12:
          /* empty */;
      5'h13:
          /* empty */;
      5'h14:
          /* empty */;
      5'h0e:
          \$171  = 6'h00;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    \$172  = timer;
    casez (controller_fsm_state)
      5'h00:
          /* empty */;
      5'h01:
          \$172  = 7'h00;
      5'h02:
          /* empty */;
      5'h03:
          (* full_case = 32'd1 *)
          if (internalBramReadData[0]) begin
          end else if (\$59 ) begin
          end else begin
            \$172  = \$62 [6:0];
          end
      5'h04:
          /* empty */;
      5'h06:
          /* empty */;
      5'h07:
          /* empty */;
      5'h08:
          if (\$88 ) begin
            (* full_case = 32'd1 *)
            if (\$89 ) begin
              \$172  = \$91 [6:0];
            end else begin
              \$172  = 7'h04;
            end
          end
      5'h09:
          (* full_case = 32'd1 *)
          if (\$92 ) begin
          end else begin
            if (\$93 ) begin
              \$172  = \$94 [6:0];
            end
          end
      5'h0a:
          /* empty */;
      5'h0b:
          /* empty */;
      5'h0c:
          /* empty */;
      5'h05:
          (* full_case = 32'd1 *)
          if (\$99 ) begin
          end else begin
            if (\$100 ) begin
              \$172  = \$101 [6:0];
            end
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    \$173  = pre_timer;
    casez (controller_fsm_state)
      5'h00:
          /* empty */;
      5'h01:
          \$173  = 16'h0000;
      5'h02:
          /* empty */;
      5'h03:
          (* full_case = 32'd1 *)
          if (internalBramReadData[0]) begin
          end else if (\$59 ) begin
          end else begin
            \$173  = word_time;
          end
      5'h04:
          /* empty */;
      5'h06:
          /* empty */;
      5'h07:
          /* empty */;
      5'h08:
          \$173  = word_time;
      5'h09:
          (* full_case = 32'd1 *)
          if (\$92 ) begin
          end else begin
            (* full_case = 32'd1 *)
            if (\$93 ) begin
              \$173  = word_time;
            end else begin
              \$173  = \$95 [15:0];
            end
          end
      5'h0a:
          /* empty */;
      5'h0b:
          /* empty */;
      5'h0c:
          /* empty */;
      5'h05:
          (* full_case = 32'd1 *)
          if (\$99 ) begin
          end else begin
            (* full_case = 32'd1 *)
            if (\$100 ) begin
              \$173  = word_time;
            end else begin
              \$173  = \$102 [15:0];
            end
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    \$174  = cyclic_data_enabled;
    casez (controller_fsm_state)
      5'h00:
          /* empty */;
      5'h01:
          /* empty */;
      5'h02:
          /* empty */;
      5'h03:
          if (internalBramReadData[0]) begin
            \$174  = internalBramReadData[1];
          end
      5'h04:
          /* empty */;
      5'h06:
          /* empty */;
      5'h07:
          /* empty */;
      5'h08:
          /* empty */;
      5'h09:
          /* empty */;
      5'h0a:
          /* empty */;
      5'h0b:
          /* empty */;
      5'h0c:
          /* empty */;
      5'h05:
          /* empty */;
      5'h0f:
          /* empty */;
      5'h0d:
          /* empty */;
      5'h11:
          /* empty */;
      5'h10:
          /* empty */;
      5'h12:
          /* empty */;
      5'h13:
          /* empty */;
      5'h14:
          /* empty */;
      5'h0e:
          \$174  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    \$175  = previous_rx_packet_size;
    casez (controller_fsm_state)
      5'h00:
          /* empty */;
      5'h01:
          /* empty */;
      5'h02:
          /* empty */;
      5'h03:
          if (internalBramReadData[0]) begin
            \$175  = rx_packet_size;
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    \$176  = rx_packet_size;
    casez (controller_fsm_state)
      5'h00:
          /* empty */;
      5'h01:
          /* empty */;
      5'h02:
          /* empty */;
      5'h03:
          if (internalBramReadData[0]) begin
            (* full_case = 32'd1 *)
            if (internalBramReadData[1]) begin
              \$176  = internalBramReadData[8:2];
            end else begin
              \$176  = 7'h03;
            end
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    \$177  = \bram_write_enable$82 ;
    casez (controller_fsm_state)
      5'h00:
          /* empty */;
      5'h01:
          /* empty */;
      5'h02:
          /* empty */;
      5'h03:
          /* empty */;
      5'h04:
          \$177  = 1'h0;
      5'h06:
          (* full_case = 32'd1 *)
          if (\$68 ) begin
          end else begin
            if (\$69 ) begin
              \$177  = 1'h1;
            end
          end
      5'h07:
          if (\$72 ) begin
            \$177  = 1'h1;
          end
      5'h08:
          /* empty */;
      5'h09:
          (* full_case = 32'd1 *)
          if (\$92 ) begin
            \$177  = 1'h1;
          end else begin
            \$177  = 1'h0;
          end
      5'h0a:
          \$177  = 1'h0;
      5'h0b:
          /* empty */;
      5'h0c:
          (* full_case = 32'd1 *)
          if (bram_read_data[0]) begin
          end else begin
            \$177  = 1'h0;
          end
      5'h05:
          /* empty */;
      5'h0f:
          /* empty */;
      5'h0d:
          /* empty */;
      5'h11:
          /* empty */;
      5'h10:
          /* empty */;
      5'h12:
          /* empty */;
      5'h13:
          /* empty */;
      5'h14:
          /* empty */;
      5'h0e:
          (* full_case = 32'd1 *)
          if (start_rx_read_delay) begin
            \$177  = 1'h0;
          end else begin
            \$177  = 1'h1;
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    \$178  = \bram_address$83 ;
    casez (controller_fsm_state)
      5'h00:
          /* empty */;
      5'h01:
          /* empty */;
      5'h02:
          /* empty */;
      5'h03:
          /* empty */;
      5'h04:
          \$178  = { 8'h00, \$63  };
      5'h06:
          /* empty */;
      5'h07:
          /* empty */;
      5'h08:
          /* empty */;
      5'h09:
          if (\$92 ) begin
            \$178  = 16'h8000;
          end
      5'h0a:
          \$178  = 16'h8002;
      5'h0b:
          /* empty */;
      5'h0c:
          /* empty */;
      5'h05:
          if (\$99 ) begin
            \$178  = 16'h8002;
          end
      5'h0f:
          /* empty */;
      5'h0d:
          (* full_case = 32'd1 *)
          if (get_rx_register_config_first_read_delay) begin
          end else begin
            \$178  = 16'h0000;
          end
      5'h11:
          /* empty */;
      5'h10:
          if (\$109 ) begin
            (* full_case = 32'd1 *)
            if (\$112 ) begin
              if (\$121 ) begin
                \$178  = { 11'h000, \$124  };
              end
            end else begin
              \$178  = { 11'h000, \$132  };
            end
          end
      5'h12:
          /* empty */;
      5'h13:
          /* empty */;
      5'h14:
          /* empty */;
      5'h0e:
          \$178  = 16'h8000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    \$179  = cyclic_register_size;
    casez (controller_fsm_state)
      5'h00:
          /* empty */;
      5'h01:
          /* empty */;
      5'h02:
          /* empty */;
      5'h03:
          /* empty */;
      5'h04:
          /* empty */;
      5'h06:
          if (\$68 ) begin
            \$179  = internalBramReadData[7:5];
          end
      5'h07:
          /* empty */;
      5'h08:
          /* empty */;
      5'h09:
          /* empty */;
      5'h0a:
          /* empty */;
      5'h0b:
          /* empty */;
      5'h0c:
          /* empty */;
      5'h05:
          /* empty */;
      5'h0f:
          /* empty */;
      5'h0d:
          /* empty */;
      5'h11:
          /* empty */;
      5'h10:
          if (\$109 ) begin
            \$179  = internalBramReadData[2:0];
          end
      5'h12:
          /* empty */;
      5'h13:
          /* empty */;
      5'h14:
          /* empty */;
      5'h0e:
          \$179  = 3'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    \$180  = cyclic_register_starting_byte_index;
    casez (controller_fsm_state)
      5'h00:
          /* empty */;
      5'h01:
          /* empty */;
      5'h02:
          /* empty */;
      5'h03:
          /* empty */;
      5'h04:
          /* empty */;
      5'h06:
          if (\$68 ) begin
            \$180  = internalBramReadData[9:8];
          end
      5'h07:
          /* empty */;
      5'h08:
          /* empty */;
      5'h09:
          /* empty */;
      5'h0a:
          /* empty */;
      5'h0b:
          /* empty */;
      5'h0c:
          /* empty */;
      5'h05:
          /* empty */;
      5'h0f:
          /* empty */;
      5'h0d:
          /* empty */;
      5'h11:
          /* empty */;
      5'h10:
          if (\$109 ) begin
            \$180  = internalBramReadData[4:3];
          end
      5'h12:
          /* empty */;
      5'h13:
          /* empty */;
      5'h14:
          /* empty */;
      5'h0e:
          \$180  = 2'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    \$181  = \bram_write_data$84 ;
    casez (controller_fsm_state)
      5'h00:
          /* empty */;
      5'h01:
          /* empty */;
      5'h02:
          /* empty */;
      5'h03:
          /* empty */;
      5'h04:
          /* empty */;
      5'h06:
          (* full_case = 32'd1 *)
          if (\$68 ) begin
          end else begin
            if (\$69 ) begin
              \$181  = tx_data;
            end
          end
      5'h07:
          if (\$72 ) begin
            \$181  = \$74 [31:0];
          end
      5'h08:
          /* empty */;
      5'h09:
          if (\$92 ) begin
            \$181  = \$10 [31:0];
          end
      5'h0a:
          /* empty */;
      5'h0b:
          /* empty */;
      5'h0c:
          /* empty */;
      5'h05:
          /* empty */;
      5'h0f:
          /* empty */;
      5'h0d:
          /* empty */;
      5'h11:
          /* empty */;
      5'h10:
          /* empty */;
      5'h12:
          /* empty */;
      5'h13:
          /* empty */;
      5'h14:
          /* empty */;
      5'h0e:
          \$181  = \$10 [31:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    \$182  = tx_packet_size;
    casez (controller_fsm_state)
      5'h00:
          /* empty */;
      5'h01:
          /* empty */;
      5'h02:
          /* empty */;
      5'h03:
          /* empty */;
      5'h04:
          /* empty */;
      5'h06:
          (* full_case = 32'd1 *)
          if (\$68 ) begin
          end else begin
            if (\$69 ) begin
              \$182  = { 3'h0, \$71  };
            end
          end
      5'h07:
          (* full_case = 32'd1 *)
          if (\$84 ) begin
          end else begin
            \$182  = { 4'h0, current_tx_word_index };
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    \$183  = tx_data;
    casez (controller_fsm_state)
      5'h00:
          /* empty */;
      5'h01:
          /* empty */;
      5'h02:
          /* empty */;
      5'h03:
          /* empty */;
      5'h04:
          /* empty */;
      5'h06:
          /* empty */;
      5'h07:
          (* full_case = 32'd1 *)
          if (\$72 ) begin
            \$183  = \$77 ;
          end else begin
            \$183  = \$82 [31:0];
          end
      5'h08:
          /* empty */;
      5'h09:
          /* empty */;
      5'h0a:
          /* empty */;
      5'h0b:
          /* empty */;
      5'h0c:
          /* empty */;
      5'h05:
          /* empty */;
      5'h0f:
          /* empty */;
      5'h0d:
          /* empty */;
      5'h11:
          /* empty */;
      5'h10:
          /* empty */;
      5'h12:
          /* empty */;
      5'h13:
          /* empty */;
      5'h14:
          /* empty */;
      5'h0e:
          \$183  = 32'd0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    \$184  = internalWritePort__data;
    casez (controller_fsm_state)
      5'h00:
          /* empty */;
      5'h01:
          /* empty */;
      5'h02:
          /* empty */;
      5'h03:
          /* empty */;
      5'h04:
          /* empty */;
      5'h06:
          /* empty */;
      5'h07:
          /* empty */;
      5'h08:
          /* empty */;
      5'h09:
          /* empty */;
      5'h0a:
          /* empty */;
      5'h0b:
          /* empty */;
      5'h0c:
          if (bram_read_data[0]) begin
            if (\$96 ) begin
              \$184  = { 29'h00000000, rx_invalid_crc_fault, rx_not_finished_fault, rx_no_response_fault };
            end
          end
      5'h05:
          /* empty */;
      5'h0f:
          /* empty */;
      5'h0d:
          /* empty */;
      5'h11:
          /* empty */;
      5'h10:
          if (\$109 ) begin
            if (\$112 ) begin
              \$184  = \$119 ;
            end
          end
      5'h12:
          /* empty */;
      5'h13:
          \$184  = \$144 [31:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    \$185  = rx_data;
    casez (controller_fsm_state)
      5'h00:
          /* empty */;
      5'h01:
          /* empty */;
      5'h02:
          /* empty */;
      5'h03:
          /* empty */;
      5'h04:
          /* empty */;
      5'h06:
          /* empty */;
      5'h07:
          /* empty */;
      5'h08:
          /* empty */;
      5'h09:
          /* empty */;
      5'h0a:
          /* empty */;
      5'h0b:
          /* empty */;
      5'h0c:
          /* empty */;
      5'h05:
          /* empty */;
      5'h0f:
          /* empty */;
      5'h0d:
          /* empty */;
      5'h11:
          /* empty */;
      5'h10:
          if (\$109 ) begin
            (* full_case = 32'd1 *)
            if (\$112 ) begin
            end else begin
              \$185  = \$130 ;
            end
          end
    endcase
  end
  assign \rx$1  = rx;
  assign \tx$3  = tx;
  assign internalReadPort__addr = internalBramAddress[11:0];
  assign internalWritePort__addr = internalBramAddress[11:0];
  assign internalBramWriteData = internalWritePort__data;
  assign internalBramWriteEnable = internalWritePort__en;
  assign internalReadPort__data = internalBramReadData;
  assign cyclic_read_data_size = internalBramReadData[2:0];
  assign cyclic_read_data_starting_byte_index = internalBramReadData[4:3];
  assign cyclic_write_data_size = internalBramReadData[7:5];
  assign cyclic_write_data_starting_byte_index = internalBramReadData[9:8];
  assign serial_port_control_data = \$10 [31:0];
  assign serial_port_tx_done = bram_read_data[0];
  assign serial_port_rx_done = bram_read_data[2];
  assign serial_port_tx_busy = bram_read_data[1];
  assign serial_port_rx_busy = bram_read_data[3];
  assign serial_port_rx_crc_valid = bram_read_data[4];
  assign externalReadPort__addr = bram_address[11:0];
  assign externalWritePort__addr = bram_address[11:0];
  always @*
    debugPins[4:1] = 4'h0;
  assign cyclic_register_starting_bit_index = { cyclic_register_starting_byte_index, 3'h0 };
  assign current_tx_bit_index = { current_tx_byte_index, 3'h0 };
  assign \$1  = { cyclic_register_size, 3'h0 };
  assign \$4  = { 1'h0, serial_port_tx_trigger };
  assign \$5  = { serial_port_rx_trigger, 1'h0 };
  assign \$7  = { 15'h0000, tx_packet_size, 16'h0000 };
  assign \$9  = { 7'h00, rx_packet_size, 24'h000000 };
  assign \$76  = { \$75 , 3'h0 };
  assign \$114  = { internalBramReadData[4:3], 3'h0 };
  assign \$117  = { \$116 , 3'h0 };
  assign \$125  = { internalBramReadData[4:3], 3'h0 };
  assign \$128  = { \$127 , 3'h0 };
  assign \$138  = { \$137 , 3'h0 };
  assign \$142  = { \$141 , 3'h0 };
endmodule

(* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:67" *)
(* generator = "Amaranth" *)
module \Controller.em_serial_controller.drive_serial_port (sync_100_rst, rx, bram_write_enable, address, bram_write_data, bram_read_data, tx, sync_100_clk);
  reg \$auto$verilog_backend.cc:2352:dump_module$3  = 0;
  wire \$1 ;
  wire \$10 ;
  reg \$100 ;
  reg [31:0] \$101 ;
  reg [2:0] \$102 ;
  reg \$103 ;
  reg \$104 ;
  reg [3:0] \$105 ;
  reg [1:0] \$106 ;
  reg [7:0] \$107 ;
  reg [10:0] \$108 ;
  reg \$109 ;
  wire \$11 ;
  reg [31:0] \$110 ;
  reg [31:0] \$111 ;
  reg [31:0] \$112 ;
  reg [7:0] \$113 ;
  wire \$12 ;
  wire \$13 ;
  wire [2:0] \$14 ;
  wire \$15 ;
  wire [7:0] \$16 ;
  wire [9:0] \$168 ;
  wire \$17 ;
  wire \$170 ;
  wire \$18 ;
  wire \$19 ;
  wire \$2 ;
  wire \$20 ;
  wire \$21 ;
  wire \$22 ;
  wire [5:0] \$23 ;
  wire [6:0] \$24 ;
  wire \$25 ;
  wire [5:0] \$26 ;
  wire [6:0] \$27 ;
  wire \$28 ;
  wire [10:0] \$29 ;
  wire \$3 ;
  wire [11:0] \$30 ;
  wire \$31 ;
  wire \$32 ;
  wire [10:0] \$33 ;
  wire \$34 ;
  wire [5:0] \$35 ;
  wire [6:0] \$36 ;
  wire \$37 ;
  wire [5:0] \$38 ;
  wire [6:0] \$39 ;
  wire \$4 ;
  wire \$40 ;
  wire [4:0] \$41 ;
  wire [10:0] \$42 ;
  wire [11:0] \$43 ;
  wire \$44 ;
  wire \$45 ;
  wire \$46 ;
  wire \$47 ;
  wire \$48 ;
  wire [8:0] \$49 ;
  wire \$5 ;
  wire [8:0] \$50 ;
  wire \$51 ;
  wire [2:0] \$52 ;
  wire [11:0] \$53 ;
  wire \$54 ;
  wire [9:0] \$55 ;
  wire [10:0] \$56 ;
  wire [11:0] \$57 ;
  wire [11:0] \$58 ;
  wire \$59 ;
  wire \$6 ;
  wire [5:0] \$60 ;
  wire [6:0] \$61 ;
  wire \$62 ;
  wire [4:0] \$63 ;
  wire [10:0] \$64 ;
  wire [11:0] \$65 ;
  wire \$66 ;
  wire \$67 ;
  wire \$68 ;
  wire \$69 ;
  wire \$7 ;
  wire \$70 ;
  wire \$71 ;
  wire [8:0] \$72 ;
  wire [2:0] \$73 ;
  wire [11:0] \$74 ;
  reg \$75 ;
  reg \$76 ;
  reg \$77 ;
  reg [7:0] \$78 ;
  reg [7:0] \$79 ;
  wire \$8 ;
  reg [9:0] \$80 ;
  reg [1:0] \$81 ;
  reg [31:0] \$82 ;
  reg [15:0] \$83 ;
  reg \$84 ;
  reg [31:0] \$85 ;
  reg \$86 ;
  reg \$87 ;
  reg \$88 ;
  reg \$89 ;
  wire \$9 ;
  reg \$90 ;
  reg \$91 ;
  reg [2:0] \$92 ;
  reg \$93 ;
  reg \$94 ;
  reg \$95 ;
  reg [3:0] \$96 ;
  reg [1:0] \$97 ;
  reg [7:0] \$98 ;
  reg [10:0] \$99 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:34" *)
  input [15:0] address;
  wire [15:0] address;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:76" *)
  reg [9:0] bitLength = 10'h008;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:34" *)
  wire [15:0] bram_address;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:136" *)
  reg bram_control_mode = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:36" *)
  output [31:0] bram_read_data;
  reg [31:0] bram_read_data;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:35" *)
  input [31:0] bram_write_data;
  wire [31:0] bram_write_data;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:37" *)
  input bram_write_enable;
  wire bram_write_enable;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:316" *)
  wire [31:0] crc;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:316" *)
  wire [31:0] \crc$58 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:314" *)
  reg [31:0] data = 32'd0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:314" *)
  reg [31:0] \data$59  = 32'd0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\memory.py:240" *)
  wire [6:0] externalReadPort__addr;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\memory.py:241" *)
  wire [31:0] externalReadPort__data;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\memory.py:401" *)
  wire [6:0] externalWritePort__addr;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\memory.py:402" *)
  reg [31:0] externalWritePort__data;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\memory.py:400" *)
  reg externalWritePort__en;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\memory.py:240" *)
  wire [6:0] internalReadPort__addr;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\memory.py:241" *)
  wire [31:0] internalReadPort__data;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:105" *)
  reg [15:0] internalReadWriteAddress = 16'h0000;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\memory.py:401" *)
  wire [6:0] internalWritePort__addr;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\memory.py:402" *)
  reg [31:0] internalWritePort__data = 32'd0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\memory.py:400" *)
  reg internalWritePort__en = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:97" *)
  wire [31:0] readData;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:39" *)
  input rx;
  wire rx;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:28" *)
  reg rxBusy = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:31" *)
  reg rxCRCvalid = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:129" *)
  reg [3:0] rxCurrentBit = 4'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:130" *)
  reg [1:0] rxCurrentByte = 2'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:131" *)
  reg [7:0] rxCurrentWord = 8'h00;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:111" *)
  reg [31:0] rxData = 32'd0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:30" *)
  reg rxDone = 1'h1;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:112" *)
  reg [31:0] rxNewData = 32'd0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:113" *)
  reg [7:0] rxNewDataIndex = 8'h00;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:73" *)
  reg [7:0] rxPacketSize = 8'h01;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:127" *)
  reg [10:0] rxTimer = 11'h000;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:116" *)
  reg rxWriteDataRequest = 1'h0;
  (* src = "C:\\Program Files\\WindowsApps\\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\\lib\\contextlib.py:142" *)
  reg [2:0] rx_fsm_state = 3'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:71" *)
  reg rx_start = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:83" *)
  wire rx_synced;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:313" *)
  reg start = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:313" *)
  reg \start$44  = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:273" *)
  input sync_100_clk;
  wire sync_100_clk;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:273" *)
  input sync_100_rst;
  wire sync_100_rst;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:40" *)
  output tx;
  reg tx = 1'h1;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:27" *)
  reg txBusy = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:123" *)
  reg [3:0] txCurrentBit = 4'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:124" *)
  reg [1:0] txCurrentByte = 2'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:125" *)
  reg [7:0] txCurrentWord = 8'h00;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:29" *)
  reg txDone = 1'h1;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:72" *)
  reg [7:0] txPacketSize = 8'h01;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:114" *)
  reg [31:0] txReadData = 32'd0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:118" *)
  reg txReadDataRequest = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:119" *)
  reg [1:0] txReadDataRequestWait = 2'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:121" *)
  reg [10:0] txTimer = 11'h000;
  (* src = "C:\\Program Files\\WindowsApps\\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\\lib\\contextlib.py:142" *)
  reg [2:0] tx_fsm_state = 3'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:70" *)
  reg tx_start = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:117" *)
  reg updateStatusDataRequest = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:315" *)
  reg valid = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:315" *)
  reg \valid$43  = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:95" *)
  wire [31:0] writeData;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:96" *)
  wire writeEnable;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:87" *)
  reg [31:0] memory [127:0];
  initial begin
    memory[0] = 32'd0;
    memory[1] = 32'd0;
    memory[2] = 32'd0;
    memory[3] = 32'd0;
    memory[4] = 32'd0;
    memory[5] = 32'd0;
    memory[6] = 32'd0;
    memory[7] = 32'd0;
    memory[8] = 32'd0;
    memory[9] = 32'd0;
    memory[10] = 32'd0;
    memory[11] = 32'd0;
    memory[12] = 32'd0;
    memory[13] = 32'd0;
    memory[14] = 32'd0;
    memory[15] = 32'd0;
    memory[16] = 32'd0;
    memory[17] = 32'd0;
    memory[18] = 32'd0;
    memory[19] = 32'd0;
    memory[20] = 32'd0;
    memory[21] = 32'd0;
    memory[22] = 32'd0;
    memory[23] = 32'd0;
    memory[24] = 32'd0;
    memory[25] = 32'd0;
    memory[26] = 32'd0;
    memory[27] = 32'd0;
    memory[28] = 32'd0;
    memory[29] = 32'd0;
    memory[30] = 32'd0;
    memory[31] = 32'd0;
    memory[32] = 32'd0;
    memory[33] = 32'd0;
    memory[34] = 32'd0;
    memory[35] = 32'd0;
    memory[36] = 32'd0;
    memory[37] = 32'd0;
    memory[38] = 32'd0;
    memory[39] = 32'd0;
    memory[40] = 32'd0;
    memory[41] = 32'd0;
    memory[42] = 32'd0;
    memory[43] = 32'd0;
    memory[44] = 32'd0;
    memory[45] = 32'd0;
    memory[46] = 32'd0;
    memory[47] = 32'd0;
    memory[48] = 32'd0;
    memory[49] = 32'd0;
    memory[50] = 32'd0;
    memory[51] = 32'd0;
    memory[52] = 32'd0;
    memory[53] = 32'd0;
    memory[54] = 32'd0;
    memory[55] = 32'd0;
    memory[56] = 32'd0;
    memory[57] = 32'd0;
    memory[58] = 32'd0;
    memory[59] = 32'd0;
    memory[60] = 32'd0;
    memory[61] = 32'd0;
    memory[62] = 32'd0;
    memory[63] = 32'd0;
    memory[64] = 32'd0;
    memory[65] = 32'd0;
    memory[66] = 32'd0;
    memory[67] = 32'd0;
    memory[68] = 32'd0;
    memory[69] = 32'd0;
    memory[70] = 32'd0;
    memory[71] = 32'd0;
    memory[72] = 32'd0;
    memory[73] = 32'd0;
    memory[74] = 32'd0;
    memory[75] = 32'd0;
    memory[76] = 32'd0;
    memory[77] = 32'd0;
    memory[78] = 32'd0;
    memory[79] = 32'd0;
    memory[80] = 32'd0;
    memory[81] = 32'd0;
    memory[82] = 32'd0;
    memory[83] = 32'd0;
    memory[84] = 32'd0;
    memory[85] = 32'd0;
    memory[86] = 32'd0;
    memory[87] = 32'd0;
    memory[88] = 32'd0;
    memory[89] = 32'd0;
    memory[90] = 32'd0;
    memory[91] = 32'd0;
    memory[92] = 32'd0;
    memory[93] = 32'd0;
    memory[94] = 32'd0;
    memory[95] = 32'd0;
    memory[96] = 32'd0;
    memory[97] = 32'd0;
    memory[98] = 32'd0;
    memory[99] = 32'd0;
    memory[100] = 32'd0;
    memory[101] = 32'd0;
    memory[102] = 32'd0;
    memory[103] = 32'd0;
    memory[104] = 32'd0;
    memory[105] = 32'd0;
    memory[106] = 32'd0;
    memory[107] = 32'd0;
    memory[108] = 32'd0;
    memory[109] = 32'd0;
    memory[110] = 32'd0;
    memory[111] = 32'd0;
    memory[112] = 32'd0;
    memory[113] = 32'd0;
    memory[114] = 32'd0;
    memory[115] = 32'd0;
    memory[116] = 32'd0;
    memory[117] = 32'd0;
    memory[118] = 32'd0;
    memory[119] = 32'd0;
    memory[120] = 32'd0;
    memory[121] = 32'd0;
    memory[122] = 32'd0;
    memory[123] = 32'd0;
    memory[124] = 32'd0;
    memory[125] = 32'd0;
    memory[126] = 32'd0;
    memory[127] = 32'd0;
  end
  always @(posedge sync_100_clk) begin
    if (externalWritePort__en)
      memory[address[6:0]] <= externalWritePort__data;
  end
  always @(posedge sync_100_clk) begin
    if (internalWritePort__en)
      memory[internalReadWriteAddress[6:0]] <= internalWritePort__data;
  end
  reg [31:0] _0_;
  reg [31:0] _1_;
  always @(posedge sync_100_clk) begin
    _0_ <= memory[internalReadWriteAddress[6:0]];
    _1_ <= memory[address[6:0]];
  end
  assign internalReadPort__data = _0_;
  assign readData = _1_;
  assign \$2  = ~ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:161" *) address[15];
  assign \$3  = ! (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\hdl\\_dsl.py:490" *) tx_fsm_state;
  assign \$4  = tx_fsm_state == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\hdl\\_dsl.py:490" *) 1'h1;
  assign \$5  = tx_fsm_state == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\hdl\\_dsl.py:490" *) 2'h2;
  assign \$6  = tx_fsm_state == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\hdl\\_dsl.py:490" *) 2'h3;
  assign \$7  = tx_fsm_state == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\hdl\\_dsl.py:490" *) 3'h4;
  assign \$8  = ! (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\hdl\\_dsl.py:490" *) rx_fsm_state;
  assign \$9  = rx_fsm_state == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\hdl\\_dsl.py:490" *) 1'h1;
  assign \$10  = rx_fsm_state == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\hdl\\_dsl.py:490" *) 2'h2;
  assign \$11  = rx_fsm_state == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\hdl\\_dsl.py:490" *) 2'h3;
  assign \$12  = rx_fsm_state == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\hdl\\_dsl.py:490" *) 3'h4;
  assign \$13  = | (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:168" *) txReadDataRequestWait;
  assign \$14  = txReadDataRequestWait - (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:169" *) 1'h1;
  assign \$15  = txReadDataRequestWait == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:170" *) 1'h1;
  assign \$21  = ! (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:223" *) txTimer;
  assign \$22  = txCurrentWord == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:224" *) txPacketSize;
  assign \$23  = txCurrentByte * (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:225" *) 4'h8;
  assign \$24  = txCurrentBit + (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:225" *) \$23 ;
  assign \$25  = crc >> \$24 ;
  assign \$26  = txCurrentByte * (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:227" *) 4'h8;
  assign \$27  = txCurrentBit + (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:227" *) \$26 ;
  assign \$28  = txReadData >> \$27 ;
  assign \$29  = bitLength - (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:229" *) 1'h1;
  assign \$30  = txTimer - (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:233" *) 1'h1;
  assign \$31  = ! (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:236" *) txTimer;
  assign \$32  = txCurrentBit == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:238" *) 4'h8;
  assign \$33  = bitLength - (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:240" *) 1'h1;
  assign \$34  = txCurrentWord == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:244" *) txPacketSize;
  assign \$35  = txCurrentByte * (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:245" *) 4'h8;
  assign \$36  = txCurrentBit + (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:245" *) \$35 ;
  assign \$37  = crc >> \$36 ;
  assign \$38  = txCurrentByte * (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:247" *) 4'h8;
  assign \$39  = txCurrentBit + (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:247" *) \$38 ;
  assign \$40  = txReadData >> \$39 ;
  assign \$41  = txCurrentBit + (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:249" *) 1'h1;
  assign \$42  = bitLength - (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:250" *) 1'h1;
  assign \$43  = txTimer - (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:253" *) 1'h1;
  assign \$44  = ! (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:256" *) txTimer;
  assign \$45  = txCurrentByte == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:257" *) 2'h3;
  assign \$46  = txCurrentWord == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:257" *) txPacketSize;
  assign \$47  = \$45  & (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:257" *) \$46 ;
  assign \$48  = txCurrentByte == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:273" *) 2'h3;
  assign \$49  = txCurrentWord + (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:275" *) 1'h1;
  assign \$50  = txPacketSize - (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:278" *) 1'h1;
  assign \$51  = txCurrentWord != (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:278" *) \$50 ;
  assign \$52  = txCurrentByte + (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:282" *) 1'h1;
  assign \$53  = txTimer - (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:289" *) 1'h1;
  assign \$54  = ! (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:311" *) rx_synced;
  assign \$168  = bitLength / (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:313" *) 2'h2;
  assign \$56  = bitLength + (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:313" *) \$55 ;
  assign \$57  = \$56  - (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:313" *) 1'h1;
  assign \$58  = rxTimer - (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:319" *) 1'h1;
  assign \$59  = ! (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:322" *) rxTimer;
  assign \$60  = rxCurrentByte * (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:323" *) 4'h8;
  assign \$61  = rxCurrentBit + (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:323" *) \$60 ;
  assign \$62  = rxCurrentBit == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:325" *) 3'h7;
  assign \$63  = rxCurrentBit + (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:330" *) 1'h1;
  assign \$64  = bitLength - (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:331" *) 1'h1;
  assign \$65  = rxTimer - (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:335" *) 1'h1;
  assign \$66  = ! (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:338" *) rxTimer;
  assign \$67  = rxCurrentByte == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:340" *) 2'h3;
  assign \$68  = rxCurrentWord == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:340" *) rxPacketSize;
  assign \$69  = \$67  & (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:340" *) \$68 ;
  assign \$70  = \crc$58  == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:348" *) rxData;
  assign \$71  = rxCurrentByte == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:361" *) 2'h3;
  assign \$72  = rxCurrentWord + (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:363" *) 1'h1;
  assign \$73  = rxCurrentByte + (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:371" *) 1'h1;
  assign \$74  = rxTimer - (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:376" *) 1'h1;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:136" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) bram_control_mode <= 1'h0;
    else bram_control_mode <= \$75 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:70" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) tx_start <= 1'h0;
    else tx_start <= \$76 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:71" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) rx_start <= 1'h0;
    else rx_start <= \$77 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:72" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) txPacketSize <= 8'h01;
    else txPacketSize <= \$78 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:73" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) rxPacketSize <= 8'h01;
    else rxPacketSize <= \$79 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:76" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) bitLength <= 10'h008;
    else bitLength <= \$80 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:119" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) txReadDataRequestWait <= 2'h0;
    else txReadDataRequestWait <= \$81 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:114" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) txReadData <= 32'd0;
    else txReadData <= \$82 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:105" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) internalReadWriteAddress <= 16'h0000;
    else internalReadWriteAddress <= \$83 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:118" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) txReadDataRequest <= 1'h0;
    else txReadDataRequest <= \$84 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\memory.py:402" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) internalWritePort__data <= 32'd0;
    else internalWritePort__data <= \$85 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\memory.py:400" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) internalWritePort__en <= 1'h0;
    else internalWritePort__en <= \$86 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:116" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) rxWriteDataRequest <= 1'h0;
    else rxWriteDataRequest <= \$87 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:315" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) valid <= 1'h0;
    else valid <= \$88 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:313" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) start <= 1'h0;
    else start <= \$89 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:315" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) \valid$43  <= 1'h0;
    else \valid$43  <= \$90 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:313" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) \start$44  <= 1'h0;
    else \start$44  <= \$91 ;
  (* src = "C:\\Program Files\\WindowsApps\\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\\lib\\contextlib.py:142" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) tx_fsm_state <= 3'h0;
    else tx_fsm_state <= \$92 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:29" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) txDone <= 1'h1;
    else txDone <= \$93 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:27" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) txBusy <= 1'h0;
    else txBusy <= \$94 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:40" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) tx <= 1'h1;
    else tx <= \$95 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:123" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) txCurrentBit <= 4'h0;
    else txCurrentBit <= \$96 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:124" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) txCurrentByte <= 2'h0;
    else txCurrentByte <= \$97 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:125" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) txCurrentWord <= 8'h00;
    else txCurrentWord <= \$98 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:121" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) txTimer <= 11'h000;
    else txTimer <= \$99 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:117" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) updateStatusDataRequest <= 1'h0;
    else updateStatusDataRequest <= \$100 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:314" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) data <= 32'd0;
    else data <= \$101 ;
  (* src = "C:\\Program Files\\WindowsApps\\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\\lib\\contextlib.py:142" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) rx_fsm_state <= 3'h0;
    else rx_fsm_state <= \$102 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:30" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) rxDone <= 1'h1;
    else rxDone <= \$103 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:31" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) rxCRCvalid <= 1'h0;
    else rxCRCvalid <= \$104 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:129" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) rxCurrentBit <= 4'h0;
    else rxCurrentBit <= \$105 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:130" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) rxCurrentByte <= 2'h0;
    else rxCurrentByte <= \$106 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:131" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) rxCurrentWord <= 8'h00;
    else rxCurrentWord <= \$107 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:127" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) rxTimer <= 11'h000;
    else rxTimer <= \$108 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:28" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) rxBusy <= 1'h0;
    else rxBusy <= \$109 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:111" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) rxData <= 32'd0;
    else rxData <= \$110 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:112" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) rxNewData <= 32'd0;
    else rxNewData <= \$111 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:314" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) \data$59  <= 32'd0;
    else \data$59  <= \$112 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:113" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) rxNewDataIndex <= 8'h00;
    else rxNewDataIndex <= \$113 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:84" *)
  \Controller.em_serial_controller.drive_serial_port.U$3  \U$3  (
    .rx(rx),
    .stage1(rx_synced),
    .sync_100_clk(sync_100_clk),
    .sync_100_rst(sync_100_rst)
  );
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:81" *)
  \Controller.em_serial_controller.drive_serial_port.crc32_rx  crc32_rx (
    .crc(\crc$58 ),
    .data_in(\data$59 ),
    .start(\start$44 ),
    .sync_100_clk(sync_100_clk),
    .sync_100_rst(sync_100_rst),
    .valid(\valid$43 )
  );
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:80" *)
  \Controller.em_serial_controller.drive_serial_port.crc32_tx  crc32_tx (
    .crc(crc),
    .data_in(data),
    .start(start),
    .sync_100_clk(sync_100_clk),
    .sync_100_rst(sync_100_rst),
    .valid(valid)
  );
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    bram_read_data = 32'd0;
    casez (address)
      16'h8002:
          if (\$1 ) begin
            bram_read_data = { 27'h0000000, rxCRCvalid, rxBusy, rxDone, txBusy, txDone };
          end
    endcase
    if (\$2 ) begin
      bram_read_data = readData;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    externalWritePort__data = 32'd0;
    if (\$2 ) begin
      externalWritePort__data = bram_write_data;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    externalWritePort__en = 1'h0;
    if (\$2 ) begin
      externalWritePort__en = bram_write_enable;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    (* full_case = 32'd1 *)
    if (address[15]) begin
      \$75  = 1'h1;
    end else begin
      \$75  = 1'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    \$76  = tx_start;
    if (bram_write_enable) begin
      casez (address)
        16'h8000:
            \$76  = bram_write_data[0];
      endcase
    end
    casez (tx_fsm_state)
      3'h0:
          if (tx_start) begin
            \$76  = 1'h0;
          end
      3'h1:
          /* empty */;
      3'h2:
          /* empty */;
      3'h3:
          /* empty */;
      3'h4:
          if (\$44 ) begin
            if (\$47 ) begin
              \$76  = 1'h0;
            end
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    \$77  = rx_start;
    if (bram_write_enable) begin
      casez (address)
        16'h8000:
            \$77  = bram_write_data[1];
      endcase
    end
    casez (rx_fsm_state)
      3'h0:
          if (rx_start) begin
            \$77  = 1'h0;
          end
      3'h1:
          /* empty */;
      3'h2:
          /* empty */;
      3'h3:
          /* empty */;
      3'h4:
          if (\$66 ) begin
            if (\$69 ) begin
              \$77  = 1'h0;
            end
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    \$78  = txPacketSize;
    if (bram_write_enable) begin
      casez (address)
        16'h8000:
            \$78  = bram_write_data[23:16];
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    \$79  = rxPacketSize;
    if (bram_write_enable) begin
      casez (address)
        16'h8000:
            \$79  = bram_write_data[31:24];
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    \$80  = bitLength;
    if (bram_write_enable) begin
      casez (address)
        16'h8000:
            /* empty */;
        16'h8001:
            \$80  = bram_write_data[9:0];
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    \$81  = txReadDataRequestWait;
    if (\$13 ) begin
      \$81  = \$14 [1:0];
    end
    if (txReadDataRequest) begin
      \$81  = 2'h2;
    end
    casez (tx_fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          \$81  = 2'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    \$82  = txReadData;
    if (\$13 ) begin
      if (\$15 ) begin
        \$82  = internalReadPort__data;
      end
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    \$83  = internalReadWriteAddress;
    if (txReadDataRequest) begin
      \$83  = { 8'h00, \$16  };
    end else if (rxWriteDataRequest) begin
      \$83  = { 8'h00, rxNewDataIndex };
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    \$84  = txReadDataRequest;
    if (txReadDataRequest) begin
      \$84  = 1'h0;
    end
    casez (tx_fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          \$84  = 1'h1;
      3'h2:
          /* empty */;
      3'h3:
          /* empty */;
      3'h4:
          if (\$44 ) begin
            (* full_case = 32'd1 *)
            if (\$47 ) begin
            end else begin
              if (\$48 ) begin
                if (\$51 ) begin
                  \$84  = 1'h1;
                end
              end
            end
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    \$85  = internalWritePort__data;
    if (txReadDataRequest) begin
    end else if (rxWriteDataRequest) begin
      \$85  = rxNewData;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    \$86  = internalWritePort__en;
    if (txReadDataRequest) begin
    end else if (rxWriteDataRequest) begin
      \$86  = 1'h1;
    end
    if (internalWritePort__en) begin
      \$86  = 1'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    \$87  = rxWriteDataRequest;
    if (txReadDataRequest) begin
    end else if (rxWriteDataRequest) begin
      \$87  = 1'h0;
    end
    casez (rx_fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          /* empty */;
      3'h2:
          /* empty */;
      3'h3:
          /* empty */;
      3'h4:
          if (\$66 ) begin
            (* full_case = 32'd1 *)
            if (\$69 ) begin
            end else begin
              if (\$71 ) begin
                \$87  = 1'h1;
              end
            end
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    \$88  = valid;
    if (\$17 ) begin
      \$88  = 1'h0;
    end
    casez (tx_fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          /* empty */;
      3'h2:
          /* empty */;
      3'h3:
          /* empty */;
      3'h4:
          if (\$44 ) begin
            (* full_case = 32'd1 *)
            if (\$47 ) begin
            end else begin
              if (\$48 ) begin
                \$88  = 1'h1;
              end
            end
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    \$89  = start;
    if (\$18 ) begin
      \$89  = 1'h0;
    end
    casez (tx_fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          \$89  = 1'h1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    \$90  = \valid$43 ;
    if (\$19 ) begin
      \$90  = 1'h0;
    end
    casez (rx_fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          /* empty */;
      3'h2:
          /* empty */;
      3'h3:
          /* empty */;
      3'h4:
          if (\$66 ) begin
            (* full_case = 32'd1 *)
            if (\$69 ) begin
            end else begin
              if (\$71 ) begin
                \$90  = 1'h1;
              end
            end
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    \$91  = \start$44 ;
    if (\$20 ) begin
      \$91  = 1'h0;
    end
    casez (rx_fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          \$91  = 1'h1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    \$92  = tx_fsm_state;
    casez (tx_fsm_state)
      3'h0:
          if (tx_start) begin
            \$92  = 3'h1;
          end
      3'h1:
          \$92  = 3'h2;
      3'h2:
          if (\$21 ) begin
            \$92  = 3'h3;
          end
      3'h3:
          if (\$31 ) begin
            if (\$32 ) begin
              \$92  = 3'h4;
            end
          end
      3'h4:
          if (\$44 ) begin
            (* full_case = 32'd1 *)
            if (\$47 ) begin
              \$92  = 3'h0;
            end else begin
              \$92  = 3'h2;
            end
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    \$93  = txDone;
    casez (tx_fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          \$93  = 1'h0;
      3'h2:
          /* empty */;
      3'h3:
          /* empty */;
      3'h4:
          if (\$44 ) begin
            if (\$47 ) begin
              \$93  = 1'h1;
            end
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    \$94  = txBusy;
    casez (tx_fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          \$94  = 1'h1;
      3'h2:
          /* empty */;
      3'h3:
          /* empty */;
      3'h4:
          if (\$44 ) begin
            if (\$47 ) begin
              \$94  = 1'h0;
            end
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    \$95  = tx;
    casez (tx_fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          \$95  = 1'h0;
      3'h2:
          if (\$21 ) begin
            (* full_case = 32'd1 *)
            if (\$22 ) begin
              \$95  = \$25 ;
            end else begin
              \$95  = \$28 ;
            end
          end
      3'h3:
          if (\$31 ) begin
            (* full_case = 32'd1 *)
            if (\$32 ) begin
              \$95  = 1'h1;
            end else begin
              (* full_case = 32'd1 *)
              if (\$34 ) begin
                \$95  = \$37 ;
              end else begin
                \$95  = \$40 ;
              end
            end
          end
      3'h4:
          if (\$44 ) begin
            (* full_case = 32'd1 *)
            if (\$47 ) begin
              \$95  = 1'h1;
            end else begin
              \$95  = 1'h0;
            end
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    \$96  = txCurrentBit;
    casez (tx_fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          \$96  = 4'h0;
      3'h2:
          if (\$21 ) begin
            \$96  = 4'h1;
          end
      3'h3:
          if (\$31 ) begin
            (* full_case = 32'd1 *)
            if (\$32 ) begin
            end else begin
              \$96  = \$41 [3:0];
            end
          end
      3'h4:
          if (\$44 ) begin
            (* full_case = 32'd1 *)
            if (\$47 ) begin
              \$96  = 4'h0;
            end else begin
              \$96  = 4'h0;
            end
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    \$97  = txCurrentByte;
    casez (tx_fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          \$97  = 2'h0;
      3'h2:
          /* empty */;
      3'h3:
          /* empty */;
      3'h4:
          if (\$44 ) begin
            (* full_case = 32'd1 *)
            if (\$47 ) begin
            end else begin
              (* full_case = 32'd1 *)
              if (\$48 ) begin
                \$97  = 2'h0;
              end else begin
                \$97  = \$52 [1:0];
              end
            end
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    \$98  = txCurrentWord;
    casez (tx_fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          \$98  = 8'h00;
      3'h2:
          /* empty */;
      3'h3:
          /* empty */;
      3'h4:
          if (\$44 ) begin
            (* full_case = 32'd1 *)
            if (\$47 ) begin
            end else begin
              if (\$48 ) begin
                \$98  = \$49 [7:0];
              end
            end
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    \$99  = txTimer;
    casez (tx_fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          \$99  = { 1'h0, bitLength };
      3'h2:
          (* full_case = 32'd1 *)
          if (\$21 ) begin
            \$99  = \$29 ;
          end else begin
            \$99  = \$30 [10:0];
          end
      3'h3:
          (* full_case = 32'd1 *)
          if (\$31 ) begin
            (* full_case = 32'd1 *)
            if (\$32 ) begin
              \$99  = \$33 ;
            end else begin
              \$99  = \$42 ;
            end
          end else begin
            \$99  = \$43 [10:0];
          end
      3'h4:
          (* full_case = 32'd1 *)
          if (\$44 ) begin
            (* full_case = 32'd1 *)
            if (\$47 ) begin
            end else begin
              \$99  = { 1'h0, bitLength };
            end
          end else begin
            \$99  = \$53 [10:0];
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    \$100  = updateStatusDataRequest;
    casez (tx_fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          \$100  = 1'h1;
      3'h2:
          /* empty */;
      3'h3:
          /* empty */;
      3'h4:
          if (\$44 ) begin
            if (\$47 ) begin
              \$100  = 1'h1;
            end
          end
    endcase
    casez (rx_fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          \$100  = 1'h1;
      3'h2:
          if (\$54 ) begin
            \$100  = 1'h1;
          end
      3'h3:
          /* empty */;
      3'h4:
          if (\$66 ) begin
            if (\$69 ) begin
              \$100  = 1'h1;
            end
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    \$101  = data;
    casez (tx_fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          /* empty */;
      3'h2:
          /* empty */;
      3'h3:
          /* empty */;
      3'h4:
          if (\$44 ) begin
            (* full_case = 32'd1 *)
            if (\$47 ) begin
            end else begin
              if (\$48 ) begin
                \$101  = txReadData;
              end
            end
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    \$102  = rx_fsm_state;
    casez (rx_fsm_state)
      3'h0:
          if (rx_start) begin
            \$102  = 3'h1;
          end
      3'h1:
          \$102  = 3'h2;
      3'h2:
          if (\$54 ) begin
            \$102  = 3'h3;
          end
      3'h3:
          if (\$59 ) begin
            if (\$62 ) begin
              \$102  = 3'h4;
            end
          end
      3'h4:
          if (\$66 ) begin
            (* full_case = 32'd1 *)
            if (\$69 ) begin
              \$102  = 3'h0;
            end else begin
              \$102  = 3'h2;
            end
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    \$103  = rxDone;
    casez (rx_fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          \$103  = 1'h0;
      3'h2:
          /* empty */;
      3'h3:
          /* empty */;
      3'h4:
          if (\$66 ) begin
            if (\$69 ) begin
              \$103  = 1'h1;
            end
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    \$104  = rxCRCvalid;
    casez (rx_fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          \$104  = 1'h0;
      3'h2:
          /* empty */;
      3'h3:
          /* empty */;
      3'h4:
          if (\$66 ) begin
            if (\$69 ) begin
              (* full_case = 32'd1 *)
              if (\$70 ) begin
                \$104  = 1'h1;
              end else begin
                \$104  = 1'h0;
              end
            end
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    \$105  = rxCurrentBit;
    casez (rx_fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          \$105  = 4'h0;
      3'h2:
          if (\$54 ) begin
            \$105  = 4'h0;
          end
      3'h3:
          if (\$59 ) begin
            (* full_case = 32'd1 *)
            if (\$62 ) begin
            end else begin
              \$105  = \$63 [3:0];
            end
          end
      3'h4:
          if (\$66 ) begin
            (* full_case = 32'd1 *)
            if (\$69 ) begin
              \$105  = 4'h0;
            end else begin
              \$105  = 4'h0;
            end
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    \$106  = rxCurrentByte;
    casez (rx_fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          \$106  = 2'h0;
      3'h2:
          /* empty */;
      3'h3:
          /* empty */;
      3'h4:
          if (\$66 ) begin
            (* full_case = 32'd1 *)
            if (\$69 ) begin
              \$106  = 2'h0;
            end else begin
              (* full_case = 32'd1 *)
              if (\$71 ) begin
                \$106  = 2'h0;
              end else begin
                \$106  = \$73 [1:0];
              end
            end
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    \$107  = rxCurrentWord;
    casez (rx_fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          \$107  = 8'h00;
      3'h2:
          /* empty */;
      3'h3:
          /* empty */;
      3'h4:
          if (\$66 ) begin
            (* full_case = 32'd1 *)
            if (\$69 ) begin
              \$107  = 8'h00;
            end else begin
              if (\$71 ) begin
                \$107  = \$72 [7:0];
              end
            end
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    \$108  = rxTimer;
    casez (rx_fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          /* empty */;
      3'h2:
          (* full_case = 32'd1 *)
          if (\$54 ) begin
            \$108  = \$57 [10:0];
          end else begin
            \$108  = \$58 [10:0];
          end
      3'h3:
          (* full_case = 32'd1 *)
          if (\$59 ) begin
            (* full_case = 32'd1 *)
            if (\$62 ) begin
              \$108  = { 1'h0, bitLength };
            end else begin
              \$108  = \$64 ;
            end
          end else begin
            \$108  = \$65 [10:0];
          end
      3'h4:
          (* full_case = 32'd1 *)
          if (\$66 ) begin
          end else begin
            \$108  = \$74 [10:0];
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    \$109  = rxBusy;
    casez (rx_fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          /* empty */;
      3'h2:
          if (\$54 ) begin
            \$109  = 1'h1;
          end
      3'h3:
          /* empty */;
      3'h4:
          if (\$66 ) begin
            (* full_case = 32'd1 *)
            if (\$69 ) begin
              \$109  = 1'h0;
            end else begin
              \$109  = 1'h1;
            end
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    \$110  = rxData;
    casez (rx_fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          /* empty */;
      3'h2:
          /* empty */;
      3'h3:
          if (\$59 ) begin
            casez (\$61 )
              7'h00:
                  \$110 [0] = rx_synced;
              7'h01:
                  \$110 [1] = rx_synced;
              7'h02:
                  \$110 [2] = rx_synced;
              7'h03:
                  \$110 [3] = rx_synced;
              7'h04:
                  \$110 [4] = rx_synced;
              7'h05:
                  \$110 [5] = rx_synced;
              7'h06:
                  \$110 [6] = rx_synced;
              7'h07:
                  \$110 [7] = rx_synced;
              7'h08:
                  \$110 [8] = rx_synced;
              7'h09:
                  \$110 [9] = rx_synced;
              7'h0a:
                  \$110 [10] = rx_synced;
              7'h0b:
                  \$110 [11] = rx_synced;
              7'h0c:
                  \$110 [12] = rx_synced;
              7'h0d:
                  \$110 [13] = rx_synced;
              7'h0e:
                  \$110 [14] = rx_synced;
              7'h0f:
                  \$110 [15] = rx_synced;
              7'h10:
                  \$110 [16] = rx_synced;
              7'h11:
                  \$110 [17] = rx_synced;
              7'h12:
                  \$110 [18] = rx_synced;
              7'h13:
                  \$110 [19] = rx_synced;
              7'h14:
                  \$110 [20] = rx_synced;
              7'h15:
                  \$110 [21] = rx_synced;
              7'h16:
                  \$110 [22] = rx_synced;
              7'h17:
                  \$110 [23] = rx_synced;
              7'h18:
                  \$110 [24] = rx_synced;
              7'h19:
                  \$110 [25] = rx_synced;
              7'h1a:
                  \$110 [26] = rx_synced;
              7'h1b:
                  \$110 [27] = rx_synced;
              7'h1c:
                  \$110 [28] = rx_synced;
              7'h1d:
                  \$110 [29] = rx_synced;
              7'h1e:
                  \$110 [30] = rx_synced;
              7'h1f:
                  \$110 [31] = rx_synced;
            endcase
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    \$111  = rxNewData;
    casez (rx_fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          /* empty */;
      3'h2:
          /* empty */;
      3'h3:
          /* empty */;
      3'h4:
          if (\$66 ) begin
            (* full_case = 32'd1 *)
            if (\$69 ) begin
            end else begin
              if (\$71 ) begin
                \$111  = rxData;
              end
            end
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    \$112  = \data$59 ;
    casez (rx_fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          /* empty */;
      3'h2:
          /* empty */;
      3'h3:
          /* empty */;
      3'h4:
          if (\$66 ) begin
            (* full_case = 32'd1 *)
            if (\$69 ) begin
            end else begin
              if (\$71 ) begin
                \$112  = rxData;
              end
            end
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    \$113  = rxNewDataIndex;
    casez (rx_fsm_state)
      3'h0:
          /* empty */;
      3'h1:
          /* empty */;
      3'h2:
          /* empty */;
      3'h3:
          /* empty */;
      3'h4:
          if (\$66 ) begin
            (* full_case = 32'd1 *)
            if (\$69 ) begin
            end else begin
              if (\$71 ) begin
                \$113  = rxCurrentWord;
              end
            end
          end
    endcase
  end
  assign externalReadPort__addr = address[6:0];
  assign externalWritePort__addr = address[6:0];
  assign writeData = externalWritePort__data;
  assign writeEnable = externalWritePort__en;
  assign externalReadPort__data = readData;
  assign internalReadPort__addr = internalReadWriteAddress[6:0];
  assign internalWritePort__addr = internalReadWriteAddress[6:0];
  assign bram_address = address;
  assign \$1  = bram_control_mode;
  assign { \$16 [7], \$16 [5:0] } = { txCurrentWord[7], txCurrentWord[5:0] };
  assign \$16 [6] = 1'h1;
  assign \$17  = valid;
  assign \$18  = start;
  assign \$19  = \valid$43 ;
  assign \$20  = \start$44 ;
  assign \$170  = 1'h1;
  assign \$55  = \$168 ;
endmodule

(* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\cdc.py:101" *)
(* generator = "Amaranth" *)
module \Controller.em_serial_controller.drive_serial_port.U$3 (sync_100_rst, rx, stage1, sync_100_clk);
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:39" *)
  input rx;
  wire rx;
  (* init = 1'h0 *)
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:83" *)
  wire rx_synced;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\cdc.py:102" *)
  reg stage0 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\em_serial_port.py:83" *)
  output stage1;
  reg stage1 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:273" *)
  input sync_100_clk;
  wire sync_100_clk;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:273" *)
  input sync_100_rst;
  wire sync_100_rst;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\cdc.py:102" *)
  always @(posedge sync_100_clk)
    stage0 <= rx;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\cdc.py:102" *)
  always @(posedge sync_100_clk)
    stage1 <= stage0;
  assign rx_synced = stage1;
endmodule

(* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:320" *)
(* generator = "Amaranth" *)
module \Controller.em_serial_controller.drive_serial_port.crc32_rx (sync_100_rst, crc, valid, start, data_in, sync_100_clk);
  reg \$auto$verilog_backend.cc:2352:dump_module$4  = 0;
  wire [31:0] \$1 ;
  wire \$10 ;
  wire \$100 ;
  wire [31:0] \$1000 ;
  wire \$1001 ;
  wire [31:0] \$1002 ;
  wire \$1003 ;
  wire [31:0] \$1004 ;
  wire \$1005 ;
  wire [31:0] \$1006 ;
  wire \$1007 ;
  wire [31:0] \$1008 ;
  wire \$1009 ;
  wire [31:0] \$101 ;
  wire [31:0] \$1010 ;
  wire \$1011 ;
  wire [31:0] \$1012 ;
  wire \$1013 ;
  wire [31:0] \$1014 ;
  wire \$1015 ;
  wire \$1016 ;
  wire \$1017 ;
  wire \$1018 ;
  wire \$1019 ;
  wire \$102 ;
  wire \$1020 ;
  wire \$1021 ;
  wire \$1022 ;
  wire \$1023 ;
  wire \$1024 ;
  wire \$1025 ;
  wire \$1026 ;
  wire \$1027 ;
  wire \$1028 ;
  wire \$1029 ;
  wire [31:0] \$103 ;
  wire [31:0] \$1030 ;
  wire \$1031 ;
  wire [31:0] \$1032 ;
  wire \$1033 ;
  wire [31:0] \$1034 ;
  wire \$1035 ;
  wire [31:0] \$1036 ;
  wire \$1037 ;
  wire [31:0] \$1038 ;
  wire \$1039 ;
  wire \$104 ;
  wire [31:0] \$1040 ;
  wire \$1041 ;
  wire [31:0] \$1042 ;
  wire \$1043 ;
  wire [31:0] \$1044 ;
  wire \$1045 ;
  wire [31:0] \$1046 ;
  wire \$1047 ;
  wire [31:0] \$1048 ;
  wire \$1049 ;
  wire [31:0] \$105 ;
  wire [31:0] \$1050 ;
  wire \$1051 ;
  wire [31:0] \$1052 ;
  wire \$1053 ;
  wire [31:0] \$1054 ;
  wire \$1055 ;
  wire \$1056 ;
  wire \$1057 ;
  wire \$1058 ;
  wire \$1059 ;
  wire \$106 ;
  wire \$1060 ;
  wire \$1061 ;
  wire \$1062 ;
  wire \$1063 ;
  wire \$1064 ;
  wire \$1065 ;
  wire \$1066 ;
  wire \$1067 ;
  wire \$1068 ;
  wire [31:0] \$1069 ;
  wire [31:0] \$107 ;
  wire \$1070 ;
  wire [31:0] \$1071 ;
  wire \$1072 ;
  wire [31:0] \$1073 ;
  wire \$1074 ;
  wire [31:0] \$1075 ;
  wire \$1076 ;
  wire [31:0] \$1077 ;
  wire \$1078 ;
  wire [31:0] \$1079 ;
  wire \$108 ;
  wire \$1080 ;
  wire [31:0] \$1081 ;
  wire \$1082 ;
  wire [31:0] \$1083 ;
  wire \$1084 ;
  wire [31:0] \$1085 ;
  wire \$1086 ;
  wire [31:0] \$1087 ;
  wire \$1088 ;
  wire [31:0] \$1089 ;
  wire [31:0] \$109 ;
  wire \$1090 ;
  wire [31:0] \$1091 ;
  wire \$1092 ;
  wire [31:0] \$1093 ;
  wire \$1094 ;
  wire \$1095 ;
  wire \$1096 ;
  wire \$1097 ;
  wire \$1098 ;
  wire \$1099 ;
  wire [31:0] \$11 ;
  wire \$110 ;
  wire \$1100 ;
  wire \$1101 ;
  wire \$1102 ;
  wire \$1103 ;
  wire \$1104 ;
  wire \$1105 ;
  wire \$1106 ;
  wire \$1107 ;
  wire [31:0] \$1108 ;
  wire \$1109 ;
  wire \$111 ;
  wire [31:0] \$1110 ;
  wire \$1111 ;
  wire [31:0] \$1112 ;
  wire \$1113 ;
  wire [31:0] \$1114 ;
  wire \$1115 ;
  wire [31:0] \$1116 ;
  wire \$1117 ;
  wire [31:0] \$1118 ;
  wire \$1119 ;
  wire \$112 ;
  wire [31:0] \$1120 ;
  wire \$1121 ;
  wire [31:0] \$1122 ;
  wire \$1123 ;
  wire [31:0] \$1124 ;
  wire \$1125 ;
  wire [31:0] \$1126 ;
  wire \$1127 ;
  wire [31:0] \$1128 ;
  wire \$1129 ;
  wire \$113 ;
  wire [31:0] \$1130 ;
  wire \$1131 ;
  wire [31:0] \$1132 ;
  wire \$1133 ;
  wire [31:0] \$1134 ;
  wire \$1135 ;
  wire [31:0] \$1136 ;
  wire \$1137 ;
  wire \$1138 ;
  wire \$1139 ;
  wire \$114 ;
  wire \$1140 ;
  wire \$1141 ;
  wire \$1142 ;
  wire \$1143 ;
  wire \$1144 ;
  wire \$1145 ;
  wire \$1146 ;
  wire \$1147 ;
  wire \$1148 ;
  wire \$1149 ;
  wire \$115 ;
  wire \$1150 ;
  wire \$1151 ;
  wire \$1152 ;
  wire [31:0] \$1153 ;
  wire \$1154 ;
  wire [31:0] \$1155 ;
  wire \$1156 ;
  wire [31:0] \$1157 ;
  wire \$1158 ;
  wire [31:0] \$1159 ;
  wire \$116 ;
  wire \$1160 ;
  wire [31:0] \$1161 ;
  wire \$1162 ;
  wire [31:0] \$1163 ;
  wire \$1164 ;
  wire [31:0] \$1165 ;
  wire \$1166 ;
  wire [31:0] \$1167 ;
  wire \$1168 ;
  wire [31:0] \$1169 ;
  wire \$117 ;
  wire \$1170 ;
  wire [31:0] \$1171 ;
  wire \$1172 ;
  wire [31:0] \$1173 ;
  wire \$1174 ;
  wire [31:0] \$1175 ;
  wire \$1176 ;
  wire [31:0] \$1177 ;
  wire \$1178 ;
  wire [31:0] \$1179 ;
  wire \$118 ;
  wire \$1180 ;
  wire \$1181 ;
  wire \$1182 ;
  wire \$1183 ;
  wire \$1184 ;
  wire \$1185 ;
  wire \$1186 ;
  wire \$1187 ;
  wire \$1188 ;
  wire \$1189 ;
  wire \$119 ;
  wire \$1190 ;
  wire \$1191 ;
  wire \$1192 ;
  wire \$1193 ;
  wire \$1194 ;
  wire [31:0] \$1195 ;
  wire \$1196 ;
  wire [31:0] \$1197 ;
  wire \$1198 ;
  wire [31:0] \$1199 ;
  wire \$12 ;
  wire \$120 ;
  wire \$1200 ;
  wire [31:0] \$1201 ;
  wire \$1202 ;
  wire [31:0] \$1203 ;
  wire \$1204 ;
  wire [31:0] \$1205 ;
  wire \$1206 ;
  wire [31:0] \$1207 ;
  wire \$1208 ;
  wire [31:0] \$1209 ;
  wire \$121 ;
  wire \$1210 ;
  wire [31:0] \$1211 ;
  wire \$1212 ;
  wire [31:0] \$1213 ;
  wire \$1214 ;
  wire [31:0] \$1215 ;
  wire \$1216 ;
  wire [31:0] \$1217 ;
  wire \$1218 ;
  wire [31:0] \$1219 ;
  wire \$122 ;
  wire \$1220 ;
  wire [31:0] \$1221 ;
  wire \$1222 ;
  wire \$1223 ;
  wire \$1224 ;
  wire \$1225 ;
  wire \$1226 ;
  wire \$1227 ;
  wire \$1228 ;
  wire \$1229 ;
  wire \$123 ;
  wire \$1230 ;
  wire \$1231 ;
  wire \$1232 ;
  wire \$1233 ;
  wire \$1234 ;
  wire \$1235 ;
  wire \$1236 ;
  wire [31:0] \$1237 ;
  wire \$1238 ;
  wire [31:0] \$1239 ;
  wire \$124 ;
  wire \$1240 ;
  wire [31:0] \$1241 ;
  wire \$1242 ;
  wire [31:0] \$1243 ;
  wire \$1244 ;
  wire [31:0] \$1245 ;
  wire \$1246 ;
  wire [31:0] \$1247 ;
  wire \$1248 ;
  wire [31:0] \$1249 ;
  wire \$125 ;
  wire \$1250 ;
  wire [31:0] \$1251 ;
  wire \$1252 ;
  wire [31:0] \$1253 ;
  wire \$1254 ;
  wire [31:0] \$1255 ;
  wire \$1256 ;
  wire [31:0] \$1257 ;
  wire \$1258 ;
  wire [31:0] \$1259 ;
  wire \$126 ;
  wire \$1260 ;
  wire [31:0] \$1261 ;
  wire \$1262 ;
  wire [31:0] \$1263 ;
  wire \$1264 ;
  wire \$1265 ;
  wire \$1266 ;
  wire \$1267 ;
  wire \$1268 ;
  wire \$1269 ;
  wire [31:0] \$127 ;
  wire \$1270 ;
  wire \$1271 ;
  wire \$1272 ;
  wire \$1273 ;
  wire \$1274 ;
  wire \$1275 ;
  wire \$1276 ;
  wire \$1277 ;
  wire \$1278 ;
  wire [31:0] \$1279 ;
  wire \$128 ;
  wire \$1280 ;
  wire [31:0] \$1281 ;
  wire \$1282 ;
  wire [31:0] \$1283 ;
  wire \$1284 ;
  wire [31:0] \$1285 ;
  wire \$1286 ;
  wire [31:0] \$1287 ;
  wire \$1288 ;
  wire [31:0] \$1289 ;
  wire [31:0] \$129 ;
  wire \$1290 ;
  wire [31:0] \$1291 ;
  wire \$1292 ;
  wire [31:0] \$1293 ;
  wire \$1294 ;
  wire [31:0] \$1295 ;
  wire \$1296 ;
  wire [31:0] \$1297 ;
  wire \$1298 ;
  wire [31:0] \$1299 ;
  wire [31:0] \$13 ;
  wire \$130 ;
  wire \$1300 ;
  wire [31:0] \$1301 ;
  wire \$1302 ;
  wire [31:0] \$1303 ;
  wire \$1304 ;
  wire \$1305 ;
  wire \$1306 ;
  wire \$1307 ;
  wire \$1308 ;
  wire \$1309 ;
  wire [31:0] \$131 ;
  wire \$1310 ;
  wire \$1311 ;
  wire \$1312 ;
  wire \$1313 ;
  wire \$1314 ;
  wire \$1315 ;
  wire \$1316 ;
  wire \$1317 ;
  wire [31:0] \$1318 ;
  wire \$1319 ;
  wire \$132 ;
  wire [31:0] \$1320 ;
  wire \$1321 ;
  wire [31:0] \$1322 ;
  wire \$1323 ;
  wire [31:0] \$1324 ;
  wire \$1325 ;
  wire [31:0] \$1326 ;
  wire \$1327 ;
  wire [31:0] \$1328 ;
  wire \$1329 ;
  wire [31:0] \$133 ;
  wire [31:0] \$1330 ;
  wire \$1331 ;
  wire [31:0] \$1332 ;
  wire \$1333 ;
  wire [31:0] \$1334 ;
  wire \$1335 ;
  wire [31:0] \$1336 ;
  wire \$1337 ;
  wire [31:0] \$1338 ;
  wire \$1339 ;
  wire \$134 ;
  wire [31:0] \$1340 ;
  wire \$1341 ;
  wire [31:0] \$1342 ;
  wire \$1343 ;
  wire \$1344 ;
  wire \$1345 ;
  wire \$1346 ;
  wire \$1347 ;
  wire \$1348 ;
  wire \$1349 ;
  wire [31:0] \$135 ;
  wire \$1350 ;
  wire \$1351 ;
  wire \$1352 ;
  wire \$1353 ;
  wire \$1354 ;
  wire \$1355 ;
  wire \$1356 ;
  reg [31:0] \$1357 ;
  wire \$136 ;
  wire [31:0] \$137 ;
  wire \$138 ;
  wire [31:0] \$139 ;
  wire \$14 ;
  wire \$140 ;
  wire [31:0] \$141 ;
  wire \$142 ;
  wire [31:0] \$143 ;
  wire \$144 ;
  wire [31:0] \$145 ;
  wire \$146 ;
  wire [31:0] \$147 ;
  wire \$148 ;
  wire [31:0] \$149 ;
  wire [31:0] \$15 ;
  wire \$150 ;
  wire [31:0] \$151 ;
  wire \$152 ;
  wire [31:0] \$153 ;
  wire \$154 ;
  wire [31:0] \$155 ;
  wire \$156 ;
  wire \$157 ;
  wire \$158 ;
  wire \$159 ;
  wire \$16 ;
  wire \$160 ;
  wire \$161 ;
  wire \$162 ;
  wire \$163 ;
  wire \$164 ;
  wire \$165 ;
  wire \$166 ;
  wire \$167 ;
  wire \$168 ;
  wire \$169 ;
  wire [31:0] \$17 ;
  wire \$170 ;
  wire \$171 ;
  wire [31:0] \$172 ;
  wire \$173 ;
  wire [31:0] \$174 ;
  wire \$175 ;
  wire [31:0] \$176 ;
  wire \$177 ;
  wire [31:0] \$178 ;
  wire \$179 ;
  wire \$18 ;
  wire [31:0] \$180 ;
  wire \$181 ;
  wire [31:0] \$182 ;
  wire \$183 ;
  wire [31:0] \$184 ;
  wire \$185 ;
  wire [31:0] \$186 ;
  wire \$187 ;
  wire [31:0] \$188 ;
  wire \$189 ;
  wire [31:0] \$19 ;
  wire [31:0] \$190 ;
  wire \$191 ;
  wire [31:0] \$192 ;
  wire \$193 ;
  wire [31:0] \$194 ;
  wire \$195 ;
  wire [31:0] \$196 ;
  wire \$197 ;
  wire [31:0] \$198 ;
  wire \$199 ;
  wire \$2 ;
  wire \$20 ;
  wire [31:0] \$200 ;
  wire \$201 ;
  wire [31:0] \$202 ;
  wire \$203 ;
  wire [31:0] \$204 ;
  wire \$205 ;
  wire \$206 ;
  wire \$207 ;
  wire \$208 ;
  wire \$209 ;
  wire [31:0] \$21 ;
  wire \$210 ;
  wire \$211 ;
  wire \$212 ;
  wire \$213 ;
  wire \$214 ;
  wire \$215 ;
  wire \$216 ;
  wire \$217 ;
  wire \$218 ;
  wire \$219 ;
  wire \$22 ;
  wire \$220 ;
  wire \$221 ;
  wire \$222 ;
  wire [31:0] \$223 ;
  wire \$224 ;
  wire [31:0] \$225 ;
  wire \$226 ;
  wire [31:0] \$227 ;
  wire \$228 ;
  wire [31:0] \$229 ;
  wire [31:0] \$23 ;
  wire \$230 ;
  wire [31:0] \$231 ;
  wire \$232 ;
  wire [31:0] \$233 ;
  wire \$234 ;
  wire [31:0] \$235 ;
  wire \$236 ;
  wire [31:0] \$237 ;
  wire \$238 ;
  wire [31:0] \$239 ;
  wire \$24 ;
  wire \$240 ;
  wire [31:0] \$241 ;
  wire \$242 ;
  wire [31:0] \$243 ;
  wire \$244 ;
  wire [31:0] \$245 ;
  wire \$246 ;
  wire [31:0] \$247 ;
  wire \$248 ;
  wire [31:0] \$249 ;
  wire [31:0] \$25 ;
  wire \$250 ;
  wire [31:0] \$251 ;
  wire \$252 ;
  wire \$253 ;
  wire \$254 ;
  wire \$255 ;
  wire \$256 ;
  wire \$257 ;
  wire \$258 ;
  wire \$259 ;
  wire \$26 ;
  wire \$260 ;
  wire \$261 ;
  wire \$262 ;
  wire \$263 ;
  wire \$264 ;
  wire \$265 ;
  wire \$266 ;
  wire \$267 ;
  wire [31:0] \$268 ;
  wire \$269 ;
  wire \$27 ;
  wire [31:0] \$270 ;
  wire \$271 ;
  wire [31:0] \$272 ;
  wire \$273 ;
  wire [31:0] \$274 ;
  wire \$275 ;
  wire [31:0] \$276 ;
  wire \$277 ;
  wire [31:0] \$278 ;
  wire \$279 ;
  wire \$28 ;
  wire [31:0] \$280 ;
  wire \$281 ;
  wire [31:0] \$282 ;
  wire \$283 ;
  wire [31:0] \$284 ;
  wire \$285 ;
  wire [31:0] \$286 ;
  wire \$287 ;
  wire [31:0] \$288 ;
  wire \$289 ;
  wire \$29 ;
  wire [31:0] \$290 ;
  wire \$291 ;
  wire [31:0] \$292 ;
  wire \$293 ;
  wire [31:0] \$294 ;
  wire \$295 ;
  wire [31:0] \$296 ;
  wire \$297 ;
  wire \$298 ;
  wire \$299 ;
  wire [31:0] \$3 ;
  wire \$30 ;
  wire \$300 ;
  wire \$301 ;
  wire \$302 ;
  wire \$303 ;
  wire \$304 ;
  wire \$305 ;
  wire \$306 ;
  wire \$307 ;
  wire \$308 ;
  wire \$309 ;
  wire \$31 ;
  wire \$310 ;
  wire \$311 ;
  wire \$312 ;
  wire [31:0] \$313 ;
  wire \$314 ;
  wire [31:0] \$315 ;
  wire \$316 ;
  wire [31:0] \$317 ;
  wire \$318 ;
  wire [31:0] \$319 ;
  wire \$32 ;
  wire \$320 ;
  wire [31:0] \$321 ;
  wire \$322 ;
  wire [31:0] \$323 ;
  wire \$324 ;
  wire [31:0] \$325 ;
  wire \$326 ;
  wire [31:0] \$327 ;
  wire \$328 ;
  wire [31:0] \$329 ;
  wire \$33 ;
  wire \$330 ;
  wire [31:0] \$331 ;
  wire \$332 ;
  wire [31:0] \$333 ;
  wire \$334 ;
  wire [31:0] \$335 ;
  wire \$336 ;
  wire [31:0] \$337 ;
  wire \$338 ;
  wire [31:0] \$339 ;
  wire \$34 ;
  wire \$340 ;
  wire [31:0] \$341 ;
  wire \$342 ;
  wire [31:0] \$343 ;
  wire \$344 ;
  wire \$345 ;
  wire \$346 ;
  wire \$347 ;
  wire \$348 ;
  wire \$349 ;
  wire \$35 ;
  wire \$350 ;
  wire \$351 ;
  wire \$352 ;
  wire \$353 ;
  wire \$354 ;
  wire \$355 ;
  wire \$356 ;
  wire \$357 ;
  wire \$358 ;
  wire \$359 ;
  wire \$36 ;
  wire \$360 ;
  wire [31:0] \$361 ;
  wire \$362 ;
  wire [31:0] \$363 ;
  wire \$364 ;
  wire [31:0] \$365 ;
  wire \$366 ;
  wire [31:0] \$367 ;
  wire \$368 ;
  wire [31:0] \$369 ;
  wire \$37 ;
  wire \$370 ;
  wire [31:0] \$371 ;
  wire \$372 ;
  wire [31:0] \$373 ;
  wire \$374 ;
  wire [31:0] \$375 ;
  wire \$376 ;
  wire [31:0] \$377 ;
  wire \$378 ;
  wire [31:0] \$379 ;
  wire \$38 ;
  wire \$380 ;
  wire [31:0] \$381 ;
  wire \$382 ;
  wire [31:0] \$383 ;
  wire \$384 ;
  wire [31:0] \$385 ;
  wire \$386 ;
  wire \$387 ;
  wire \$388 ;
  wire \$389 ;
  wire \$39 ;
  wire \$390 ;
  wire \$391 ;
  wire \$392 ;
  wire \$393 ;
  wire \$394 ;
  wire \$395 ;
  wire \$396 ;
  wire \$397 ;
  wire \$398 ;
  wire \$399 ;
  wire \$4 ;
  wire [31:0] \$40 ;
  wire [31:0] \$400 ;
  wire \$401 ;
  wire [31:0] \$402 ;
  wire \$403 ;
  wire [31:0] \$404 ;
  wire \$405 ;
  wire [31:0] \$406 ;
  wire \$407 ;
  wire [31:0] \$408 ;
  wire \$409 ;
  wire \$41 ;
  wire [31:0] \$410 ;
  wire \$411 ;
  wire [31:0] \$412 ;
  wire \$413 ;
  wire [31:0] \$414 ;
  wire \$415 ;
  wire [31:0] \$416 ;
  wire \$417 ;
  wire [31:0] \$418 ;
  wire \$419 ;
  wire [31:0] \$42 ;
  wire [31:0] \$420 ;
  wire \$421 ;
  wire [31:0] \$422 ;
  wire \$423 ;
  wire \$424 ;
  wire \$425 ;
  wire \$426 ;
  wire \$427 ;
  wire \$428 ;
  wire \$429 ;
  wire \$43 ;
  wire \$430 ;
  wire \$431 ;
  wire \$432 ;
  wire \$433 ;
  wire \$434 ;
  wire \$435 ;
  wire [31:0] \$436 ;
  wire \$437 ;
  wire [31:0] \$438 ;
  wire \$439 ;
  wire [31:0] \$44 ;
  wire [31:0] \$440 ;
  wire \$441 ;
  wire [31:0] \$442 ;
  wire \$443 ;
  wire [31:0] \$444 ;
  wire \$445 ;
  wire [31:0] \$446 ;
  wire \$447 ;
  wire [31:0] \$448 ;
  wire \$449 ;
  wire \$45 ;
  wire [31:0] \$450 ;
  wire \$451 ;
  wire [31:0] \$452 ;
  wire \$453 ;
  wire [31:0] \$454 ;
  wire \$455 ;
  wire [31:0] \$456 ;
  wire \$457 ;
  wire [31:0] \$458 ;
  wire \$459 ;
  wire [31:0] \$46 ;
  wire [31:0] \$460 ;
  wire \$461 ;
  wire \$462 ;
  wire \$463 ;
  wire \$464 ;
  wire \$465 ;
  wire \$466 ;
  wire \$467 ;
  wire \$468 ;
  wire \$469 ;
  wire \$47 ;
  wire \$470 ;
  wire \$471 ;
  wire \$472 ;
  wire \$473 ;
  wire \$474 ;
  wire [31:0] \$475 ;
  wire \$476 ;
  wire [31:0] \$477 ;
  wire \$478 ;
  wire [31:0] \$479 ;
  wire [31:0] \$48 ;
  wire \$480 ;
  wire [31:0] \$481 ;
  wire \$482 ;
  wire [31:0] \$483 ;
  wire \$484 ;
  wire [31:0] \$485 ;
  wire \$486 ;
  wire [31:0] \$487 ;
  wire \$488 ;
  wire [31:0] \$489 ;
  wire \$49 ;
  wire \$490 ;
  wire [31:0] \$491 ;
  wire \$492 ;
  wire [31:0] \$493 ;
  wire \$494 ;
  wire [31:0] \$495 ;
  wire \$496 ;
  wire [31:0] \$497 ;
  wire \$498 ;
  wire [31:0] \$499 ;
  wire [31:0] \$5 ;
  wire [31:0] \$50 ;
  wire \$500 ;
  wire [31:0] \$501 ;
  wire \$502 ;
  wire [31:0] \$503 ;
  wire \$504 ;
  wire [31:0] \$505 ;
  wire \$506 ;
  wire [31:0] \$507 ;
  wire \$508 ;
  wire \$509 ;
  wire \$51 ;
  wire \$510 ;
  wire \$511 ;
  wire \$512 ;
  wire \$513 ;
  wire \$514 ;
  wire \$515 ;
  wire \$516 ;
  wire \$517 ;
  wire \$518 ;
  wire \$519 ;
  wire [31:0] \$52 ;
  wire \$520 ;
  wire \$521 ;
  wire \$522 ;
  wire \$523 ;
  wire \$524 ;
  wire \$525 ;
  wire [31:0] \$526 ;
  wire \$527 ;
  wire [31:0] \$528 ;
  wire \$529 ;
  wire \$53 ;
  wire [31:0] \$530 ;
  wire \$531 ;
  wire [31:0] \$532 ;
  wire \$533 ;
  wire [31:0] \$534 ;
  wire \$535 ;
  wire [31:0] \$536 ;
  wire \$537 ;
  wire [31:0] \$538 ;
  wire \$539 ;
  wire [31:0] \$54 ;
  wire [31:0] \$540 ;
  wire \$541 ;
  wire [31:0] \$542 ;
  wire \$543 ;
  wire [31:0] \$544 ;
  wire \$545 ;
  wire [31:0] \$546 ;
  wire \$547 ;
  wire [31:0] \$548 ;
  wire \$549 ;
  wire \$55 ;
  wire [31:0] \$550 ;
  wire \$551 ;
  wire [31:0] \$552 ;
  wire \$553 ;
  wire [31:0] \$554 ;
  wire \$555 ;
  wire [31:0] \$556 ;
  wire \$557 ;
  wire [31:0] \$558 ;
  wire \$559 ;
  wire [31:0] \$56 ;
  wire \$560 ;
  wire \$561 ;
  wire \$562 ;
  wire \$563 ;
  wire \$564 ;
  wire \$565 ;
  wire \$566 ;
  wire \$567 ;
  wire \$568 ;
  wire \$569 ;
  wire \$57 ;
  wire \$570 ;
  wire \$571 ;
  wire \$572 ;
  wire \$573 ;
  wire \$574 ;
  wire \$575 ;
  wire \$576 ;
  wire [31:0] \$577 ;
  wire \$578 ;
  wire [31:0] \$579 ;
  wire [31:0] \$58 ;
  wire \$580 ;
  wire [31:0] \$581 ;
  wire \$582 ;
  wire [31:0] \$583 ;
  wire \$584 ;
  wire [31:0] \$585 ;
  wire \$586 ;
  wire [31:0] \$587 ;
  wire \$588 ;
  wire [31:0] \$589 ;
  wire \$59 ;
  wire \$590 ;
  wire [31:0] \$591 ;
  wire \$592 ;
  wire [31:0] \$593 ;
  wire \$594 ;
  wire [31:0] \$595 ;
  wire \$596 ;
  wire [31:0] \$597 ;
  wire \$598 ;
  wire [31:0] \$599 ;
  wire \$6 ;
  wire [31:0] \$60 ;
  wire \$600 ;
  wire [31:0] \$601 ;
  wire \$602 ;
  wire [31:0] \$603 ;
  wire \$604 ;
  wire [31:0] \$605 ;
  wire \$606 ;
  wire [31:0] \$607 ;
  wire \$608 ;
  wire \$609 ;
  wire \$61 ;
  wire \$610 ;
  wire \$611 ;
  wire \$612 ;
  wire \$613 ;
  wire \$614 ;
  wire \$615 ;
  wire \$616 ;
  wire \$617 ;
  wire \$618 ;
  wire \$619 ;
  wire [31:0] \$62 ;
  wire \$620 ;
  wire \$621 ;
  wire \$622 ;
  wire \$623 ;
  wire \$624 ;
  wire [31:0] \$625 ;
  wire \$626 ;
  wire [31:0] \$627 ;
  wire \$628 ;
  wire [31:0] \$629 ;
  wire \$63 ;
  wire \$630 ;
  wire [31:0] \$631 ;
  wire \$632 ;
  wire [31:0] \$633 ;
  wire \$634 ;
  wire [31:0] \$635 ;
  wire \$636 ;
  wire [31:0] \$637 ;
  wire \$638 ;
  wire [31:0] \$639 ;
  wire [31:0] \$64 ;
  wire \$640 ;
  wire [31:0] \$641 ;
  wire \$642 ;
  wire [31:0] \$643 ;
  wire \$644 ;
  wire [31:0] \$645 ;
  wire \$646 ;
  wire [31:0] \$647 ;
  wire \$648 ;
  wire [31:0] \$649 ;
  wire \$65 ;
  wire \$650 ;
  wire [31:0] \$651 ;
  wire \$652 ;
  wire [31:0] \$653 ;
  wire \$654 ;
  wire \$655 ;
  wire \$656 ;
  wire \$657 ;
  wire \$658 ;
  wire \$659 ;
  wire \$66 ;
  wire \$660 ;
  wire \$661 ;
  wire \$662 ;
  wire \$663 ;
  wire \$664 ;
  wire \$665 ;
  wire \$666 ;
  wire \$667 ;
  wire \$668 ;
  wire \$669 ;
  wire \$67 ;
  wire [31:0] \$670 ;
  wire \$671 ;
  wire [31:0] \$672 ;
  wire \$673 ;
  wire [31:0] \$674 ;
  wire \$675 ;
  wire [31:0] \$676 ;
  wire \$677 ;
  wire [31:0] \$678 ;
  wire \$679 ;
  wire \$68 ;
  wire [31:0] \$680 ;
  wire \$681 ;
  wire [31:0] \$682 ;
  wire \$683 ;
  wire [31:0] \$684 ;
  wire \$685 ;
  wire [31:0] \$686 ;
  wire \$687 ;
  wire [31:0] \$688 ;
  wire \$689 ;
  wire \$69 ;
  wire [31:0] \$690 ;
  wire \$691 ;
  wire [31:0] \$692 ;
  wire \$693 ;
  wire [31:0] \$694 ;
  wire \$695 ;
  wire [31:0] \$696 ;
  wire \$697 ;
  wire [31:0] \$698 ;
  wire \$699 ;
  wire [31:0] \$7 ;
  wire \$70 ;
  wire \$700 ;
  wire \$701 ;
  wire \$702 ;
  wire \$703 ;
  wire \$704 ;
  wire \$705 ;
  wire \$706 ;
  wire \$707 ;
  wire \$708 ;
  wire \$709 ;
  wire \$71 ;
  wire \$710 ;
  wire \$711 ;
  wire \$712 ;
  wire \$713 ;
  wire \$714 ;
  wire [31:0] \$715 ;
  wire \$716 ;
  wire [31:0] \$717 ;
  wire \$718 ;
  wire [31:0] \$719 ;
  wire \$72 ;
  wire \$720 ;
  wire [31:0] \$721 ;
  wire \$722 ;
  wire [31:0] \$723 ;
  wire \$724 ;
  wire [31:0] \$725 ;
  wire \$726 ;
  wire [31:0] \$727 ;
  wire \$728 ;
  wire [31:0] \$729 ;
  wire \$73 ;
  wire \$730 ;
  wire [31:0] \$731 ;
  wire \$732 ;
  wire [31:0] \$733 ;
  wire \$734 ;
  wire [31:0] \$735 ;
  wire \$736 ;
  wire [31:0] \$737 ;
  wire \$738 ;
  wire [31:0] \$739 ;
  wire \$74 ;
  wire \$740 ;
  wire [31:0] \$741 ;
  wire \$742 ;
  wire \$743 ;
  wire \$744 ;
  wire \$745 ;
  wire \$746 ;
  wire \$747 ;
  wire \$748 ;
  wire \$749 ;
  wire \$75 ;
  wire \$750 ;
  wire \$751 ;
  wire \$752 ;
  wire \$753 ;
  wire \$754 ;
  wire \$755 ;
  wire \$756 ;
  wire [31:0] \$757 ;
  wire \$758 ;
  wire [31:0] \$759 ;
  wire \$76 ;
  wire \$760 ;
  wire [31:0] \$761 ;
  wire \$762 ;
  wire [31:0] \$763 ;
  wire \$764 ;
  wire [31:0] \$765 ;
  wire \$766 ;
  wire [31:0] \$767 ;
  wire \$768 ;
  wire [31:0] \$769 ;
  wire \$77 ;
  wire \$770 ;
  wire [31:0] \$771 ;
  wire \$772 ;
  wire [31:0] \$773 ;
  wire \$774 ;
  wire [31:0] \$775 ;
  wire \$776 ;
  wire [31:0] \$777 ;
  wire \$778 ;
  wire [31:0] \$779 ;
  wire \$78 ;
  wire \$780 ;
  wire [31:0] \$781 ;
  wire \$782 ;
  wire [31:0] \$783 ;
  wire \$784 ;
  wire \$785 ;
  wire \$786 ;
  wire \$787 ;
  wire \$788 ;
  wire \$789 ;
  wire [31:0] \$79 ;
  wire \$790 ;
  wire \$791 ;
  wire \$792 ;
  wire \$793 ;
  wire \$794 ;
  wire \$795 ;
  wire \$796 ;
  wire \$797 ;
  wire \$798 ;
  wire [31:0] \$799 ;
  wire \$8 ;
  wire \$80 ;
  wire \$800 ;
  wire [31:0] \$801 ;
  wire \$802 ;
  wire [31:0] \$803 ;
  wire \$804 ;
  wire [31:0] \$805 ;
  wire \$806 ;
  wire [31:0] \$807 ;
  wire \$808 ;
  wire [31:0] \$809 ;
  wire [31:0] \$81 ;
  wire \$810 ;
  wire [31:0] \$811 ;
  wire \$812 ;
  wire [31:0] \$813 ;
  wire \$814 ;
  wire [31:0] \$815 ;
  wire \$816 ;
  wire [31:0] \$817 ;
  wire \$818 ;
  wire [31:0] \$819 ;
  wire \$82 ;
  wire \$820 ;
  wire [31:0] \$821 ;
  wire \$822 ;
  wire [31:0] \$823 ;
  wire \$824 ;
  wire \$825 ;
  wire \$826 ;
  wire \$827 ;
  wire \$828 ;
  wire \$829 ;
  wire [31:0] \$83 ;
  wire \$830 ;
  wire \$831 ;
  wire \$832 ;
  wire \$833 ;
  wire \$834 ;
  wire \$835 ;
  wire \$836 ;
  wire \$837 ;
  wire [31:0] \$838 ;
  wire \$839 ;
  wire \$84 ;
  wire [31:0] \$840 ;
  wire \$841 ;
  wire [31:0] \$842 ;
  wire \$843 ;
  wire [31:0] \$844 ;
  wire \$845 ;
  wire [31:0] \$846 ;
  wire \$847 ;
  wire [31:0] \$848 ;
  wire \$849 ;
  wire [31:0] \$85 ;
  wire [31:0] \$850 ;
  wire \$851 ;
  wire [31:0] \$852 ;
  wire \$853 ;
  wire [31:0] \$854 ;
  wire \$855 ;
  wire [31:0] \$856 ;
  wire \$857 ;
  wire [31:0] \$858 ;
  wire \$859 ;
  wire \$86 ;
  wire [31:0] \$860 ;
  wire \$861 ;
  wire \$862 ;
  wire \$863 ;
  wire \$864 ;
  wire \$865 ;
  wire \$866 ;
  wire \$867 ;
  wire \$868 ;
  wire \$869 ;
  wire [31:0] \$87 ;
  wire \$870 ;
  wire \$871 ;
  wire \$872 ;
  wire \$873 ;
  wire [31:0] \$874 ;
  wire \$875 ;
  wire [31:0] \$876 ;
  wire \$877 ;
  wire [31:0] \$878 ;
  wire \$879 ;
  wire \$88 ;
  wire [31:0] \$880 ;
  wire \$881 ;
  wire [31:0] \$882 ;
  wire \$883 ;
  wire [31:0] \$884 ;
  wire \$885 ;
  wire [31:0] \$886 ;
  wire \$887 ;
  wire [31:0] \$888 ;
  wire \$889 ;
  wire [31:0] \$89 ;
  wire [31:0] \$890 ;
  wire \$891 ;
  wire [31:0] \$892 ;
  wire \$893 ;
  wire [31:0] \$894 ;
  wire \$895 ;
  wire [31:0] \$896 ;
  wire \$897 ;
  wire \$898 ;
  wire \$899 ;
  wire [31:0] \$9 ;
  wire \$90 ;
  wire \$900 ;
  wire \$901 ;
  wire \$902 ;
  wire \$903 ;
  wire \$904 ;
  wire \$905 ;
  wire \$906 ;
  wire \$907 ;
  wire \$908 ;
  wire \$909 ;
  wire [31:0] \$91 ;
  wire [31:0] \$910 ;
  wire \$911 ;
  wire [31:0] \$912 ;
  wire \$913 ;
  wire [31:0] \$914 ;
  wire \$915 ;
  wire [31:0] \$916 ;
  wire \$917 ;
  wire [31:0] \$918 ;
  wire \$919 ;
  wire \$92 ;
  wire [31:0] \$920 ;
  wire \$921 ;
  wire [31:0] \$922 ;
  wire \$923 ;
  wire [31:0] \$924 ;
  wire \$925 ;
  wire [31:0] \$926 ;
  wire \$927 ;
  wire [31:0] \$928 ;
  wire \$929 ;
  wire [31:0] \$93 ;
  wire [31:0] \$930 ;
  wire \$931 ;
  wire [31:0] \$932 ;
  wire \$933 ;
  wire \$934 ;
  wire \$935 ;
  wire \$936 ;
  wire \$937 ;
  wire \$938 ;
  wire \$939 ;
  wire \$94 ;
  wire \$940 ;
  wire \$941 ;
  wire \$942 ;
  wire \$943 ;
  wire \$944 ;
  wire \$945 ;
  wire [31:0] \$946 ;
  wire \$947 ;
  wire [31:0] \$948 ;
  wire \$949 ;
  wire [31:0] \$95 ;
  wire [31:0] \$950 ;
  wire \$951 ;
  wire [31:0] \$952 ;
  wire \$953 ;
  wire [31:0] \$954 ;
  wire \$955 ;
  wire [31:0] \$956 ;
  wire \$957 ;
  wire [31:0] \$958 ;
  wire \$959 ;
  wire \$96 ;
  wire [31:0] \$960 ;
  wire \$961 ;
  wire [31:0] \$962 ;
  wire \$963 ;
  wire [31:0] \$964 ;
  wire \$965 ;
  wire [31:0] \$966 ;
  wire \$967 ;
  wire [31:0] \$968 ;
  wire \$969 ;
  wire [31:0] \$97 ;
  wire [31:0] \$970 ;
  wire \$971 ;
  wire [31:0] \$972 ;
  wire \$973 ;
  wire \$974 ;
  wire \$975 ;
  wire \$976 ;
  wire \$977 ;
  wire \$978 ;
  wire \$979 ;
  wire \$98 ;
  wire \$980 ;
  wire \$981 ;
  wire \$982 ;
  wire \$983 ;
  wire \$984 ;
  wire \$985 ;
  wire \$986 ;
  wire \$987 ;
  wire [31:0] \$988 ;
  wire \$989 ;
  wire [31:0] \$99 ;
  wire [31:0] \$990 ;
  wire \$991 ;
  wire [31:0] \$992 ;
  wire \$993 ;
  wire [31:0] \$994 ;
  wire \$995 ;
  wire [31:0] \$996 ;
  wire \$997 ;
  wire [31:0] \$998 ;
  wire \$999 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:316" *)
  output [31:0] crc;
  wire [31:0] crc;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:322" *)
  reg [31:0] crc_reg = 32'd4294967295;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:314" *)
  wire [31:0] data;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:314" *)
  input [31:0] data_in;
  wire [31:0] data_in;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:317" *)
  wire match_detected;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:313" *)
  input start;
  wire start;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:273" *)
  input sync_100_clk;
  wire sync_100_clk;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:273" *)
  input sync_100_rst;
  wire sync_100_rst;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:315" *)
  input valid;
  wire valid;
  assign match_detected = ! (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:356" *) crc_reg;
  assign \$1  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$3  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$4  = \$2  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$3 [6];
  assign \$5  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$6  = \$4  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$5 [9];
  assign \$7  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$8  = \$6  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$7 [10];
  assign \$9  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$10  = \$8  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$9 [12];
  assign \$11  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$12  = \$10  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$11 [16];
  assign \$13  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$14  = \$12  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$13 [24];
  assign \$15  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$16  = \$14  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$15 [25];
  assign \$17  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$18  = \$16  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$17 [26];
  assign \$19  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$20  = \$18  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$19 [28];
  assign \$21  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$22  = \$20  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$21 [29];
  assign \$23  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$24  = \$22  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$23 [30];
  assign \$25  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$26  = \$24  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$25 [31];
  assign \$27  = \$26  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[0];
  assign \$28  = \$27  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[6];
  assign \$29  = \$28  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[9];
  assign \$30  = \$29  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[10];
  assign \$31  = \$30  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[12];
  assign \$32  = \$31  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[16];
  assign \$33  = \$32  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[24];
  assign \$34  = \$33  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[25];
  assign \$35  = \$34  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[26];
  assign \$36  = \$35  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[28];
  assign \$37  = \$36  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[29];
  assign \$38  = \$37  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[30];
  assign \$39  = \$38  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[31];
  assign \$40  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$42  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$43  = \$41  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$42 [1];
  assign \$44  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$45  = \$43  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$44 [6];
  assign \$46  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$47  = \$45  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$46 [7];
  assign \$48  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$49  = \$47  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$48 [9];
  assign \$50  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$51  = \$49  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$50 [11];
  assign \$52  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$53  = \$51  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$52 [12];
  assign \$54  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$55  = \$53  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$54 [13];
  assign \$56  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$57  = \$55  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$56 [16];
  assign \$58  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$59  = \$57  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$58 [17];
  assign \$60  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$61  = \$59  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$60 [24];
  assign \$62  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$63  = \$61  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$62 [27];
  assign \$64  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$65  = \$63  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$64 [28];
  assign \$66  = \$65  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[0];
  assign \$67  = \$66  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[1];
  assign \$68  = \$67  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[6];
  assign \$69  = \$68  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[7];
  assign \$70  = \$69  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[9];
  assign \$71  = \$70  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[11];
  assign \$72  = \$71  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[12];
  assign \$73  = \$72  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[13];
  assign \$74  = \$73  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[16];
  assign \$75  = \$74  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[17];
  assign \$76  = \$75  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[24];
  assign \$77  = \$76  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[27];
  assign \$78  = \$77  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[28];
  assign \$79  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$81  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$82  = \$80  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$81 [1];
  assign \$83  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$84  = \$82  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$83 [2];
  assign \$85  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$86  = \$84  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$85 [6];
  assign \$87  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$88  = \$86  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$87 [7];
  assign \$89  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$90  = \$88  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$89 [8];
  assign \$91  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$92  = \$90  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$91 [9];
  assign \$93  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$94  = \$92  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$93 [13];
  assign \$95  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$96  = \$94  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$95 [14];
  assign \$97  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$98  = \$96  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$97 [16];
  assign \$99  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$100  = \$98  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$99 [17];
  assign \$101  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$102  = \$100  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$101 [18];
  assign \$103  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$104  = \$102  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$103 [24];
  assign \$105  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$106  = \$104  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$105 [26];
  assign \$107  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$108  = \$106  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$107 [30];
  assign \$109  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$110  = \$108  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$109 [31];
  assign \$111  = \$110  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[0];
  assign \$112  = \$111  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[1];
  assign \$113  = \$112  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[2];
  assign \$114  = \$113  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[6];
  assign \$115  = \$114  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[7];
  assign \$116  = \$115  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[8];
  assign \$117  = \$116  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[9];
  assign \$118  = \$117  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[13];
  assign \$119  = \$118  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[14];
  assign \$120  = \$119  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[16];
  assign \$121  = \$120  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[17];
  assign \$122  = \$121  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[18];
  assign \$123  = \$122  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[24];
  assign \$124  = \$123  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[26];
  assign \$125  = \$124  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[30];
  assign \$126  = \$125  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[31];
  assign \$127  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$129  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$130  = \$128  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$129 [2];
  assign \$131  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$132  = \$130  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$131 [3];
  assign \$133  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$134  = \$132  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$133 [7];
  assign \$135  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$136  = \$134  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$135 [8];
  assign \$137  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$138  = \$136  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$137 [9];
  assign \$139  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$140  = \$138  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$139 [10];
  assign \$141  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$142  = \$140  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$141 [14];
  assign \$143  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$144  = \$142  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$143 [15];
  assign \$145  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$146  = \$144  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$145 [17];
  assign \$147  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$148  = \$146  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$147 [18];
  assign \$149  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$150  = \$148  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$149 [19];
  assign \$151  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$152  = \$150  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$151 [25];
  assign \$153  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$154  = \$152  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$153 [27];
  assign \$155  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$156  = \$154  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$155 [31];
  assign \$157  = \$156  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[1];
  assign \$158  = \$157  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[2];
  assign \$159  = \$158  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[3];
  assign \$160  = \$159  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[7];
  assign \$161  = \$160  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[8];
  assign \$162  = \$161  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[9];
  assign \$163  = \$162  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[10];
  assign \$164  = \$163  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[14];
  assign \$165  = \$164  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[15];
  assign \$166  = \$165  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[17];
  assign \$167  = \$166  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[18];
  assign \$168  = \$167  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[19];
  assign \$169  = \$168  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[25];
  assign \$170  = \$169  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[27];
  assign \$171  = \$170  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[31];
  assign \$172  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$174  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$175  = \$173  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$174 [2];
  assign \$176  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$177  = \$175  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$176 [3];
  assign \$178  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$179  = \$177  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$178 [4];
  assign \$180  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$181  = \$179  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$180 [6];
  assign \$182  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$183  = \$181  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$182 [8];
  assign \$184  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$185  = \$183  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$184 [11];
  assign \$186  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$187  = \$185  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$186 [12];
  assign \$188  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$189  = \$187  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$188 [15];
  assign \$190  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$191  = \$189  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$190 [18];
  assign \$192  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$193  = \$191  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$192 [19];
  assign \$194  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$195  = \$193  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$194 [20];
  assign \$196  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$197  = \$195  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$196 [24];
  assign \$198  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$199  = \$197  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$198 [25];
  assign \$200  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$201  = \$199  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$200 [29];
  assign \$202  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$203  = \$201  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$202 [30];
  assign \$204  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$205  = \$203  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$204 [31];
  assign \$206  = \$205  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[0];
  assign \$207  = \$206  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[2];
  assign \$208  = \$207  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[3];
  assign \$209  = \$208  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[4];
  assign \$210  = \$209  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[6];
  assign \$211  = \$210  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[8];
  assign \$212  = \$211  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[11];
  assign \$213  = \$212  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[12];
  assign \$214  = \$213  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[15];
  assign \$215  = \$214  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[18];
  assign \$216  = \$215  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[19];
  assign \$217  = \$216  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[20];
  assign \$218  = \$217  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[24];
  assign \$219  = \$218  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[25];
  assign \$220  = \$219  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[29];
  assign \$221  = \$220  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[30];
  assign \$222  = \$221  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[31];
  assign \$223  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$225  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$226  = \$224  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$225 [1];
  assign \$227  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$228  = \$226  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$227 [3];
  assign \$229  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$230  = \$228  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$229 [4];
  assign \$231  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$232  = \$230  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$231 [5];
  assign \$233  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$234  = \$232  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$233 [6];
  assign \$235  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$236  = \$234  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$235 [7];
  assign \$237  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$238  = \$236  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$237 [10];
  assign \$239  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$240  = \$238  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$239 [13];
  assign \$241  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$242  = \$240  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$241 [19];
  assign \$243  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$244  = \$242  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$243 [20];
  assign \$245  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$246  = \$244  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$245 [21];
  assign \$247  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$248  = \$246  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$247 [24];
  assign \$249  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$250  = \$248  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$249 [28];
  assign \$251  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$252  = \$250  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$251 [29];
  assign \$253  = \$252  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[0];
  assign \$254  = \$253  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[1];
  assign \$255  = \$254  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[3];
  assign \$256  = \$255  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[4];
  assign \$257  = \$256  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[5];
  assign \$258  = \$257  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[6];
  assign \$259  = \$258  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[7];
  assign \$260  = \$259  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[10];
  assign \$261  = \$260  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[13];
  assign \$262  = \$261  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[19];
  assign \$263  = \$262  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[20];
  assign \$264  = \$263  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[21];
  assign \$265  = \$264  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[24];
  assign \$266  = \$265  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[28];
  assign \$267  = \$266  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[29];
  assign \$268  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$270  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$271  = \$269  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$270 [2];
  assign \$272  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$273  = \$271  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$272 [4];
  assign \$274  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$275  = \$273  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$274 [5];
  assign \$276  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$277  = \$275  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$276 [6];
  assign \$278  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$279  = \$277  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$278 [7];
  assign \$280  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$281  = \$279  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$280 [8];
  assign \$282  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$283  = \$281  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$282 [11];
  assign \$284  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$285  = \$283  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$284 [14];
  assign \$286  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$287  = \$285  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$286 [20];
  assign \$288  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$289  = \$287  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$288 [21];
  assign \$290  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$291  = \$289  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$290 [22];
  assign \$292  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$293  = \$291  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$292 [25];
  assign \$294  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$295  = \$293  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$294 [29];
  assign \$296  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$297  = \$295  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$296 [30];
  assign \$298  = \$297  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[1];
  assign \$299  = \$298  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[2];
  assign \$300  = \$299  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[4];
  assign \$301  = \$300  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[5];
  assign \$302  = \$301  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[6];
  assign \$303  = \$302  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[7];
  assign \$304  = \$303  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[8];
  assign \$305  = \$304  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[11];
  assign \$306  = \$305  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[14];
  assign \$307  = \$306  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[20];
  assign \$308  = \$307  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[21];
  assign \$309  = \$308  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[22];
  assign \$310  = \$309  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[25];
  assign \$311  = \$310  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[29];
  assign \$312  = \$311  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[30];
  assign \$313  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$315  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$316  = \$314  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$315 [2];
  assign \$317  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$318  = \$316  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$317 [3];
  assign \$319  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$320  = \$318  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$319 [5];
  assign \$321  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$322  = \$320  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$321 [7];
  assign \$323  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$324  = \$322  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$323 [8];
  assign \$325  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$326  = \$324  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$325 [10];
  assign \$327  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$328  = \$326  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$327 [15];
  assign \$329  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$330  = \$328  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$329 [16];
  assign \$331  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$332  = \$330  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$331 [21];
  assign \$333  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$334  = \$332  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$333 [22];
  assign \$335  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$336  = \$334  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$335 [23];
  assign \$337  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$338  = \$336  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$337 [24];
  assign \$339  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$340  = \$338  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$339 [25];
  assign \$341  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$342  = \$340  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$341 [28];
  assign \$343  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$344  = \$342  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$343 [29];
  assign \$345  = \$344  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[0];
  assign \$346  = \$345  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[2];
  assign \$347  = \$346  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[3];
  assign \$348  = \$347  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[5];
  assign \$349  = \$348  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[7];
  assign \$350  = \$349  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[8];
  assign \$351  = \$350  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[10];
  assign \$352  = \$351  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[15];
  assign \$353  = \$352  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[16];
  assign \$354  = \$353  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[21];
  assign \$355  = \$354  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[22];
  assign \$356  = \$355  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[23];
  assign \$357  = \$356  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[24];
  assign \$358  = \$357  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[25];
  assign \$359  = \$358  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[28];
  assign \$360  = \$359  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[29];
  assign \$361  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$363  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$364  = \$362  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$363 [1];
  assign \$365  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$366  = \$364  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$365 [3];
  assign \$367  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$368  = \$366  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$367 [4];
  assign \$369  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$370  = \$368  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$369 [8];
  assign \$371  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$372  = \$370  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$371 [10];
  assign \$373  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$374  = \$372  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$373 [11];
  assign \$375  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$376  = \$374  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$375 [12];
  assign \$377  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$378  = \$376  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$377 [17];
  assign \$379  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$380  = \$378  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$379 [22];
  assign \$381  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$382  = \$380  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$381 [23];
  assign \$383  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$384  = \$382  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$383 [28];
  assign \$385  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$386  = \$384  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$385 [31];
  assign \$387  = \$386  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[0];
  assign \$388  = \$387  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[1];
  assign \$389  = \$388  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[3];
  assign \$390  = \$389  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[4];
  assign \$391  = \$390  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[8];
  assign \$392  = \$391  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[10];
  assign \$393  = \$392  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[11];
  assign \$394  = \$393  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[12];
  assign \$395  = \$394  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[17];
  assign \$396  = \$395  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[22];
  assign \$397  = \$396  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[23];
  assign \$398  = \$397  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[28];
  assign \$399  = \$398  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[31];
  assign \$400  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$402  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$403  = \$401  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$402 [2];
  assign \$404  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$405  = \$403  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$404 [4];
  assign \$406  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$407  = \$405  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$406 [5];
  assign \$408  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$409  = \$407  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$408 [9];
  assign \$410  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$411  = \$409  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$410 [11];
  assign \$412  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$413  = \$411  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$412 [12];
  assign \$414  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$415  = \$413  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$414 [13];
  assign \$416  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$417  = \$415  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$416 [18];
  assign \$418  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$419  = \$417  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$418 [23];
  assign \$420  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$421  = \$419  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$420 [24];
  assign \$422  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$423  = \$421  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$422 [29];
  assign \$424  = \$423  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[1];
  assign \$425  = \$424  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[2];
  assign \$426  = \$425  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[4];
  assign \$427  = \$426  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[5];
  assign \$428  = \$427  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[9];
  assign \$429  = \$428  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[11];
  assign \$430  = \$429  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[12];
  assign \$431  = \$430  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[13];
  assign \$432  = \$431  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[18];
  assign \$433  = \$432  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[23];
  assign \$434  = \$433  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[24];
  assign \$435  = \$434  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[29];
  assign \$436  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$438  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$439  = \$437  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$438 [2];
  assign \$440  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$441  = \$439  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$440 [3];
  assign \$442  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$443  = \$441  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$442 [5];
  assign \$444  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$445  = \$443  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$444 [9];
  assign \$446  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$447  = \$445  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$446 [13];
  assign \$448  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$449  = \$447  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$448 [14];
  assign \$450  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$451  = \$449  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$450 [16];
  assign \$452  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$453  = \$451  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$452 [19];
  assign \$454  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$455  = \$453  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$454 [26];
  assign \$456  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$457  = \$455  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$456 [28];
  assign \$458  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$459  = \$457  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$458 [29];
  assign \$460  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$461  = \$459  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$460 [31];
  assign \$462  = \$461  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[0];
  assign \$463  = \$462  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[2];
  assign \$464  = \$463  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[3];
  assign \$465  = \$464  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[5];
  assign \$466  = \$465  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[9];
  assign \$467  = \$466  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[13];
  assign \$468  = \$467  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[14];
  assign \$469  = \$468  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[16];
  assign \$470  = \$469  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[19];
  assign \$471  = \$470  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[26];
  assign \$472  = \$471  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[28];
  assign \$473  = \$472  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[29];
  assign \$474  = \$473  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[31];
  assign \$475  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$477  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$478  = \$476  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$477 [1];
  assign \$479  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$480  = \$478  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$479 [3];
  assign \$481  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$482  = \$480  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$481 [4];
  assign \$483  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$484  = \$482  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$483 [9];
  assign \$485  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$486  = \$484  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$485 [12];
  assign \$487  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$488  = \$486  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$487 [14];
  assign \$489  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$490  = \$488  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$489 [15];
  assign \$491  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$492  = \$490  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$491 [16];
  assign \$493  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$494  = \$492  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$493 [17];
  assign \$495  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$496  = \$494  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$495 [20];
  assign \$497  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$498  = \$496  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$497 [24];
  assign \$499  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$500  = \$498  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$499 [25];
  assign \$501  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$502  = \$500  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$501 [26];
  assign \$503  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$504  = \$502  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$503 [27];
  assign \$505  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$506  = \$504  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$505 [28];
  assign \$507  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$508  = \$506  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$507 [31];
  assign \$509  = \$508  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[0];
  assign \$510  = \$509  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[1];
  assign \$511  = \$510  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[3];
  assign \$512  = \$511  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[4];
  assign \$513  = \$512  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[9];
  assign \$514  = \$513  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[12];
  assign \$515  = \$514  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[14];
  assign \$516  = \$515  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[15];
  assign \$517  = \$516  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[16];
  assign \$518  = \$517  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[17];
  assign \$519  = \$518  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[20];
  assign \$520  = \$519  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[24];
  assign \$521  = \$520  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[25];
  assign \$522  = \$521  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[26];
  assign \$523  = \$522  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[27];
  assign \$524  = \$523  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[28];
  assign \$525  = \$524  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[31];
  assign \$526  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$528  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$529  = \$527  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$528 [1];
  assign \$530  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$531  = \$529  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$530 [2];
  assign \$532  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$533  = \$531  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$532 [4];
  assign \$534  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$535  = \$533  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$534 [5];
  assign \$536  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$537  = \$535  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$536 [6];
  assign \$538  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$539  = \$537  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$538 [9];
  assign \$540  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$541  = \$539  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$540 [12];
  assign \$542  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$543  = \$541  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$542 [13];
  assign \$544  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$545  = \$543  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$544 [15];
  assign \$546  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$547  = \$545  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$546 [17];
  assign \$548  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$549  = \$547  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$548 [18];
  assign \$550  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$551  = \$549  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$550 [21];
  assign \$552  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$553  = \$551  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$552 [24];
  assign \$554  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$555  = \$553  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$554 [27];
  assign \$556  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$557  = \$555  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$556 [30];
  assign \$558  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$559  = \$557  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$558 [31];
  assign \$560  = \$559  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[0];
  assign \$561  = \$560  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[1];
  assign \$562  = \$561  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[2];
  assign \$563  = \$562  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[4];
  assign \$564  = \$563  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[5];
  assign \$565  = \$564  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[6];
  assign \$566  = \$565  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[9];
  assign \$567  = \$566  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[12];
  assign \$568  = \$567  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[13];
  assign \$569  = \$568  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[15];
  assign \$570  = \$569  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[17];
  assign \$571  = \$570  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[18];
  assign \$572  = \$571  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[21];
  assign \$573  = \$572  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[24];
  assign \$574  = \$573  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[27];
  assign \$575  = \$574  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[30];
  assign \$576  = \$575  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[31];
  assign \$577  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$579  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$580  = \$578  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$579 [2];
  assign \$581  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$582  = \$580  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$581 [3];
  assign \$583  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$584  = \$582  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$583 [5];
  assign \$585  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$586  = \$584  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$585 [6];
  assign \$587  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$588  = \$586  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$587 [7];
  assign \$589  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$590  = \$588  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$589 [10];
  assign \$591  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$592  = \$590  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$591 [13];
  assign \$593  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$594  = \$592  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$593 [14];
  assign \$595  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$596  = \$594  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$595 [16];
  assign \$597  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$598  = \$596  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$597 [18];
  assign \$599  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$600  = \$598  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$599 [19];
  assign \$601  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$602  = \$600  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$601 [22];
  assign \$603  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$604  = \$602  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$603 [25];
  assign \$605  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$606  = \$604  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$605 [28];
  assign \$607  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$608  = \$606  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$607 [31];
  assign \$609  = \$608  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[1];
  assign \$610  = \$609  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[2];
  assign \$611  = \$610  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[3];
  assign \$612  = \$611  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[5];
  assign \$613  = \$612  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[6];
  assign \$614  = \$613  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[7];
  assign \$615  = \$614  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[10];
  assign \$616  = \$615  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[13];
  assign \$617  = \$616  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[14];
  assign \$618  = \$617  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[16];
  assign \$619  = \$618  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[18];
  assign \$620  = \$619  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[19];
  assign \$621  = \$620  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[22];
  assign \$622  = \$621  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[25];
  assign \$623  = \$622  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[28];
  assign \$624  = \$623  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[31];
  assign \$625  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$627  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$628  = \$626  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$627 [3];
  assign \$629  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$630  = \$628  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$629 [4];
  assign \$631  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$632  = \$630  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$631 [6];
  assign \$633  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$634  = \$632  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$633 [7];
  assign \$635  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$636  = \$634  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$635 [8];
  assign \$637  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$638  = \$636  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$637 [11];
  assign \$639  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$640  = \$638  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$639 [14];
  assign \$641  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$642  = \$640  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$641 [15];
  assign \$643  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$644  = \$642  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$643 [17];
  assign \$645  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$646  = \$644  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$645 [19];
  assign \$647  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$648  = \$646  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$647 [20];
  assign \$649  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$650  = \$648  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$649 [23];
  assign \$651  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$652  = \$650  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$651 [26];
  assign \$653  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$654  = \$652  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$653 [29];
  assign \$655  = \$654  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[2];
  assign \$656  = \$655  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[3];
  assign \$657  = \$656  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[4];
  assign \$658  = \$657  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[6];
  assign \$659  = \$658  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[7];
  assign \$660  = \$659  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[8];
  assign \$661  = \$660  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[11];
  assign \$662  = \$661  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[14];
  assign \$663  = \$662  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[15];
  assign \$664  = \$663  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[17];
  assign \$665  = \$664  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[19];
  assign \$666  = \$665  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[20];
  assign \$667  = \$666  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[23];
  assign \$668  = \$667  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[26];
  assign \$669  = \$668  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[29];
  assign \$670  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$672  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$673  = \$671  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$672 [4];
  assign \$674  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$675  = \$673  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$674 [5];
  assign \$676  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$677  = \$675  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$676 [7];
  assign \$678  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$679  = \$677  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$678 [8];
  assign \$680  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$681  = \$679  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$680 [9];
  assign \$682  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$683  = \$681  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$682 [12];
  assign \$684  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$685  = \$683  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$684 [15];
  assign \$686  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$687  = \$685  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$686 [16];
  assign \$688  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$689  = \$687  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$688 [18];
  assign \$690  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$691  = \$689  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$690 [20];
  assign \$692  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$693  = \$691  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$692 [21];
  assign \$694  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$695  = \$693  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$694 [24];
  assign \$696  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$697  = \$695  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$696 [27];
  assign \$698  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$699  = \$697  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$698 [30];
  assign \$700  = \$699  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[3];
  assign \$701  = \$700  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[4];
  assign \$702  = \$701  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[5];
  assign \$703  = \$702  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[7];
  assign \$704  = \$703  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[8];
  assign \$705  = \$704  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[9];
  assign \$706  = \$705  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[12];
  assign \$707  = \$706  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[15];
  assign \$708  = \$707  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[16];
  assign \$709  = \$708  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[18];
  assign \$710  = \$709  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[20];
  assign \$711  = \$710  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[21];
  assign \$712  = \$711  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[24];
  assign \$713  = \$712  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[27];
  assign \$714  = \$713  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[30];
  assign \$715  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$717  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$718  = \$716  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$717 [4];
  assign \$719  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$720  = \$718  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$719 [5];
  assign \$721  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$722  = \$720  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$721 [8];
  assign \$723  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$724  = \$722  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$723 [12];
  assign \$725  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$726  = \$724  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$725 [13];
  assign \$727  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$728  = \$726  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$727 [17];
  assign \$729  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$730  = \$728  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$729 [19];
  assign \$731  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$732  = \$730  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$731 [21];
  assign \$733  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$734  = \$732  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$733 [22];
  assign \$735  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$736  = \$734  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$735 [24];
  assign \$737  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$738  = \$736  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$737 [26];
  assign \$739  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$740  = \$738  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$739 [29];
  assign \$741  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$742  = \$740  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$741 [30];
  assign \$743  = \$742  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[0];
  assign \$744  = \$743  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[4];
  assign \$745  = \$744  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[5];
  assign \$746  = \$745  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[8];
  assign \$747  = \$746  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[12];
  assign \$748  = \$747  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[13];
  assign \$749  = \$748  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[17];
  assign \$750  = \$749  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[19];
  assign \$751  = \$750  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[21];
  assign \$752  = \$751  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[22];
  assign \$753  = \$752  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[24];
  assign \$754  = \$753  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[26];
  assign \$755  = \$754  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[29];
  assign \$756  = \$755  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[30];
  assign \$757  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$759  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$760  = \$758  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$759 [5];
  assign \$761  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$762  = \$760  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$761 [6];
  assign \$763  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$764  = \$762  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$763 [9];
  assign \$765  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$766  = \$764  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$765 [13];
  assign \$767  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$768  = \$766  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$767 [14];
  assign \$769  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$770  = \$768  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$769 [18];
  assign \$771  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$772  = \$770  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$771 [20];
  assign \$773  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$774  = \$772  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$773 [22];
  assign \$775  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$776  = \$774  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$775 [23];
  assign \$777  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$778  = \$776  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$777 [25];
  assign \$779  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$780  = \$778  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$779 [27];
  assign \$781  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$782  = \$780  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$781 [30];
  assign \$783  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$784  = \$782  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$783 [31];
  assign \$785  = \$784  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[1];
  assign \$786  = \$785  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[5];
  assign \$787  = \$786  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[6];
  assign \$788  = \$787  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[9];
  assign \$789  = \$788  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[13];
  assign \$790  = \$789  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[14];
  assign \$791  = \$790  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[18];
  assign \$792  = \$791  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[20];
  assign \$793  = \$792  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[22];
  assign \$794  = \$793  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[23];
  assign \$795  = \$794  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[25];
  assign \$796  = \$795  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[27];
  assign \$797  = \$796  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[30];
  assign \$798  = \$797  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[31];
  assign \$799  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$801  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$802  = \$800  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$801 [6];
  assign \$803  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$804  = \$802  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$803 [7];
  assign \$805  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$806  = \$804  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$805 [10];
  assign \$807  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$808  = \$806  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$807 [14];
  assign \$809  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$810  = \$808  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$809 [15];
  assign \$811  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$812  = \$810  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$811 [19];
  assign \$813  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$814  = \$812  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$813 [21];
  assign \$815  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$816  = \$814  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$815 [23];
  assign \$817  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$818  = \$816  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$817 [24];
  assign \$819  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$820  = \$818  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$819 [26];
  assign \$821  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$822  = \$820  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$821 [28];
  assign \$823  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$824  = \$822  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$823 [31];
  assign \$825  = \$824  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[2];
  assign \$826  = \$825  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[6];
  assign \$827  = \$826  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[7];
  assign \$828  = \$827  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[10];
  assign \$829  = \$828  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[14];
  assign \$830  = \$829  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[15];
  assign \$831  = \$830  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[19];
  assign \$832  = \$831  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[21];
  assign \$833  = \$832  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[23];
  assign \$834  = \$833  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[24];
  assign \$835  = \$834  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[26];
  assign \$836  = \$835  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[28];
  assign \$837  = \$836  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[31];
  assign \$838  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$840  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$841  = \$839  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$840 [7];
  assign \$842  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$843  = \$841  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$842 [8];
  assign \$844  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$845  = \$843  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$844 [11];
  assign \$846  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$847  = \$845  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$846 [15];
  assign \$848  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$849  = \$847  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$848 [16];
  assign \$850  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$851  = \$849  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$850 [20];
  assign \$852  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$853  = \$851  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$852 [22];
  assign \$854  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$855  = \$853  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$854 [24];
  assign \$856  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$857  = \$855  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$856 [25];
  assign \$858  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$859  = \$857  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$858 [27];
  assign \$860  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$861  = \$859  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$860 [29];
  assign \$862  = \$861  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[3];
  assign \$863  = \$862  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[7];
  assign \$864  = \$863  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[8];
  assign \$865  = \$864  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[11];
  assign \$866  = \$865  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[15];
  assign \$867  = \$866  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[16];
  assign \$868  = \$867  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[20];
  assign \$869  = \$868  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[22];
  assign \$870  = \$869  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[24];
  assign \$871  = \$870  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[25];
  assign \$872  = \$871  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[27];
  assign \$873  = \$872  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[29];
  assign \$874  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$876  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$877  = \$875  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$876 [8];
  assign \$878  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$879  = \$877  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$878 [9];
  assign \$880  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$881  = \$879  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$880 [12];
  assign \$882  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$883  = \$881  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$882 [16];
  assign \$884  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$885  = \$883  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$884 [17];
  assign \$886  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$887  = \$885  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$886 [21];
  assign \$888  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$889  = \$887  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$888 [23];
  assign \$890  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$891  = \$889  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$890 [25];
  assign \$892  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$893  = \$891  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$892 [26];
  assign \$894  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$895  = \$893  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$894 [28];
  assign \$896  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$897  = \$895  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$896 [30];
  assign \$898  = \$897  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[4];
  assign \$899  = \$898  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[8];
  assign \$900  = \$899  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[9];
  assign \$901  = \$900  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[12];
  assign \$902  = \$901  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[16];
  assign \$903  = \$902  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[17];
  assign \$904  = \$903  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[21];
  assign \$905  = \$904  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[23];
  assign \$906  = \$905  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[25];
  assign \$907  = \$906  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[26];
  assign \$908  = \$907  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[28];
  assign \$909  = \$908  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[30];
  assign \$910  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$912  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$913  = \$911  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$912 [9];
  assign \$914  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$915  = \$913  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$914 [10];
  assign \$916  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$917  = \$915  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$916 [13];
  assign \$918  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$919  = \$917  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$918 [17];
  assign \$920  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$921  = \$919  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$920 [18];
  assign \$922  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$923  = \$921  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$922 [22];
  assign \$924  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$925  = \$923  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$924 [24];
  assign \$926  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$927  = \$925  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$926 [26];
  assign \$928  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$929  = \$927  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$928 [27];
  assign \$930  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$931  = \$929  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$930 [29];
  assign \$932  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$933  = \$931  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$932 [31];
  assign \$934  = \$933  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[5];
  assign \$935  = \$934  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[9];
  assign \$936  = \$935  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[10];
  assign \$937  = \$936  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[13];
  assign \$938  = \$937  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[17];
  assign \$939  = \$938  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[18];
  assign \$940  = \$939  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[22];
  assign \$941  = \$940  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[24];
  assign \$942  = \$941  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[26];
  assign \$943  = \$942  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[27];
  assign \$944  = \$943  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[29];
  assign \$945  = \$944  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[31];
  assign \$946  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$948  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$949  = \$947  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$948 [9];
  assign \$950  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$951  = \$949  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$950 [11];
  assign \$952  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$953  = \$951  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$952 [12];
  assign \$954  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$955  = \$953  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$954 [14];
  assign \$956  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$957  = \$955  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$956 [16];
  assign \$958  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$959  = \$957  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$958 [18];
  assign \$960  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$961  = \$959  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$960 [19];
  assign \$962  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$963  = \$961  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$962 [23];
  assign \$964  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$965  = \$963  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$964 [24];
  assign \$966  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$967  = \$965  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$966 [26];
  assign \$968  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$969  = \$967  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$968 [27];
  assign \$970  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$971  = \$969  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$970 [29];
  assign \$972  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$973  = \$971  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$972 [31];
  assign \$974  = \$973  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[0];
  assign \$975  = \$974  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[9];
  assign \$976  = \$975  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[11];
  assign \$977  = \$976  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[12];
  assign \$978  = \$977  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[14];
  assign \$979  = \$978  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[16];
  assign \$980  = \$979  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[18];
  assign \$981  = \$980  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[19];
  assign \$982  = \$981  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[23];
  assign \$983  = \$982  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[24];
  assign \$984  = \$983  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[26];
  assign \$985  = \$984  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[27];
  assign \$986  = \$985  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[29];
  assign \$987  = \$986  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[31];
  assign \$988  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$990  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$991  = \$989  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$990 [1];
  assign \$992  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$993  = \$991  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$992 [6];
  assign \$994  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$995  = \$993  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$994 [9];
  assign \$996  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$997  = \$995  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$996 [13];
  assign \$998  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$999  = \$997  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$998 [15];
  assign \$1000  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1001  = \$999  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1000 [16];
  assign \$1002  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1003  = \$1001  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1002 [17];
  assign \$1004  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1005  = \$1003  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1004 [19];
  assign \$1006  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1007  = \$1005  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1006 [20];
  assign \$1008  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1009  = \$1007  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1008 [26];
  assign \$1010  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1011  = \$1009  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1010 [27];
  assign \$1012  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1013  = \$1011  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1012 [29];
  assign \$1014  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1015  = \$1013  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1014 [31];
  assign \$1016  = \$1015  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[0];
  assign \$1017  = \$1016  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[1];
  assign \$1018  = \$1017  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[6];
  assign \$1019  = \$1018  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[9];
  assign \$1020  = \$1019  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[13];
  assign \$1021  = \$1020  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[15];
  assign \$1022  = \$1021  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[16];
  assign \$1023  = \$1022  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[17];
  assign \$1024  = \$1023  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[19];
  assign \$1025  = \$1024  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[20];
  assign \$1026  = \$1025  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[26];
  assign \$1027  = \$1026  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[27];
  assign \$1028  = \$1027  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[29];
  assign \$1029  = \$1028  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[31];
  assign \$1030  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1032  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1033  = \$1031  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1032 [2];
  assign \$1034  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1035  = \$1033  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1034 [7];
  assign \$1036  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1037  = \$1035  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1036 [10];
  assign \$1038  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1039  = \$1037  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1038 [14];
  assign \$1040  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1041  = \$1039  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1040 [16];
  assign \$1042  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1043  = \$1041  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1042 [17];
  assign \$1044  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1045  = \$1043  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1044 [18];
  assign \$1046  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1047  = \$1045  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1046 [20];
  assign \$1048  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1049  = \$1047  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1048 [21];
  assign \$1050  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1051  = \$1049  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1050 [27];
  assign \$1052  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1053  = \$1051  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1052 [28];
  assign \$1054  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1055  = \$1053  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1054 [30];
  assign \$1056  = \$1055  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[1];
  assign \$1057  = \$1056  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[2];
  assign \$1058  = \$1057  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[7];
  assign \$1059  = \$1058  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[10];
  assign \$1060  = \$1059  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[14];
  assign \$1061  = \$1060  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[16];
  assign \$1062  = \$1061  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[17];
  assign \$1063  = \$1062  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[18];
  assign \$1064  = \$1063  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[20];
  assign \$1065  = \$1064  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[21];
  assign \$1066  = \$1065  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[27];
  assign \$1067  = \$1066  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[28];
  assign \$1068  = \$1067  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[30];
  assign \$1069  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1071  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1072  = \$1070  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1071 [3];
  assign \$1073  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1074  = \$1072  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1073 [8];
  assign \$1075  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1076  = \$1074  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1075 [11];
  assign \$1077  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1078  = \$1076  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1077 [15];
  assign \$1079  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1080  = \$1078  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1079 [17];
  assign \$1081  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1082  = \$1080  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1081 [18];
  assign \$1083  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1084  = \$1082  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1083 [19];
  assign \$1085  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1086  = \$1084  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1085 [21];
  assign \$1087  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1088  = \$1086  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1087 [22];
  assign \$1089  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1090  = \$1088  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1089 [28];
  assign \$1091  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1092  = \$1090  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1091 [29];
  assign \$1093  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1094  = \$1092  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1093 [31];
  assign \$1095  = \$1094  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[2];
  assign \$1096  = \$1095  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[3];
  assign \$1097  = \$1096  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[8];
  assign \$1098  = \$1097  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[11];
  assign \$1099  = \$1098  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[15];
  assign \$1100  = \$1099  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[17];
  assign \$1101  = \$1100  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[18];
  assign \$1102  = \$1101  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[19];
  assign \$1103  = \$1102  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[21];
  assign \$1104  = \$1103  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[22];
  assign \$1105  = \$1104  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[28];
  assign \$1106  = \$1105  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[29];
  assign \$1107  = \$1106  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[31];
  assign \$1108  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1110  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1111  = \$1109  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1110 [3];
  assign \$1112  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1113  = \$1111  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1112 [4];
  assign \$1114  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1115  = \$1113  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1114 [6];
  assign \$1116  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1117  = \$1115  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1116 [10];
  assign \$1118  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1119  = \$1117  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1118 [18];
  assign \$1120  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1121  = \$1119  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1120 [19];
  assign \$1122  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1123  = \$1121  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1122 [20];
  assign \$1124  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1125  = \$1123  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1124 [22];
  assign \$1126  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1127  = \$1125  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1126 [23];
  assign \$1128  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1129  = \$1127  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1128 [24];
  assign \$1130  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1131  = \$1129  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1130 [25];
  assign \$1132  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1133  = \$1131  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1132 [26];
  assign \$1134  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1135  = \$1133  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1134 [28];
  assign \$1136  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1137  = \$1135  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1136 [31];
  assign \$1138  = \$1137  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[0];
  assign \$1139  = \$1138  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[3];
  assign \$1140  = \$1139  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[4];
  assign \$1141  = \$1140  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[6];
  assign \$1142  = \$1141  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[10];
  assign \$1143  = \$1142  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[18];
  assign \$1144  = \$1143  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[19];
  assign \$1145  = \$1144  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[20];
  assign \$1146  = \$1145  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[22];
  assign \$1147  = \$1146  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[23];
  assign \$1148  = \$1147  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[24];
  assign \$1149  = \$1148  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[25];
  assign \$1150  = \$1149  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[26];
  assign \$1151  = \$1150  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[28];
  assign \$1152  = \$1151  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[31];
  assign \$1153  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1155  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1156  = \$1154  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1155 [4];
  assign \$1157  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1158  = \$1156  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1157 [5];
  assign \$1159  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1160  = \$1158  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1159 [7];
  assign \$1161  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1162  = \$1160  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1161 [11];
  assign \$1163  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1164  = \$1162  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1163 [19];
  assign \$1165  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1166  = \$1164  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1165 [20];
  assign \$1167  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1168  = \$1166  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1167 [21];
  assign \$1169  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1170  = \$1168  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1169 [23];
  assign \$1171  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1172  = \$1170  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1171 [24];
  assign \$1173  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1174  = \$1172  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1173 [25];
  assign \$1175  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1176  = \$1174  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1175 [26];
  assign \$1177  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1178  = \$1176  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1177 [27];
  assign \$1179  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1180  = \$1178  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1179 [29];
  assign \$1181  = \$1180  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[1];
  assign \$1182  = \$1181  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[4];
  assign \$1183  = \$1182  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[5];
  assign \$1184  = \$1183  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[7];
  assign \$1185  = \$1184  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[11];
  assign \$1186  = \$1185  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[19];
  assign \$1187  = \$1186  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[20];
  assign \$1188  = \$1187  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[21];
  assign \$1189  = \$1188  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[23];
  assign \$1190  = \$1189  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[24];
  assign \$1191  = \$1190  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[25];
  assign \$1192  = \$1191  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[26];
  assign \$1193  = \$1192  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[27];
  assign \$1194  = \$1193  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[29];
  assign \$1195  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1197  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1198  = \$1196  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1197 [5];
  assign \$1199  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1200  = \$1198  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1199 [6];
  assign \$1201  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1202  = \$1200  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1201 [8];
  assign \$1203  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1204  = \$1202  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1203 [12];
  assign \$1205  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1206  = \$1204  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1205 [20];
  assign \$1207  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1208  = \$1206  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1207 [21];
  assign \$1209  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1210  = \$1208  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1209 [22];
  assign \$1211  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1212  = \$1210  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1211 [24];
  assign \$1213  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1214  = \$1212  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1213 [25];
  assign \$1215  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1216  = \$1214  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1215 [26];
  assign \$1217  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1218  = \$1216  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1217 [27];
  assign \$1219  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1220  = \$1218  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1219 [28];
  assign \$1221  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1222  = \$1220  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1221 [30];
  assign \$1223  = \$1222  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[2];
  assign \$1224  = \$1223  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[5];
  assign \$1225  = \$1224  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[6];
  assign \$1226  = \$1225  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[8];
  assign \$1227  = \$1226  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[12];
  assign \$1228  = \$1227  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[20];
  assign \$1229  = \$1228  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[21];
  assign \$1230  = \$1229  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[22];
  assign \$1231  = \$1230  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[24];
  assign \$1232  = \$1231  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[25];
  assign \$1233  = \$1232  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[26];
  assign \$1234  = \$1233  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[27];
  assign \$1235  = \$1234  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[28];
  assign \$1236  = \$1235  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[30];
  assign \$1237  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1239  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1240  = \$1238  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1239 [6];
  assign \$1241  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1242  = \$1240  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1241 [7];
  assign \$1243  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1244  = \$1242  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1243 [9];
  assign \$1245  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1246  = \$1244  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1245 [13];
  assign \$1247  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1248  = \$1246  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1247 [21];
  assign \$1249  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1250  = \$1248  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1249 [22];
  assign \$1251  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1252  = \$1250  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1251 [23];
  assign \$1253  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1254  = \$1252  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1253 [25];
  assign \$1255  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1256  = \$1254  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1255 [26];
  assign \$1257  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1258  = \$1256  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1257 [27];
  assign \$1259  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1260  = \$1258  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1259 [28];
  assign \$1261  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1262  = \$1260  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1261 [29];
  assign \$1263  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1264  = \$1262  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1263 [31];
  assign \$1265  = \$1264  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[3];
  assign \$1266  = \$1265  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[6];
  assign \$1267  = \$1266  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[7];
  assign \$1268  = \$1267  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[9];
  assign \$1269  = \$1268  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[13];
  assign \$1270  = \$1269  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[21];
  assign \$1271  = \$1270  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[22];
  assign \$1272  = \$1271  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[23];
  assign \$1273  = \$1272  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[25];
  assign \$1274  = \$1273  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[26];
  assign \$1275  = \$1274  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[27];
  assign \$1276  = \$1275  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[28];
  assign \$1277  = \$1276  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[29];
  assign \$1278  = \$1277  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[31];
  assign \$1279  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1281  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1282  = \$1280  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1281 [7];
  assign \$1283  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1284  = \$1282  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1283 [8];
  assign \$1285  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1286  = \$1284  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1285 [10];
  assign \$1287  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1288  = \$1286  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1287 [14];
  assign \$1289  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1290  = \$1288  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1289 [22];
  assign \$1291  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1292  = \$1290  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1291 [23];
  assign \$1293  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1294  = \$1292  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1293 [24];
  assign \$1295  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1296  = \$1294  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1295 [26];
  assign \$1297  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1298  = \$1296  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1297 [27];
  assign \$1299  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1300  = \$1298  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1299 [28];
  assign \$1301  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1302  = \$1300  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1301 [29];
  assign \$1303  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1304  = \$1302  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1303 [30];
  assign \$1305  = \$1304  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[4];
  assign \$1306  = \$1305  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[7];
  assign \$1307  = \$1306  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[8];
  assign \$1308  = \$1307  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[10];
  assign \$1309  = \$1308  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[14];
  assign \$1310  = \$1309  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[22];
  assign \$1311  = \$1310  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[23];
  assign \$1312  = \$1311  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[24];
  assign \$1313  = \$1312  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[26];
  assign \$1314  = \$1313  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[27];
  assign \$1315  = \$1314  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[28];
  assign \$1316  = \$1315  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[29];
  assign \$1317  = \$1316  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[30];
  assign \$1318  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1320  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1321  = \$1319  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1320 [8];
  assign \$1322  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1323  = \$1321  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1322 [9];
  assign \$1324  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1325  = \$1323  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1324 [11];
  assign \$1326  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1327  = \$1325  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1326 [15];
  assign \$1328  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1329  = \$1327  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1328 [23];
  assign \$1330  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1331  = \$1329  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1330 [24];
  assign \$1332  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1333  = \$1331  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1332 [25];
  assign \$1334  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1335  = \$1333  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1334 [27];
  assign \$1336  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1337  = \$1335  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1336 [28];
  assign \$1338  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1339  = \$1337  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1338 [29];
  assign \$1340  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1341  = \$1339  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1340 [30];
  assign \$1342  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1343  = \$1341  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1342 [31];
  assign \$1344  = \$1343  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[5];
  assign \$1345  = \$1344  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[8];
  assign \$1346  = \$1345  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[9];
  assign \$1347  = \$1346  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[11];
  assign \$1348  = \$1347  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[15];
  assign \$1349  = \$1348  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[23];
  assign \$1350  = \$1349  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[24];
  assign \$1351  = \$1350  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[25];
  assign \$1352  = \$1351  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[27];
  assign \$1353  = \$1352  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[28];
  assign \$1354  = \$1353  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[29];
  assign \$1355  = \$1354  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[30];
  assign \$1356  = \$1355  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[31];
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:322" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) crc_reg <= 32'd4294967295;
    else crc_reg <= \$1357 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$4 ) begin end
    \$1357  = crc_reg;
    if (valid) begin
      \$1357 [0] = \$39 ;
      \$1357 [1] = \$78 ;
      \$1357 [2] = \$126 ;
      \$1357 [3] = \$171 ;
      \$1357 [4] = \$222 ;
      \$1357 [5] = \$267 ;
      \$1357 [6] = \$312 ;
      \$1357 [7] = \$360 ;
      \$1357 [8] = \$399 ;
      \$1357 [9] = \$435 ;
      \$1357 [10] = \$474 ;
      \$1357 [11] = \$525 ;
      \$1357 [12] = \$576 ;
      \$1357 [13] = \$624 ;
      \$1357 [14] = \$669 ;
      \$1357 [15] = \$714 ;
      \$1357 [16] = \$756 ;
      \$1357 [17] = \$798 ;
      \$1357 [18] = \$837 ;
      \$1357 [19] = \$873 ;
      \$1357 [20] = \$909 ;
      \$1357 [21] = \$945 ;
      \$1357 [22] = \$987 ;
      \$1357 [23] = \$1029 ;
      \$1357 [24] = \$1068 ;
      \$1357 [25] = \$1107 ;
      \$1357 [26] = \$1152 ;
      \$1357 [27] = \$1194 ;
      \$1357 [28] = \$1236 ;
      \$1357 [29] = \$1278 ;
      \$1357 [30] = \$1317 ;
      \$1357 [31] = \$1356 ;
    end else if (start) begin
      \$1357  = 32'd4294967295;
    end
  end
  assign data = data_in;
  assign crc = crc_reg;
  assign \$2  = \$1 [0];
  assign \$41  = \$40 [0];
  assign \$80  = \$79 [0];
  assign \$128  = \$127 [1];
  assign \$173  = \$172 [0];
  assign \$224  = \$223 [0];
  assign \$269  = \$268 [1];
  assign \$314  = \$313 [0];
  assign \$362  = \$361 [0];
  assign \$401  = \$400 [1];
  assign \$437  = \$436 [0];
  assign \$476  = \$475 [0];
  assign \$527  = \$526 [0];
  assign \$578  = \$577 [1];
  assign \$626  = \$625 [2];
  assign \$671  = \$670 [3];
  assign \$716  = \$715 [0];
  assign \$758  = \$757 [1];
  assign \$800  = \$799 [2];
  assign \$839  = \$838 [3];
  assign \$875  = \$874 [4];
  assign \$911  = \$910 [5];
  assign \$947  = \$946 [0];
  assign \$989  = \$988 [0];
  assign \$1031  = \$1030 [1];
  assign \$1070  = \$1069 [2];
  assign \$1109  = \$1108 [0];
  assign \$1154  = \$1153 [1];
  assign \$1196  = \$1195 [2];
  assign \$1238  = \$1237 [3];
  assign \$1280  = \$1279 [4];
  assign \$1319  = \$1318 [5];
endmodule

(* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:320" *)
(* generator = "Amaranth" *)
module \Controller.em_serial_controller.drive_serial_port.crc32_tx (sync_100_rst, crc, valid, start, data_in, sync_100_clk);
  reg \$auto$verilog_backend.cc:2352:dump_module$5  = 0;
  wire [31:0] \$1 ;
  wire \$10 ;
  wire \$100 ;
  wire [31:0] \$1000 ;
  wire \$1001 ;
  wire [31:0] \$1002 ;
  wire \$1003 ;
  wire [31:0] \$1004 ;
  wire \$1005 ;
  wire [31:0] \$1006 ;
  wire \$1007 ;
  wire [31:0] \$1008 ;
  wire \$1009 ;
  wire [31:0] \$101 ;
  wire [31:0] \$1010 ;
  wire \$1011 ;
  wire [31:0] \$1012 ;
  wire \$1013 ;
  wire [31:0] \$1014 ;
  wire \$1015 ;
  wire \$1016 ;
  wire \$1017 ;
  wire \$1018 ;
  wire \$1019 ;
  wire \$102 ;
  wire \$1020 ;
  wire \$1021 ;
  wire \$1022 ;
  wire \$1023 ;
  wire \$1024 ;
  wire \$1025 ;
  wire \$1026 ;
  wire \$1027 ;
  wire \$1028 ;
  wire \$1029 ;
  wire [31:0] \$103 ;
  wire [31:0] \$1030 ;
  wire \$1031 ;
  wire [31:0] \$1032 ;
  wire \$1033 ;
  wire [31:0] \$1034 ;
  wire \$1035 ;
  wire [31:0] \$1036 ;
  wire \$1037 ;
  wire [31:0] \$1038 ;
  wire \$1039 ;
  wire \$104 ;
  wire [31:0] \$1040 ;
  wire \$1041 ;
  wire [31:0] \$1042 ;
  wire \$1043 ;
  wire [31:0] \$1044 ;
  wire \$1045 ;
  wire [31:0] \$1046 ;
  wire \$1047 ;
  wire [31:0] \$1048 ;
  wire \$1049 ;
  wire [31:0] \$105 ;
  wire [31:0] \$1050 ;
  wire \$1051 ;
  wire [31:0] \$1052 ;
  wire \$1053 ;
  wire [31:0] \$1054 ;
  wire \$1055 ;
  wire \$1056 ;
  wire \$1057 ;
  wire \$1058 ;
  wire \$1059 ;
  wire \$106 ;
  wire \$1060 ;
  wire \$1061 ;
  wire \$1062 ;
  wire \$1063 ;
  wire \$1064 ;
  wire \$1065 ;
  wire \$1066 ;
  wire \$1067 ;
  wire \$1068 ;
  wire [31:0] \$1069 ;
  wire [31:0] \$107 ;
  wire \$1070 ;
  wire [31:0] \$1071 ;
  wire \$1072 ;
  wire [31:0] \$1073 ;
  wire \$1074 ;
  wire [31:0] \$1075 ;
  wire \$1076 ;
  wire [31:0] \$1077 ;
  wire \$1078 ;
  wire [31:0] \$1079 ;
  wire \$108 ;
  wire \$1080 ;
  wire [31:0] \$1081 ;
  wire \$1082 ;
  wire [31:0] \$1083 ;
  wire \$1084 ;
  wire [31:0] \$1085 ;
  wire \$1086 ;
  wire [31:0] \$1087 ;
  wire \$1088 ;
  wire [31:0] \$1089 ;
  wire [31:0] \$109 ;
  wire \$1090 ;
  wire [31:0] \$1091 ;
  wire \$1092 ;
  wire [31:0] \$1093 ;
  wire \$1094 ;
  wire \$1095 ;
  wire \$1096 ;
  wire \$1097 ;
  wire \$1098 ;
  wire \$1099 ;
  wire [31:0] \$11 ;
  wire \$110 ;
  wire \$1100 ;
  wire \$1101 ;
  wire \$1102 ;
  wire \$1103 ;
  wire \$1104 ;
  wire \$1105 ;
  wire \$1106 ;
  wire \$1107 ;
  wire [31:0] \$1108 ;
  wire \$1109 ;
  wire \$111 ;
  wire [31:0] \$1110 ;
  wire \$1111 ;
  wire [31:0] \$1112 ;
  wire \$1113 ;
  wire [31:0] \$1114 ;
  wire \$1115 ;
  wire [31:0] \$1116 ;
  wire \$1117 ;
  wire [31:0] \$1118 ;
  wire \$1119 ;
  wire \$112 ;
  wire [31:0] \$1120 ;
  wire \$1121 ;
  wire [31:0] \$1122 ;
  wire \$1123 ;
  wire [31:0] \$1124 ;
  wire \$1125 ;
  wire [31:0] \$1126 ;
  wire \$1127 ;
  wire [31:0] \$1128 ;
  wire \$1129 ;
  wire \$113 ;
  wire [31:0] \$1130 ;
  wire \$1131 ;
  wire [31:0] \$1132 ;
  wire \$1133 ;
  wire [31:0] \$1134 ;
  wire \$1135 ;
  wire [31:0] \$1136 ;
  wire \$1137 ;
  wire \$1138 ;
  wire \$1139 ;
  wire \$114 ;
  wire \$1140 ;
  wire \$1141 ;
  wire \$1142 ;
  wire \$1143 ;
  wire \$1144 ;
  wire \$1145 ;
  wire \$1146 ;
  wire \$1147 ;
  wire \$1148 ;
  wire \$1149 ;
  wire \$115 ;
  wire \$1150 ;
  wire \$1151 ;
  wire \$1152 ;
  wire [31:0] \$1153 ;
  wire \$1154 ;
  wire [31:0] \$1155 ;
  wire \$1156 ;
  wire [31:0] \$1157 ;
  wire \$1158 ;
  wire [31:0] \$1159 ;
  wire \$116 ;
  wire \$1160 ;
  wire [31:0] \$1161 ;
  wire \$1162 ;
  wire [31:0] \$1163 ;
  wire \$1164 ;
  wire [31:0] \$1165 ;
  wire \$1166 ;
  wire [31:0] \$1167 ;
  wire \$1168 ;
  wire [31:0] \$1169 ;
  wire \$117 ;
  wire \$1170 ;
  wire [31:0] \$1171 ;
  wire \$1172 ;
  wire [31:0] \$1173 ;
  wire \$1174 ;
  wire [31:0] \$1175 ;
  wire \$1176 ;
  wire [31:0] \$1177 ;
  wire \$1178 ;
  wire [31:0] \$1179 ;
  wire \$118 ;
  wire \$1180 ;
  wire \$1181 ;
  wire \$1182 ;
  wire \$1183 ;
  wire \$1184 ;
  wire \$1185 ;
  wire \$1186 ;
  wire \$1187 ;
  wire \$1188 ;
  wire \$1189 ;
  wire \$119 ;
  wire \$1190 ;
  wire \$1191 ;
  wire \$1192 ;
  wire \$1193 ;
  wire \$1194 ;
  wire [31:0] \$1195 ;
  wire \$1196 ;
  wire [31:0] \$1197 ;
  wire \$1198 ;
  wire [31:0] \$1199 ;
  wire \$12 ;
  wire \$120 ;
  wire \$1200 ;
  wire [31:0] \$1201 ;
  wire \$1202 ;
  wire [31:0] \$1203 ;
  wire \$1204 ;
  wire [31:0] \$1205 ;
  wire \$1206 ;
  wire [31:0] \$1207 ;
  wire \$1208 ;
  wire [31:0] \$1209 ;
  wire \$121 ;
  wire \$1210 ;
  wire [31:0] \$1211 ;
  wire \$1212 ;
  wire [31:0] \$1213 ;
  wire \$1214 ;
  wire [31:0] \$1215 ;
  wire \$1216 ;
  wire [31:0] \$1217 ;
  wire \$1218 ;
  wire [31:0] \$1219 ;
  wire \$122 ;
  wire \$1220 ;
  wire [31:0] \$1221 ;
  wire \$1222 ;
  wire \$1223 ;
  wire \$1224 ;
  wire \$1225 ;
  wire \$1226 ;
  wire \$1227 ;
  wire \$1228 ;
  wire \$1229 ;
  wire \$123 ;
  wire \$1230 ;
  wire \$1231 ;
  wire \$1232 ;
  wire \$1233 ;
  wire \$1234 ;
  wire \$1235 ;
  wire \$1236 ;
  wire [31:0] \$1237 ;
  wire \$1238 ;
  wire [31:0] \$1239 ;
  wire \$124 ;
  wire \$1240 ;
  wire [31:0] \$1241 ;
  wire \$1242 ;
  wire [31:0] \$1243 ;
  wire \$1244 ;
  wire [31:0] \$1245 ;
  wire \$1246 ;
  wire [31:0] \$1247 ;
  wire \$1248 ;
  wire [31:0] \$1249 ;
  wire \$125 ;
  wire \$1250 ;
  wire [31:0] \$1251 ;
  wire \$1252 ;
  wire [31:0] \$1253 ;
  wire \$1254 ;
  wire [31:0] \$1255 ;
  wire \$1256 ;
  wire [31:0] \$1257 ;
  wire \$1258 ;
  wire [31:0] \$1259 ;
  wire \$126 ;
  wire \$1260 ;
  wire [31:0] \$1261 ;
  wire \$1262 ;
  wire [31:0] \$1263 ;
  wire \$1264 ;
  wire \$1265 ;
  wire \$1266 ;
  wire \$1267 ;
  wire \$1268 ;
  wire \$1269 ;
  wire [31:0] \$127 ;
  wire \$1270 ;
  wire \$1271 ;
  wire \$1272 ;
  wire \$1273 ;
  wire \$1274 ;
  wire \$1275 ;
  wire \$1276 ;
  wire \$1277 ;
  wire \$1278 ;
  wire [31:0] \$1279 ;
  wire \$128 ;
  wire \$1280 ;
  wire [31:0] \$1281 ;
  wire \$1282 ;
  wire [31:0] \$1283 ;
  wire \$1284 ;
  wire [31:0] \$1285 ;
  wire \$1286 ;
  wire [31:0] \$1287 ;
  wire \$1288 ;
  wire [31:0] \$1289 ;
  wire [31:0] \$129 ;
  wire \$1290 ;
  wire [31:0] \$1291 ;
  wire \$1292 ;
  wire [31:0] \$1293 ;
  wire \$1294 ;
  wire [31:0] \$1295 ;
  wire \$1296 ;
  wire [31:0] \$1297 ;
  wire \$1298 ;
  wire [31:0] \$1299 ;
  wire [31:0] \$13 ;
  wire \$130 ;
  wire \$1300 ;
  wire [31:0] \$1301 ;
  wire \$1302 ;
  wire [31:0] \$1303 ;
  wire \$1304 ;
  wire \$1305 ;
  wire \$1306 ;
  wire \$1307 ;
  wire \$1308 ;
  wire \$1309 ;
  wire [31:0] \$131 ;
  wire \$1310 ;
  wire \$1311 ;
  wire \$1312 ;
  wire \$1313 ;
  wire \$1314 ;
  wire \$1315 ;
  wire \$1316 ;
  wire \$1317 ;
  wire [31:0] \$1318 ;
  wire \$1319 ;
  wire \$132 ;
  wire [31:0] \$1320 ;
  wire \$1321 ;
  wire [31:0] \$1322 ;
  wire \$1323 ;
  wire [31:0] \$1324 ;
  wire \$1325 ;
  wire [31:0] \$1326 ;
  wire \$1327 ;
  wire [31:0] \$1328 ;
  wire \$1329 ;
  wire [31:0] \$133 ;
  wire [31:0] \$1330 ;
  wire \$1331 ;
  wire [31:0] \$1332 ;
  wire \$1333 ;
  wire [31:0] \$1334 ;
  wire \$1335 ;
  wire [31:0] \$1336 ;
  wire \$1337 ;
  wire [31:0] \$1338 ;
  wire \$1339 ;
  wire \$134 ;
  wire [31:0] \$1340 ;
  wire \$1341 ;
  wire [31:0] \$1342 ;
  wire \$1343 ;
  wire \$1344 ;
  wire \$1345 ;
  wire \$1346 ;
  wire \$1347 ;
  wire \$1348 ;
  wire \$1349 ;
  wire [31:0] \$135 ;
  wire \$1350 ;
  wire \$1351 ;
  wire \$1352 ;
  wire \$1353 ;
  wire \$1354 ;
  wire \$1355 ;
  wire \$1356 ;
  reg [31:0] \$1357 ;
  wire \$136 ;
  wire [31:0] \$137 ;
  wire \$138 ;
  wire [31:0] \$139 ;
  wire \$14 ;
  wire \$140 ;
  wire [31:0] \$141 ;
  wire \$142 ;
  wire [31:0] \$143 ;
  wire \$144 ;
  wire [31:0] \$145 ;
  wire \$146 ;
  wire [31:0] \$147 ;
  wire \$148 ;
  wire [31:0] \$149 ;
  wire [31:0] \$15 ;
  wire \$150 ;
  wire [31:0] \$151 ;
  wire \$152 ;
  wire [31:0] \$153 ;
  wire \$154 ;
  wire [31:0] \$155 ;
  wire \$156 ;
  wire \$157 ;
  wire \$158 ;
  wire \$159 ;
  wire \$16 ;
  wire \$160 ;
  wire \$161 ;
  wire \$162 ;
  wire \$163 ;
  wire \$164 ;
  wire \$165 ;
  wire \$166 ;
  wire \$167 ;
  wire \$168 ;
  wire \$169 ;
  wire [31:0] \$17 ;
  wire \$170 ;
  wire \$171 ;
  wire [31:0] \$172 ;
  wire \$173 ;
  wire [31:0] \$174 ;
  wire \$175 ;
  wire [31:0] \$176 ;
  wire \$177 ;
  wire [31:0] \$178 ;
  wire \$179 ;
  wire \$18 ;
  wire [31:0] \$180 ;
  wire \$181 ;
  wire [31:0] \$182 ;
  wire \$183 ;
  wire [31:0] \$184 ;
  wire \$185 ;
  wire [31:0] \$186 ;
  wire \$187 ;
  wire [31:0] \$188 ;
  wire \$189 ;
  wire [31:0] \$19 ;
  wire [31:0] \$190 ;
  wire \$191 ;
  wire [31:0] \$192 ;
  wire \$193 ;
  wire [31:0] \$194 ;
  wire \$195 ;
  wire [31:0] \$196 ;
  wire \$197 ;
  wire [31:0] \$198 ;
  wire \$199 ;
  wire \$2 ;
  wire \$20 ;
  wire [31:0] \$200 ;
  wire \$201 ;
  wire [31:0] \$202 ;
  wire \$203 ;
  wire [31:0] \$204 ;
  wire \$205 ;
  wire \$206 ;
  wire \$207 ;
  wire \$208 ;
  wire \$209 ;
  wire [31:0] \$21 ;
  wire \$210 ;
  wire \$211 ;
  wire \$212 ;
  wire \$213 ;
  wire \$214 ;
  wire \$215 ;
  wire \$216 ;
  wire \$217 ;
  wire \$218 ;
  wire \$219 ;
  wire \$22 ;
  wire \$220 ;
  wire \$221 ;
  wire \$222 ;
  wire [31:0] \$223 ;
  wire \$224 ;
  wire [31:0] \$225 ;
  wire \$226 ;
  wire [31:0] \$227 ;
  wire \$228 ;
  wire [31:0] \$229 ;
  wire [31:0] \$23 ;
  wire \$230 ;
  wire [31:0] \$231 ;
  wire \$232 ;
  wire [31:0] \$233 ;
  wire \$234 ;
  wire [31:0] \$235 ;
  wire \$236 ;
  wire [31:0] \$237 ;
  wire \$238 ;
  wire [31:0] \$239 ;
  wire \$24 ;
  wire \$240 ;
  wire [31:0] \$241 ;
  wire \$242 ;
  wire [31:0] \$243 ;
  wire \$244 ;
  wire [31:0] \$245 ;
  wire \$246 ;
  wire [31:0] \$247 ;
  wire \$248 ;
  wire [31:0] \$249 ;
  wire [31:0] \$25 ;
  wire \$250 ;
  wire [31:0] \$251 ;
  wire \$252 ;
  wire \$253 ;
  wire \$254 ;
  wire \$255 ;
  wire \$256 ;
  wire \$257 ;
  wire \$258 ;
  wire \$259 ;
  wire \$26 ;
  wire \$260 ;
  wire \$261 ;
  wire \$262 ;
  wire \$263 ;
  wire \$264 ;
  wire \$265 ;
  wire \$266 ;
  wire \$267 ;
  wire [31:0] \$268 ;
  wire \$269 ;
  wire \$27 ;
  wire [31:0] \$270 ;
  wire \$271 ;
  wire [31:0] \$272 ;
  wire \$273 ;
  wire [31:0] \$274 ;
  wire \$275 ;
  wire [31:0] \$276 ;
  wire \$277 ;
  wire [31:0] \$278 ;
  wire \$279 ;
  wire \$28 ;
  wire [31:0] \$280 ;
  wire \$281 ;
  wire [31:0] \$282 ;
  wire \$283 ;
  wire [31:0] \$284 ;
  wire \$285 ;
  wire [31:0] \$286 ;
  wire \$287 ;
  wire [31:0] \$288 ;
  wire \$289 ;
  wire \$29 ;
  wire [31:0] \$290 ;
  wire \$291 ;
  wire [31:0] \$292 ;
  wire \$293 ;
  wire [31:0] \$294 ;
  wire \$295 ;
  wire [31:0] \$296 ;
  wire \$297 ;
  wire \$298 ;
  wire \$299 ;
  wire [31:0] \$3 ;
  wire \$30 ;
  wire \$300 ;
  wire \$301 ;
  wire \$302 ;
  wire \$303 ;
  wire \$304 ;
  wire \$305 ;
  wire \$306 ;
  wire \$307 ;
  wire \$308 ;
  wire \$309 ;
  wire \$31 ;
  wire \$310 ;
  wire \$311 ;
  wire \$312 ;
  wire [31:0] \$313 ;
  wire \$314 ;
  wire [31:0] \$315 ;
  wire \$316 ;
  wire [31:0] \$317 ;
  wire \$318 ;
  wire [31:0] \$319 ;
  wire \$32 ;
  wire \$320 ;
  wire [31:0] \$321 ;
  wire \$322 ;
  wire [31:0] \$323 ;
  wire \$324 ;
  wire [31:0] \$325 ;
  wire \$326 ;
  wire [31:0] \$327 ;
  wire \$328 ;
  wire [31:0] \$329 ;
  wire \$33 ;
  wire \$330 ;
  wire [31:0] \$331 ;
  wire \$332 ;
  wire [31:0] \$333 ;
  wire \$334 ;
  wire [31:0] \$335 ;
  wire \$336 ;
  wire [31:0] \$337 ;
  wire \$338 ;
  wire [31:0] \$339 ;
  wire \$34 ;
  wire \$340 ;
  wire [31:0] \$341 ;
  wire \$342 ;
  wire [31:0] \$343 ;
  wire \$344 ;
  wire \$345 ;
  wire \$346 ;
  wire \$347 ;
  wire \$348 ;
  wire \$349 ;
  wire \$35 ;
  wire \$350 ;
  wire \$351 ;
  wire \$352 ;
  wire \$353 ;
  wire \$354 ;
  wire \$355 ;
  wire \$356 ;
  wire \$357 ;
  wire \$358 ;
  wire \$359 ;
  wire \$36 ;
  wire \$360 ;
  wire [31:0] \$361 ;
  wire \$362 ;
  wire [31:0] \$363 ;
  wire \$364 ;
  wire [31:0] \$365 ;
  wire \$366 ;
  wire [31:0] \$367 ;
  wire \$368 ;
  wire [31:0] \$369 ;
  wire \$37 ;
  wire \$370 ;
  wire [31:0] \$371 ;
  wire \$372 ;
  wire [31:0] \$373 ;
  wire \$374 ;
  wire [31:0] \$375 ;
  wire \$376 ;
  wire [31:0] \$377 ;
  wire \$378 ;
  wire [31:0] \$379 ;
  wire \$38 ;
  wire \$380 ;
  wire [31:0] \$381 ;
  wire \$382 ;
  wire [31:0] \$383 ;
  wire \$384 ;
  wire [31:0] \$385 ;
  wire \$386 ;
  wire \$387 ;
  wire \$388 ;
  wire \$389 ;
  wire \$39 ;
  wire \$390 ;
  wire \$391 ;
  wire \$392 ;
  wire \$393 ;
  wire \$394 ;
  wire \$395 ;
  wire \$396 ;
  wire \$397 ;
  wire \$398 ;
  wire \$399 ;
  wire \$4 ;
  wire [31:0] \$40 ;
  wire [31:0] \$400 ;
  wire \$401 ;
  wire [31:0] \$402 ;
  wire \$403 ;
  wire [31:0] \$404 ;
  wire \$405 ;
  wire [31:0] \$406 ;
  wire \$407 ;
  wire [31:0] \$408 ;
  wire \$409 ;
  wire \$41 ;
  wire [31:0] \$410 ;
  wire \$411 ;
  wire [31:0] \$412 ;
  wire \$413 ;
  wire [31:0] \$414 ;
  wire \$415 ;
  wire [31:0] \$416 ;
  wire \$417 ;
  wire [31:0] \$418 ;
  wire \$419 ;
  wire [31:0] \$42 ;
  wire [31:0] \$420 ;
  wire \$421 ;
  wire [31:0] \$422 ;
  wire \$423 ;
  wire \$424 ;
  wire \$425 ;
  wire \$426 ;
  wire \$427 ;
  wire \$428 ;
  wire \$429 ;
  wire \$43 ;
  wire \$430 ;
  wire \$431 ;
  wire \$432 ;
  wire \$433 ;
  wire \$434 ;
  wire \$435 ;
  wire [31:0] \$436 ;
  wire \$437 ;
  wire [31:0] \$438 ;
  wire \$439 ;
  wire [31:0] \$44 ;
  wire [31:0] \$440 ;
  wire \$441 ;
  wire [31:0] \$442 ;
  wire \$443 ;
  wire [31:0] \$444 ;
  wire \$445 ;
  wire [31:0] \$446 ;
  wire \$447 ;
  wire [31:0] \$448 ;
  wire \$449 ;
  wire \$45 ;
  wire [31:0] \$450 ;
  wire \$451 ;
  wire [31:0] \$452 ;
  wire \$453 ;
  wire [31:0] \$454 ;
  wire \$455 ;
  wire [31:0] \$456 ;
  wire \$457 ;
  wire [31:0] \$458 ;
  wire \$459 ;
  wire [31:0] \$46 ;
  wire [31:0] \$460 ;
  wire \$461 ;
  wire \$462 ;
  wire \$463 ;
  wire \$464 ;
  wire \$465 ;
  wire \$466 ;
  wire \$467 ;
  wire \$468 ;
  wire \$469 ;
  wire \$47 ;
  wire \$470 ;
  wire \$471 ;
  wire \$472 ;
  wire \$473 ;
  wire \$474 ;
  wire [31:0] \$475 ;
  wire \$476 ;
  wire [31:0] \$477 ;
  wire \$478 ;
  wire [31:0] \$479 ;
  wire [31:0] \$48 ;
  wire \$480 ;
  wire [31:0] \$481 ;
  wire \$482 ;
  wire [31:0] \$483 ;
  wire \$484 ;
  wire [31:0] \$485 ;
  wire \$486 ;
  wire [31:0] \$487 ;
  wire \$488 ;
  wire [31:0] \$489 ;
  wire \$49 ;
  wire \$490 ;
  wire [31:0] \$491 ;
  wire \$492 ;
  wire [31:0] \$493 ;
  wire \$494 ;
  wire [31:0] \$495 ;
  wire \$496 ;
  wire [31:0] \$497 ;
  wire \$498 ;
  wire [31:0] \$499 ;
  wire [31:0] \$5 ;
  wire [31:0] \$50 ;
  wire \$500 ;
  wire [31:0] \$501 ;
  wire \$502 ;
  wire [31:0] \$503 ;
  wire \$504 ;
  wire [31:0] \$505 ;
  wire \$506 ;
  wire [31:0] \$507 ;
  wire \$508 ;
  wire \$509 ;
  wire \$51 ;
  wire \$510 ;
  wire \$511 ;
  wire \$512 ;
  wire \$513 ;
  wire \$514 ;
  wire \$515 ;
  wire \$516 ;
  wire \$517 ;
  wire \$518 ;
  wire \$519 ;
  wire [31:0] \$52 ;
  wire \$520 ;
  wire \$521 ;
  wire \$522 ;
  wire \$523 ;
  wire \$524 ;
  wire \$525 ;
  wire [31:0] \$526 ;
  wire \$527 ;
  wire [31:0] \$528 ;
  wire \$529 ;
  wire \$53 ;
  wire [31:0] \$530 ;
  wire \$531 ;
  wire [31:0] \$532 ;
  wire \$533 ;
  wire [31:0] \$534 ;
  wire \$535 ;
  wire [31:0] \$536 ;
  wire \$537 ;
  wire [31:0] \$538 ;
  wire \$539 ;
  wire [31:0] \$54 ;
  wire [31:0] \$540 ;
  wire \$541 ;
  wire [31:0] \$542 ;
  wire \$543 ;
  wire [31:0] \$544 ;
  wire \$545 ;
  wire [31:0] \$546 ;
  wire \$547 ;
  wire [31:0] \$548 ;
  wire \$549 ;
  wire \$55 ;
  wire [31:0] \$550 ;
  wire \$551 ;
  wire [31:0] \$552 ;
  wire \$553 ;
  wire [31:0] \$554 ;
  wire \$555 ;
  wire [31:0] \$556 ;
  wire \$557 ;
  wire [31:0] \$558 ;
  wire \$559 ;
  wire [31:0] \$56 ;
  wire \$560 ;
  wire \$561 ;
  wire \$562 ;
  wire \$563 ;
  wire \$564 ;
  wire \$565 ;
  wire \$566 ;
  wire \$567 ;
  wire \$568 ;
  wire \$569 ;
  wire \$57 ;
  wire \$570 ;
  wire \$571 ;
  wire \$572 ;
  wire \$573 ;
  wire \$574 ;
  wire \$575 ;
  wire \$576 ;
  wire [31:0] \$577 ;
  wire \$578 ;
  wire [31:0] \$579 ;
  wire [31:0] \$58 ;
  wire \$580 ;
  wire [31:0] \$581 ;
  wire \$582 ;
  wire [31:0] \$583 ;
  wire \$584 ;
  wire [31:0] \$585 ;
  wire \$586 ;
  wire [31:0] \$587 ;
  wire \$588 ;
  wire [31:0] \$589 ;
  wire \$59 ;
  wire \$590 ;
  wire [31:0] \$591 ;
  wire \$592 ;
  wire [31:0] \$593 ;
  wire \$594 ;
  wire [31:0] \$595 ;
  wire \$596 ;
  wire [31:0] \$597 ;
  wire \$598 ;
  wire [31:0] \$599 ;
  wire \$6 ;
  wire [31:0] \$60 ;
  wire \$600 ;
  wire [31:0] \$601 ;
  wire \$602 ;
  wire [31:0] \$603 ;
  wire \$604 ;
  wire [31:0] \$605 ;
  wire \$606 ;
  wire [31:0] \$607 ;
  wire \$608 ;
  wire \$609 ;
  wire \$61 ;
  wire \$610 ;
  wire \$611 ;
  wire \$612 ;
  wire \$613 ;
  wire \$614 ;
  wire \$615 ;
  wire \$616 ;
  wire \$617 ;
  wire \$618 ;
  wire \$619 ;
  wire [31:0] \$62 ;
  wire \$620 ;
  wire \$621 ;
  wire \$622 ;
  wire \$623 ;
  wire \$624 ;
  wire [31:0] \$625 ;
  wire \$626 ;
  wire [31:0] \$627 ;
  wire \$628 ;
  wire [31:0] \$629 ;
  wire \$63 ;
  wire \$630 ;
  wire [31:0] \$631 ;
  wire \$632 ;
  wire [31:0] \$633 ;
  wire \$634 ;
  wire [31:0] \$635 ;
  wire \$636 ;
  wire [31:0] \$637 ;
  wire \$638 ;
  wire [31:0] \$639 ;
  wire [31:0] \$64 ;
  wire \$640 ;
  wire [31:0] \$641 ;
  wire \$642 ;
  wire [31:0] \$643 ;
  wire \$644 ;
  wire [31:0] \$645 ;
  wire \$646 ;
  wire [31:0] \$647 ;
  wire \$648 ;
  wire [31:0] \$649 ;
  wire \$65 ;
  wire \$650 ;
  wire [31:0] \$651 ;
  wire \$652 ;
  wire [31:0] \$653 ;
  wire \$654 ;
  wire \$655 ;
  wire \$656 ;
  wire \$657 ;
  wire \$658 ;
  wire \$659 ;
  wire \$66 ;
  wire \$660 ;
  wire \$661 ;
  wire \$662 ;
  wire \$663 ;
  wire \$664 ;
  wire \$665 ;
  wire \$666 ;
  wire \$667 ;
  wire \$668 ;
  wire \$669 ;
  wire \$67 ;
  wire [31:0] \$670 ;
  wire \$671 ;
  wire [31:0] \$672 ;
  wire \$673 ;
  wire [31:0] \$674 ;
  wire \$675 ;
  wire [31:0] \$676 ;
  wire \$677 ;
  wire [31:0] \$678 ;
  wire \$679 ;
  wire \$68 ;
  wire [31:0] \$680 ;
  wire \$681 ;
  wire [31:0] \$682 ;
  wire \$683 ;
  wire [31:0] \$684 ;
  wire \$685 ;
  wire [31:0] \$686 ;
  wire \$687 ;
  wire [31:0] \$688 ;
  wire \$689 ;
  wire \$69 ;
  wire [31:0] \$690 ;
  wire \$691 ;
  wire [31:0] \$692 ;
  wire \$693 ;
  wire [31:0] \$694 ;
  wire \$695 ;
  wire [31:0] \$696 ;
  wire \$697 ;
  wire [31:0] \$698 ;
  wire \$699 ;
  wire [31:0] \$7 ;
  wire \$70 ;
  wire \$700 ;
  wire \$701 ;
  wire \$702 ;
  wire \$703 ;
  wire \$704 ;
  wire \$705 ;
  wire \$706 ;
  wire \$707 ;
  wire \$708 ;
  wire \$709 ;
  wire \$71 ;
  wire \$710 ;
  wire \$711 ;
  wire \$712 ;
  wire \$713 ;
  wire \$714 ;
  wire [31:0] \$715 ;
  wire \$716 ;
  wire [31:0] \$717 ;
  wire \$718 ;
  wire [31:0] \$719 ;
  wire \$72 ;
  wire \$720 ;
  wire [31:0] \$721 ;
  wire \$722 ;
  wire [31:0] \$723 ;
  wire \$724 ;
  wire [31:0] \$725 ;
  wire \$726 ;
  wire [31:0] \$727 ;
  wire \$728 ;
  wire [31:0] \$729 ;
  wire \$73 ;
  wire \$730 ;
  wire [31:0] \$731 ;
  wire \$732 ;
  wire [31:0] \$733 ;
  wire \$734 ;
  wire [31:0] \$735 ;
  wire \$736 ;
  wire [31:0] \$737 ;
  wire \$738 ;
  wire [31:0] \$739 ;
  wire \$74 ;
  wire \$740 ;
  wire [31:0] \$741 ;
  wire \$742 ;
  wire \$743 ;
  wire \$744 ;
  wire \$745 ;
  wire \$746 ;
  wire \$747 ;
  wire \$748 ;
  wire \$749 ;
  wire \$75 ;
  wire \$750 ;
  wire \$751 ;
  wire \$752 ;
  wire \$753 ;
  wire \$754 ;
  wire \$755 ;
  wire \$756 ;
  wire [31:0] \$757 ;
  wire \$758 ;
  wire [31:0] \$759 ;
  wire \$76 ;
  wire \$760 ;
  wire [31:0] \$761 ;
  wire \$762 ;
  wire [31:0] \$763 ;
  wire \$764 ;
  wire [31:0] \$765 ;
  wire \$766 ;
  wire [31:0] \$767 ;
  wire \$768 ;
  wire [31:0] \$769 ;
  wire \$77 ;
  wire \$770 ;
  wire [31:0] \$771 ;
  wire \$772 ;
  wire [31:0] \$773 ;
  wire \$774 ;
  wire [31:0] \$775 ;
  wire \$776 ;
  wire [31:0] \$777 ;
  wire \$778 ;
  wire [31:0] \$779 ;
  wire \$78 ;
  wire \$780 ;
  wire [31:0] \$781 ;
  wire \$782 ;
  wire [31:0] \$783 ;
  wire \$784 ;
  wire \$785 ;
  wire \$786 ;
  wire \$787 ;
  wire \$788 ;
  wire \$789 ;
  wire [31:0] \$79 ;
  wire \$790 ;
  wire \$791 ;
  wire \$792 ;
  wire \$793 ;
  wire \$794 ;
  wire \$795 ;
  wire \$796 ;
  wire \$797 ;
  wire \$798 ;
  wire [31:0] \$799 ;
  wire \$8 ;
  wire \$80 ;
  wire \$800 ;
  wire [31:0] \$801 ;
  wire \$802 ;
  wire [31:0] \$803 ;
  wire \$804 ;
  wire [31:0] \$805 ;
  wire \$806 ;
  wire [31:0] \$807 ;
  wire \$808 ;
  wire [31:0] \$809 ;
  wire [31:0] \$81 ;
  wire \$810 ;
  wire [31:0] \$811 ;
  wire \$812 ;
  wire [31:0] \$813 ;
  wire \$814 ;
  wire [31:0] \$815 ;
  wire \$816 ;
  wire [31:0] \$817 ;
  wire \$818 ;
  wire [31:0] \$819 ;
  wire \$82 ;
  wire \$820 ;
  wire [31:0] \$821 ;
  wire \$822 ;
  wire [31:0] \$823 ;
  wire \$824 ;
  wire \$825 ;
  wire \$826 ;
  wire \$827 ;
  wire \$828 ;
  wire \$829 ;
  wire [31:0] \$83 ;
  wire \$830 ;
  wire \$831 ;
  wire \$832 ;
  wire \$833 ;
  wire \$834 ;
  wire \$835 ;
  wire \$836 ;
  wire \$837 ;
  wire [31:0] \$838 ;
  wire \$839 ;
  wire \$84 ;
  wire [31:0] \$840 ;
  wire \$841 ;
  wire [31:0] \$842 ;
  wire \$843 ;
  wire [31:0] \$844 ;
  wire \$845 ;
  wire [31:0] \$846 ;
  wire \$847 ;
  wire [31:0] \$848 ;
  wire \$849 ;
  wire [31:0] \$85 ;
  wire [31:0] \$850 ;
  wire \$851 ;
  wire [31:0] \$852 ;
  wire \$853 ;
  wire [31:0] \$854 ;
  wire \$855 ;
  wire [31:0] \$856 ;
  wire \$857 ;
  wire [31:0] \$858 ;
  wire \$859 ;
  wire \$86 ;
  wire [31:0] \$860 ;
  wire \$861 ;
  wire \$862 ;
  wire \$863 ;
  wire \$864 ;
  wire \$865 ;
  wire \$866 ;
  wire \$867 ;
  wire \$868 ;
  wire \$869 ;
  wire [31:0] \$87 ;
  wire \$870 ;
  wire \$871 ;
  wire \$872 ;
  wire \$873 ;
  wire [31:0] \$874 ;
  wire \$875 ;
  wire [31:0] \$876 ;
  wire \$877 ;
  wire [31:0] \$878 ;
  wire \$879 ;
  wire \$88 ;
  wire [31:0] \$880 ;
  wire \$881 ;
  wire [31:0] \$882 ;
  wire \$883 ;
  wire [31:0] \$884 ;
  wire \$885 ;
  wire [31:0] \$886 ;
  wire \$887 ;
  wire [31:0] \$888 ;
  wire \$889 ;
  wire [31:0] \$89 ;
  wire [31:0] \$890 ;
  wire \$891 ;
  wire [31:0] \$892 ;
  wire \$893 ;
  wire [31:0] \$894 ;
  wire \$895 ;
  wire [31:0] \$896 ;
  wire \$897 ;
  wire \$898 ;
  wire \$899 ;
  wire [31:0] \$9 ;
  wire \$90 ;
  wire \$900 ;
  wire \$901 ;
  wire \$902 ;
  wire \$903 ;
  wire \$904 ;
  wire \$905 ;
  wire \$906 ;
  wire \$907 ;
  wire \$908 ;
  wire \$909 ;
  wire [31:0] \$91 ;
  wire [31:0] \$910 ;
  wire \$911 ;
  wire [31:0] \$912 ;
  wire \$913 ;
  wire [31:0] \$914 ;
  wire \$915 ;
  wire [31:0] \$916 ;
  wire \$917 ;
  wire [31:0] \$918 ;
  wire \$919 ;
  wire \$92 ;
  wire [31:0] \$920 ;
  wire \$921 ;
  wire [31:0] \$922 ;
  wire \$923 ;
  wire [31:0] \$924 ;
  wire \$925 ;
  wire [31:0] \$926 ;
  wire \$927 ;
  wire [31:0] \$928 ;
  wire \$929 ;
  wire [31:0] \$93 ;
  wire [31:0] \$930 ;
  wire \$931 ;
  wire [31:0] \$932 ;
  wire \$933 ;
  wire \$934 ;
  wire \$935 ;
  wire \$936 ;
  wire \$937 ;
  wire \$938 ;
  wire \$939 ;
  wire \$94 ;
  wire \$940 ;
  wire \$941 ;
  wire \$942 ;
  wire \$943 ;
  wire \$944 ;
  wire \$945 ;
  wire [31:0] \$946 ;
  wire \$947 ;
  wire [31:0] \$948 ;
  wire \$949 ;
  wire [31:0] \$95 ;
  wire [31:0] \$950 ;
  wire \$951 ;
  wire [31:0] \$952 ;
  wire \$953 ;
  wire [31:0] \$954 ;
  wire \$955 ;
  wire [31:0] \$956 ;
  wire \$957 ;
  wire [31:0] \$958 ;
  wire \$959 ;
  wire \$96 ;
  wire [31:0] \$960 ;
  wire \$961 ;
  wire [31:0] \$962 ;
  wire \$963 ;
  wire [31:0] \$964 ;
  wire \$965 ;
  wire [31:0] \$966 ;
  wire \$967 ;
  wire [31:0] \$968 ;
  wire \$969 ;
  wire [31:0] \$97 ;
  wire [31:0] \$970 ;
  wire \$971 ;
  wire [31:0] \$972 ;
  wire \$973 ;
  wire \$974 ;
  wire \$975 ;
  wire \$976 ;
  wire \$977 ;
  wire \$978 ;
  wire \$979 ;
  wire \$98 ;
  wire \$980 ;
  wire \$981 ;
  wire \$982 ;
  wire \$983 ;
  wire \$984 ;
  wire \$985 ;
  wire \$986 ;
  wire \$987 ;
  wire [31:0] \$988 ;
  wire \$989 ;
  wire [31:0] \$99 ;
  wire [31:0] \$990 ;
  wire \$991 ;
  wire [31:0] \$992 ;
  wire \$993 ;
  wire [31:0] \$994 ;
  wire \$995 ;
  wire [31:0] \$996 ;
  wire \$997 ;
  wire [31:0] \$998 ;
  wire \$999 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:316" *)
  output [31:0] crc;
  wire [31:0] crc;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:322" *)
  reg [31:0] crc_reg = 32'd4294967295;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:314" *)
  wire [31:0] data;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:314" *)
  input [31:0] data_in;
  wire [31:0] data_in;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:317" *)
  wire match_detected;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:313" *)
  input start;
  wire start;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:273" *)
  input sync_100_clk;
  wire sync_100_clk;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:273" *)
  input sync_100_rst;
  wire sync_100_rst;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:315" *)
  input valid;
  wire valid;
  assign match_detected = ! (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:356" *) crc_reg;
  assign \$1  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$3  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$4  = \$2  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$3 [6];
  assign \$5  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$6  = \$4  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$5 [9];
  assign \$7  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$8  = \$6  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$7 [10];
  assign \$9  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$10  = \$8  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$9 [12];
  assign \$11  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$12  = \$10  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$11 [16];
  assign \$13  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$14  = \$12  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$13 [24];
  assign \$15  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$16  = \$14  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$15 [25];
  assign \$17  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$18  = \$16  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$17 [26];
  assign \$19  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$20  = \$18  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$19 [28];
  assign \$21  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$22  = \$20  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$21 [29];
  assign \$23  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$24  = \$22  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$23 [30];
  assign \$25  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$26  = \$24  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$25 [31];
  assign \$27  = \$26  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[0];
  assign \$28  = \$27  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[6];
  assign \$29  = \$28  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[9];
  assign \$30  = \$29  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[10];
  assign \$31  = \$30  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[12];
  assign \$32  = \$31  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[16];
  assign \$33  = \$32  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[24];
  assign \$34  = \$33  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[25];
  assign \$35  = \$34  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[26];
  assign \$36  = \$35  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[28];
  assign \$37  = \$36  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[29];
  assign \$38  = \$37  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[30];
  assign \$39  = \$38  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[31];
  assign \$40  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$42  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$43  = \$41  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$42 [1];
  assign \$44  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$45  = \$43  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$44 [6];
  assign \$46  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$47  = \$45  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$46 [7];
  assign \$48  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$49  = \$47  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$48 [9];
  assign \$50  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$51  = \$49  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$50 [11];
  assign \$52  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$53  = \$51  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$52 [12];
  assign \$54  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$55  = \$53  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$54 [13];
  assign \$56  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$57  = \$55  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$56 [16];
  assign \$58  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$59  = \$57  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$58 [17];
  assign \$60  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$61  = \$59  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$60 [24];
  assign \$62  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$63  = \$61  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$62 [27];
  assign \$64  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$65  = \$63  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$64 [28];
  assign \$66  = \$65  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[0];
  assign \$67  = \$66  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[1];
  assign \$68  = \$67  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[6];
  assign \$69  = \$68  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[7];
  assign \$70  = \$69  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[9];
  assign \$71  = \$70  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[11];
  assign \$72  = \$71  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[12];
  assign \$73  = \$72  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[13];
  assign \$74  = \$73  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[16];
  assign \$75  = \$74  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[17];
  assign \$76  = \$75  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[24];
  assign \$77  = \$76  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[27];
  assign \$78  = \$77  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[28];
  assign \$79  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$81  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$82  = \$80  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$81 [1];
  assign \$83  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$84  = \$82  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$83 [2];
  assign \$85  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$86  = \$84  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$85 [6];
  assign \$87  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$88  = \$86  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$87 [7];
  assign \$89  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$90  = \$88  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$89 [8];
  assign \$91  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$92  = \$90  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$91 [9];
  assign \$93  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$94  = \$92  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$93 [13];
  assign \$95  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$96  = \$94  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$95 [14];
  assign \$97  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$98  = \$96  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$97 [16];
  assign \$99  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$100  = \$98  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$99 [17];
  assign \$101  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$102  = \$100  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$101 [18];
  assign \$103  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$104  = \$102  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$103 [24];
  assign \$105  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$106  = \$104  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$105 [26];
  assign \$107  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$108  = \$106  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$107 [30];
  assign \$109  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$110  = \$108  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$109 [31];
  assign \$111  = \$110  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[0];
  assign \$112  = \$111  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[1];
  assign \$113  = \$112  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[2];
  assign \$114  = \$113  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[6];
  assign \$115  = \$114  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[7];
  assign \$116  = \$115  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[8];
  assign \$117  = \$116  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[9];
  assign \$118  = \$117  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[13];
  assign \$119  = \$118  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[14];
  assign \$120  = \$119  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[16];
  assign \$121  = \$120  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[17];
  assign \$122  = \$121  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[18];
  assign \$123  = \$122  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[24];
  assign \$124  = \$123  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[26];
  assign \$125  = \$124  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[30];
  assign \$126  = \$125  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[31];
  assign \$127  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$129  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$130  = \$128  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$129 [2];
  assign \$131  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$132  = \$130  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$131 [3];
  assign \$133  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$134  = \$132  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$133 [7];
  assign \$135  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$136  = \$134  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$135 [8];
  assign \$137  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$138  = \$136  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$137 [9];
  assign \$139  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$140  = \$138  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$139 [10];
  assign \$141  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$142  = \$140  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$141 [14];
  assign \$143  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$144  = \$142  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$143 [15];
  assign \$145  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$146  = \$144  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$145 [17];
  assign \$147  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$148  = \$146  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$147 [18];
  assign \$149  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$150  = \$148  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$149 [19];
  assign \$151  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$152  = \$150  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$151 [25];
  assign \$153  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$154  = \$152  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$153 [27];
  assign \$155  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$156  = \$154  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$155 [31];
  assign \$157  = \$156  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[1];
  assign \$158  = \$157  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[2];
  assign \$159  = \$158  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[3];
  assign \$160  = \$159  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[7];
  assign \$161  = \$160  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[8];
  assign \$162  = \$161  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[9];
  assign \$163  = \$162  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[10];
  assign \$164  = \$163  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[14];
  assign \$165  = \$164  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[15];
  assign \$166  = \$165  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[17];
  assign \$167  = \$166  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[18];
  assign \$168  = \$167  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[19];
  assign \$169  = \$168  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[25];
  assign \$170  = \$169  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[27];
  assign \$171  = \$170  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[31];
  assign \$172  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$174  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$175  = \$173  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$174 [2];
  assign \$176  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$177  = \$175  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$176 [3];
  assign \$178  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$179  = \$177  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$178 [4];
  assign \$180  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$181  = \$179  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$180 [6];
  assign \$182  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$183  = \$181  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$182 [8];
  assign \$184  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$185  = \$183  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$184 [11];
  assign \$186  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$187  = \$185  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$186 [12];
  assign \$188  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$189  = \$187  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$188 [15];
  assign \$190  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$191  = \$189  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$190 [18];
  assign \$192  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$193  = \$191  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$192 [19];
  assign \$194  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$195  = \$193  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$194 [20];
  assign \$196  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$197  = \$195  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$196 [24];
  assign \$198  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$199  = \$197  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$198 [25];
  assign \$200  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$201  = \$199  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$200 [29];
  assign \$202  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$203  = \$201  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$202 [30];
  assign \$204  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$205  = \$203  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$204 [31];
  assign \$206  = \$205  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[0];
  assign \$207  = \$206  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[2];
  assign \$208  = \$207  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[3];
  assign \$209  = \$208  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[4];
  assign \$210  = \$209  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[6];
  assign \$211  = \$210  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[8];
  assign \$212  = \$211  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[11];
  assign \$213  = \$212  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[12];
  assign \$214  = \$213  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[15];
  assign \$215  = \$214  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[18];
  assign \$216  = \$215  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[19];
  assign \$217  = \$216  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[20];
  assign \$218  = \$217  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[24];
  assign \$219  = \$218  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[25];
  assign \$220  = \$219  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[29];
  assign \$221  = \$220  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[30];
  assign \$222  = \$221  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[31];
  assign \$223  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$225  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$226  = \$224  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$225 [1];
  assign \$227  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$228  = \$226  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$227 [3];
  assign \$229  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$230  = \$228  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$229 [4];
  assign \$231  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$232  = \$230  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$231 [5];
  assign \$233  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$234  = \$232  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$233 [6];
  assign \$235  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$236  = \$234  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$235 [7];
  assign \$237  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$238  = \$236  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$237 [10];
  assign \$239  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$240  = \$238  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$239 [13];
  assign \$241  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$242  = \$240  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$241 [19];
  assign \$243  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$244  = \$242  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$243 [20];
  assign \$245  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$246  = \$244  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$245 [21];
  assign \$247  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$248  = \$246  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$247 [24];
  assign \$249  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$250  = \$248  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$249 [28];
  assign \$251  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$252  = \$250  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$251 [29];
  assign \$253  = \$252  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[0];
  assign \$254  = \$253  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[1];
  assign \$255  = \$254  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[3];
  assign \$256  = \$255  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[4];
  assign \$257  = \$256  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[5];
  assign \$258  = \$257  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[6];
  assign \$259  = \$258  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[7];
  assign \$260  = \$259  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[10];
  assign \$261  = \$260  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[13];
  assign \$262  = \$261  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[19];
  assign \$263  = \$262  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[20];
  assign \$264  = \$263  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[21];
  assign \$265  = \$264  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[24];
  assign \$266  = \$265  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[28];
  assign \$267  = \$266  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[29];
  assign \$268  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$270  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$271  = \$269  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$270 [2];
  assign \$272  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$273  = \$271  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$272 [4];
  assign \$274  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$275  = \$273  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$274 [5];
  assign \$276  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$277  = \$275  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$276 [6];
  assign \$278  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$279  = \$277  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$278 [7];
  assign \$280  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$281  = \$279  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$280 [8];
  assign \$282  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$283  = \$281  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$282 [11];
  assign \$284  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$285  = \$283  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$284 [14];
  assign \$286  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$287  = \$285  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$286 [20];
  assign \$288  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$289  = \$287  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$288 [21];
  assign \$290  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$291  = \$289  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$290 [22];
  assign \$292  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$293  = \$291  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$292 [25];
  assign \$294  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$295  = \$293  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$294 [29];
  assign \$296  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$297  = \$295  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$296 [30];
  assign \$298  = \$297  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[1];
  assign \$299  = \$298  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[2];
  assign \$300  = \$299  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[4];
  assign \$301  = \$300  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[5];
  assign \$302  = \$301  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[6];
  assign \$303  = \$302  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[7];
  assign \$304  = \$303  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[8];
  assign \$305  = \$304  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[11];
  assign \$306  = \$305  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[14];
  assign \$307  = \$306  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[20];
  assign \$308  = \$307  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[21];
  assign \$309  = \$308  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[22];
  assign \$310  = \$309  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[25];
  assign \$311  = \$310  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[29];
  assign \$312  = \$311  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[30];
  assign \$313  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$315  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$316  = \$314  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$315 [2];
  assign \$317  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$318  = \$316  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$317 [3];
  assign \$319  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$320  = \$318  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$319 [5];
  assign \$321  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$322  = \$320  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$321 [7];
  assign \$323  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$324  = \$322  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$323 [8];
  assign \$325  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$326  = \$324  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$325 [10];
  assign \$327  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$328  = \$326  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$327 [15];
  assign \$329  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$330  = \$328  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$329 [16];
  assign \$331  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$332  = \$330  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$331 [21];
  assign \$333  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$334  = \$332  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$333 [22];
  assign \$335  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$336  = \$334  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$335 [23];
  assign \$337  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$338  = \$336  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$337 [24];
  assign \$339  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$340  = \$338  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$339 [25];
  assign \$341  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$342  = \$340  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$341 [28];
  assign \$343  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$344  = \$342  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$343 [29];
  assign \$345  = \$344  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[0];
  assign \$346  = \$345  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[2];
  assign \$347  = \$346  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[3];
  assign \$348  = \$347  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[5];
  assign \$349  = \$348  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[7];
  assign \$350  = \$349  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[8];
  assign \$351  = \$350  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[10];
  assign \$352  = \$351  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[15];
  assign \$353  = \$352  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[16];
  assign \$354  = \$353  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[21];
  assign \$355  = \$354  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[22];
  assign \$356  = \$355  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[23];
  assign \$357  = \$356  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[24];
  assign \$358  = \$357  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[25];
  assign \$359  = \$358  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[28];
  assign \$360  = \$359  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[29];
  assign \$361  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$363  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$364  = \$362  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$363 [1];
  assign \$365  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$366  = \$364  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$365 [3];
  assign \$367  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$368  = \$366  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$367 [4];
  assign \$369  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$370  = \$368  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$369 [8];
  assign \$371  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$372  = \$370  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$371 [10];
  assign \$373  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$374  = \$372  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$373 [11];
  assign \$375  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$376  = \$374  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$375 [12];
  assign \$377  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$378  = \$376  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$377 [17];
  assign \$379  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$380  = \$378  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$379 [22];
  assign \$381  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$382  = \$380  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$381 [23];
  assign \$383  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$384  = \$382  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$383 [28];
  assign \$385  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$386  = \$384  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$385 [31];
  assign \$387  = \$386  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[0];
  assign \$388  = \$387  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[1];
  assign \$389  = \$388  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[3];
  assign \$390  = \$389  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[4];
  assign \$391  = \$390  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[8];
  assign \$392  = \$391  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[10];
  assign \$393  = \$392  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[11];
  assign \$394  = \$393  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[12];
  assign \$395  = \$394  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[17];
  assign \$396  = \$395  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[22];
  assign \$397  = \$396  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[23];
  assign \$398  = \$397  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[28];
  assign \$399  = \$398  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[31];
  assign \$400  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$402  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$403  = \$401  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$402 [2];
  assign \$404  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$405  = \$403  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$404 [4];
  assign \$406  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$407  = \$405  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$406 [5];
  assign \$408  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$409  = \$407  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$408 [9];
  assign \$410  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$411  = \$409  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$410 [11];
  assign \$412  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$413  = \$411  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$412 [12];
  assign \$414  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$415  = \$413  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$414 [13];
  assign \$416  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$417  = \$415  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$416 [18];
  assign \$418  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$419  = \$417  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$418 [23];
  assign \$420  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$421  = \$419  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$420 [24];
  assign \$422  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$423  = \$421  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$422 [29];
  assign \$424  = \$423  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[1];
  assign \$425  = \$424  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[2];
  assign \$426  = \$425  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[4];
  assign \$427  = \$426  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[5];
  assign \$428  = \$427  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[9];
  assign \$429  = \$428  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[11];
  assign \$430  = \$429  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[12];
  assign \$431  = \$430  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[13];
  assign \$432  = \$431  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[18];
  assign \$433  = \$432  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[23];
  assign \$434  = \$433  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[24];
  assign \$435  = \$434  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[29];
  assign \$436  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$438  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$439  = \$437  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$438 [2];
  assign \$440  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$441  = \$439  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$440 [3];
  assign \$442  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$443  = \$441  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$442 [5];
  assign \$444  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$445  = \$443  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$444 [9];
  assign \$446  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$447  = \$445  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$446 [13];
  assign \$448  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$449  = \$447  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$448 [14];
  assign \$450  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$451  = \$449  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$450 [16];
  assign \$452  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$453  = \$451  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$452 [19];
  assign \$454  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$455  = \$453  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$454 [26];
  assign \$456  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$457  = \$455  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$456 [28];
  assign \$458  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$459  = \$457  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$458 [29];
  assign \$460  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$461  = \$459  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$460 [31];
  assign \$462  = \$461  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[0];
  assign \$463  = \$462  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[2];
  assign \$464  = \$463  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[3];
  assign \$465  = \$464  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[5];
  assign \$466  = \$465  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[9];
  assign \$467  = \$466  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[13];
  assign \$468  = \$467  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[14];
  assign \$469  = \$468  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[16];
  assign \$470  = \$469  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[19];
  assign \$471  = \$470  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[26];
  assign \$472  = \$471  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[28];
  assign \$473  = \$472  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[29];
  assign \$474  = \$473  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[31];
  assign \$475  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$477  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$478  = \$476  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$477 [1];
  assign \$479  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$480  = \$478  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$479 [3];
  assign \$481  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$482  = \$480  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$481 [4];
  assign \$483  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$484  = \$482  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$483 [9];
  assign \$485  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$486  = \$484  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$485 [12];
  assign \$487  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$488  = \$486  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$487 [14];
  assign \$489  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$490  = \$488  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$489 [15];
  assign \$491  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$492  = \$490  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$491 [16];
  assign \$493  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$494  = \$492  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$493 [17];
  assign \$495  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$496  = \$494  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$495 [20];
  assign \$497  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$498  = \$496  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$497 [24];
  assign \$499  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$500  = \$498  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$499 [25];
  assign \$501  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$502  = \$500  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$501 [26];
  assign \$503  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$504  = \$502  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$503 [27];
  assign \$505  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$506  = \$504  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$505 [28];
  assign \$507  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$508  = \$506  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$507 [31];
  assign \$509  = \$508  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[0];
  assign \$510  = \$509  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[1];
  assign \$511  = \$510  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[3];
  assign \$512  = \$511  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[4];
  assign \$513  = \$512  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[9];
  assign \$514  = \$513  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[12];
  assign \$515  = \$514  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[14];
  assign \$516  = \$515  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[15];
  assign \$517  = \$516  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[16];
  assign \$518  = \$517  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[17];
  assign \$519  = \$518  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[20];
  assign \$520  = \$519  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[24];
  assign \$521  = \$520  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[25];
  assign \$522  = \$521  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[26];
  assign \$523  = \$522  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[27];
  assign \$524  = \$523  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[28];
  assign \$525  = \$524  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[31];
  assign \$526  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$528  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$529  = \$527  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$528 [1];
  assign \$530  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$531  = \$529  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$530 [2];
  assign \$532  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$533  = \$531  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$532 [4];
  assign \$534  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$535  = \$533  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$534 [5];
  assign \$536  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$537  = \$535  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$536 [6];
  assign \$538  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$539  = \$537  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$538 [9];
  assign \$540  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$541  = \$539  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$540 [12];
  assign \$542  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$543  = \$541  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$542 [13];
  assign \$544  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$545  = \$543  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$544 [15];
  assign \$546  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$547  = \$545  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$546 [17];
  assign \$548  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$549  = \$547  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$548 [18];
  assign \$550  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$551  = \$549  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$550 [21];
  assign \$552  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$553  = \$551  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$552 [24];
  assign \$554  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$555  = \$553  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$554 [27];
  assign \$556  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$557  = \$555  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$556 [30];
  assign \$558  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$559  = \$557  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$558 [31];
  assign \$560  = \$559  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[0];
  assign \$561  = \$560  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[1];
  assign \$562  = \$561  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[2];
  assign \$563  = \$562  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[4];
  assign \$564  = \$563  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[5];
  assign \$565  = \$564  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[6];
  assign \$566  = \$565  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[9];
  assign \$567  = \$566  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[12];
  assign \$568  = \$567  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[13];
  assign \$569  = \$568  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[15];
  assign \$570  = \$569  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[17];
  assign \$571  = \$570  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[18];
  assign \$572  = \$571  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[21];
  assign \$573  = \$572  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[24];
  assign \$574  = \$573  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[27];
  assign \$575  = \$574  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[30];
  assign \$576  = \$575  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[31];
  assign \$577  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$579  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$580  = \$578  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$579 [2];
  assign \$581  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$582  = \$580  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$581 [3];
  assign \$583  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$584  = \$582  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$583 [5];
  assign \$585  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$586  = \$584  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$585 [6];
  assign \$587  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$588  = \$586  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$587 [7];
  assign \$589  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$590  = \$588  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$589 [10];
  assign \$591  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$592  = \$590  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$591 [13];
  assign \$593  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$594  = \$592  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$593 [14];
  assign \$595  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$596  = \$594  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$595 [16];
  assign \$597  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$598  = \$596  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$597 [18];
  assign \$599  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$600  = \$598  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$599 [19];
  assign \$601  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$602  = \$600  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$601 [22];
  assign \$603  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$604  = \$602  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$603 [25];
  assign \$605  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$606  = \$604  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$605 [28];
  assign \$607  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$608  = \$606  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$607 [31];
  assign \$609  = \$608  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[1];
  assign \$610  = \$609  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[2];
  assign \$611  = \$610  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[3];
  assign \$612  = \$611  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[5];
  assign \$613  = \$612  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[6];
  assign \$614  = \$613  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[7];
  assign \$615  = \$614  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[10];
  assign \$616  = \$615  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[13];
  assign \$617  = \$616  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[14];
  assign \$618  = \$617  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[16];
  assign \$619  = \$618  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[18];
  assign \$620  = \$619  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[19];
  assign \$621  = \$620  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[22];
  assign \$622  = \$621  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[25];
  assign \$623  = \$622  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[28];
  assign \$624  = \$623  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[31];
  assign \$625  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$627  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$628  = \$626  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$627 [3];
  assign \$629  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$630  = \$628  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$629 [4];
  assign \$631  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$632  = \$630  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$631 [6];
  assign \$633  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$634  = \$632  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$633 [7];
  assign \$635  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$636  = \$634  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$635 [8];
  assign \$637  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$638  = \$636  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$637 [11];
  assign \$639  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$640  = \$638  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$639 [14];
  assign \$641  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$642  = \$640  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$641 [15];
  assign \$643  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$644  = \$642  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$643 [17];
  assign \$645  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$646  = \$644  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$645 [19];
  assign \$647  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$648  = \$646  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$647 [20];
  assign \$649  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$650  = \$648  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$649 [23];
  assign \$651  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$652  = \$650  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$651 [26];
  assign \$653  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$654  = \$652  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$653 [29];
  assign \$655  = \$654  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[2];
  assign \$656  = \$655  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[3];
  assign \$657  = \$656  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[4];
  assign \$658  = \$657  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[6];
  assign \$659  = \$658  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[7];
  assign \$660  = \$659  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[8];
  assign \$661  = \$660  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[11];
  assign \$662  = \$661  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[14];
  assign \$663  = \$662  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[15];
  assign \$664  = \$663  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[17];
  assign \$665  = \$664  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[19];
  assign \$666  = \$665  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[20];
  assign \$667  = \$666  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[23];
  assign \$668  = \$667  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[26];
  assign \$669  = \$668  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[29];
  assign \$670  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$672  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$673  = \$671  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$672 [4];
  assign \$674  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$675  = \$673  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$674 [5];
  assign \$676  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$677  = \$675  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$676 [7];
  assign \$678  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$679  = \$677  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$678 [8];
  assign \$680  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$681  = \$679  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$680 [9];
  assign \$682  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$683  = \$681  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$682 [12];
  assign \$684  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$685  = \$683  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$684 [15];
  assign \$686  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$687  = \$685  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$686 [16];
  assign \$688  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$689  = \$687  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$688 [18];
  assign \$690  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$691  = \$689  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$690 [20];
  assign \$692  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$693  = \$691  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$692 [21];
  assign \$694  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$695  = \$693  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$694 [24];
  assign \$696  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$697  = \$695  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$696 [27];
  assign \$698  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$699  = \$697  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$698 [30];
  assign \$700  = \$699  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[3];
  assign \$701  = \$700  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[4];
  assign \$702  = \$701  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[5];
  assign \$703  = \$702  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[7];
  assign \$704  = \$703  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[8];
  assign \$705  = \$704  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[9];
  assign \$706  = \$705  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[12];
  assign \$707  = \$706  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[15];
  assign \$708  = \$707  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[16];
  assign \$709  = \$708  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[18];
  assign \$710  = \$709  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[20];
  assign \$711  = \$710  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[21];
  assign \$712  = \$711  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[24];
  assign \$713  = \$712  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[27];
  assign \$714  = \$713  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[30];
  assign \$715  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$717  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$718  = \$716  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$717 [4];
  assign \$719  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$720  = \$718  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$719 [5];
  assign \$721  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$722  = \$720  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$721 [8];
  assign \$723  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$724  = \$722  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$723 [12];
  assign \$725  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$726  = \$724  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$725 [13];
  assign \$727  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$728  = \$726  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$727 [17];
  assign \$729  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$730  = \$728  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$729 [19];
  assign \$731  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$732  = \$730  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$731 [21];
  assign \$733  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$734  = \$732  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$733 [22];
  assign \$735  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$736  = \$734  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$735 [24];
  assign \$737  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$738  = \$736  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$737 [26];
  assign \$739  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$740  = \$738  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$739 [29];
  assign \$741  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$742  = \$740  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$741 [30];
  assign \$743  = \$742  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[0];
  assign \$744  = \$743  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[4];
  assign \$745  = \$744  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[5];
  assign \$746  = \$745  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[8];
  assign \$747  = \$746  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[12];
  assign \$748  = \$747  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[13];
  assign \$749  = \$748  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[17];
  assign \$750  = \$749  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[19];
  assign \$751  = \$750  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[21];
  assign \$752  = \$751  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[22];
  assign \$753  = \$752  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[24];
  assign \$754  = \$753  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[26];
  assign \$755  = \$754  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[29];
  assign \$756  = \$755  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[30];
  assign \$757  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$759  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$760  = \$758  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$759 [5];
  assign \$761  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$762  = \$760  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$761 [6];
  assign \$763  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$764  = \$762  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$763 [9];
  assign \$765  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$766  = \$764  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$765 [13];
  assign \$767  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$768  = \$766  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$767 [14];
  assign \$769  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$770  = \$768  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$769 [18];
  assign \$771  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$772  = \$770  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$771 [20];
  assign \$773  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$774  = \$772  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$773 [22];
  assign \$775  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$776  = \$774  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$775 [23];
  assign \$777  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$778  = \$776  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$777 [25];
  assign \$779  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$780  = \$778  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$779 [27];
  assign \$781  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$782  = \$780  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$781 [30];
  assign \$783  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$784  = \$782  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$783 [31];
  assign \$785  = \$784  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[1];
  assign \$786  = \$785  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[5];
  assign \$787  = \$786  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[6];
  assign \$788  = \$787  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[9];
  assign \$789  = \$788  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[13];
  assign \$790  = \$789  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[14];
  assign \$791  = \$790  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[18];
  assign \$792  = \$791  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[20];
  assign \$793  = \$792  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[22];
  assign \$794  = \$793  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[23];
  assign \$795  = \$794  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[25];
  assign \$796  = \$795  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[27];
  assign \$797  = \$796  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[30];
  assign \$798  = \$797  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[31];
  assign \$799  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$801  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$802  = \$800  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$801 [6];
  assign \$803  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$804  = \$802  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$803 [7];
  assign \$805  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$806  = \$804  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$805 [10];
  assign \$807  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$808  = \$806  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$807 [14];
  assign \$809  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$810  = \$808  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$809 [15];
  assign \$811  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$812  = \$810  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$811 [19];
  assign \$813  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$814  = \$812  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$813 [21];
  assign \$815  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$816  = \$814  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$815 [23];
  assign \$817  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$818  = \$816  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$817 [24];
  assign \$819  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$820  = \$818  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$819 [26];
  assign \$821  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$822  = \$820  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$821 [28];
  assign \$823  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$824  = \$822  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$823 [31];
  assign \$825  = \$824  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[2];
  assign \$826  = \$825  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[6];
  assign \$827  = \$826  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[7];
  assign \$828  = \$827  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[10];
  assign \$829  = \$828  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[14];
  assign \$830  = \$829  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[15];
  assign \$831  = \$830  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[19];
  assign \$832  = \$831  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[21];
  assign \$833  = \$832  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[23];
  assign \$834  = \$833  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[24];
  assign \$835  = \$834  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[26];
  assign \$836  = \$835  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[28];
  assign \$837  = \$836  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[31];
  assign \$838  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$840  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$841  = \$839  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$840 [7];
  assign \$842  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$843  = \$841  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$842 [8];
  assign \$844  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$845  = \$843  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$844 [11];
  assign \$846  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$847  = \$845  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$846 [15];
  assign \$848  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$849  = \$847  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$848 [16];
  assign \$850  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$851  = \$849  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$850 [20];
  assign \$852  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$853  = \$851  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$852 [22];
  assign \$854  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$855  = \$853  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$854 [24];
  assign \$856  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$857  = \$855  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$856 [25];
  assign \$858  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$859  = \$857  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$858 [27];
  assign \$860  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$861  = \$859  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$860 [29];
  assign \$862  = \$861  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[3];
  assign \$863  = \$862  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[7];
  assign \$864  = \$863  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[8];
  assign \$865  = \$864  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[11];
  assign \$866  = \$865  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[15];
  assign \$867  = \$866  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[16];
  assign \$868  = \$867  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[20];
  assign \$869  = \$868  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[22];
  assign \$870  = \$869  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[24];
  assign \$871  = \$870  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[25];
  assign \$872  = \$871  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[27];
  assign \$873  = \$872  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[29];
  assign \$874  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$876  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$877  = \$875  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$876 [8];
  assign \$878  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$879  = \$877  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$878 [9];
  assign \$880  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$881  = \$879  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$880 [12];
  assign \$882  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$883  = \$881  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$882 [16];
  assign \$884  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$885  = \$883  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$884 [17];
  assign \$886  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$887  = \$885  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$886 [21];
  assign \$888  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$889  = \$887  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$888 [23];
  assign \$890  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$891  = \$889  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$890 [25];
  assign \$892  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$893  = \$891  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$892 [26];
  assign \$894  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$895  = \$893  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$894 [28];
  assign \$896  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$897  = \$895  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$896 [30];
  assign \$898  = \$897  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[4];
  assign \$899  = \$898  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[8];
  assign \$900  = \$899  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[9];
  assign \$901  = \$900  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[12];
  assign \$902  = \$901  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[16];
  assign \$903  = \$902  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[17];
  assign \$904  = \$903  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[21];
  assign \$905  = \$904  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[23];
  assign \$906  = \$905  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[25];
  assign \$907  = \$906  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[26];
  assign \$908  = \$907  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[28];
  assign \$909  = \$908  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[30];
  assign \$910  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$912  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$913  = \$911  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$912 [9];
  assign \$914  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$915  = \$913  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$914 [10];
  assign \$916  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$917  = \$915  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$916 [13];
  assign \$918  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$919  = \$917  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$918 [17];
  assign \$920  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$921  = \$919  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$920 [18];
  assign \$922  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$923  = \$921  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$922 [22];
  assign \$924  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$925  = \$923  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$924 [24];
  assign \$926  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$927  = \$925  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$926 [26];
  assign \$928  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$929  = \$927  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$928 [27];
  assign \$930  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$931  = \$929  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$930 [29];
  assign \$932  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$933  = \$931  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$932 [31];
  assign \$934  = \$933  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[5];
  assign \$935  = \$934  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[9];
  assign \$936  = \$935  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[10];
  assign \$937  = \$936  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[13];
  assign \$938  = \$937  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[17];
  assign \$939  = \$938  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[18];
  assign \$940  = \$939  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[22];
  assign \$941  = \$940  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[24];
  assign \$942  = \$941  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[26];
  assign \$943  = \$942  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[27];
  assign \$944  = \$943  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[29];
  assign \$945  = \$944  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[31];
  assign \$946  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$948  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$949  = \$947  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$948 [9];
  assign \$950  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$951  = \$949  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$950 [11];
  assign \$952  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$953  = \$951  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$952 [12];
  assign \$954  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$955  = \$953  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$954 [14];
  assign \$956  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$957  = \$955  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$956 [16];
  assign \$958  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$959  = \$957  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$958 [18];
  assign \$960  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$961  = \$959  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$960 [19];
  assign \$962  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$963  = \$961  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$962 [23];
  assign \$964  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$965  = \$963  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$964 [24];
  assign \$966  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$967  = \$965  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$966 [26];
  assign \$968  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$969  = \$967  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$968 [27];
  assign \$970  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$971  = \$969  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$970 [29];
  assign \$972  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$973  = \$971  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$972 [31];
  assign \$974  = \$973  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[0];
  assign \$975  = \$974  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[9];
  assign \$976  = \$975  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[11];
  assign \$977  = \$976  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[12];
  assign \$978  = \$977  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[14];
  assign \$979  = \$978  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[16];
  assign \$980  = \$979  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[18];
  assign \$981  = \$980  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[19];
  assign \$982  = \$981  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[23];
  assign \$983  = \$982  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[24];
  assign \$984  = \$983  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[26];
  assign \$985  = \$984  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[27];
  assign \$986  = \$985  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[29];
  assign \$987  = \$986  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[31];
  assign \$988  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$990  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$991  = \$989  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$990 [1];
  assign \$992  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$993  = \$991  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$992 [6];
  assign \$994  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$995  = \$993  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$994 [9];
  assign \$996  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$997  = \$995  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$996 [13];
  assign \$998  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$999  = \$997  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$998 [15];
  assign \$1000  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1001  = \$999  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1000 [16];
  assign \$1002  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1003  = \$1001  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1002 [17];
  assign \$1004  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1005  = \$1003  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1004 [19];
  assign \$1006  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1007  = \$1005  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1006 [20];
  assign \$1008  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1009  = \$1007  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1008 [26];
  assign \$1010  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1011  = \$1009  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1010 [27];
  assign \$1012  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1013  = \$1011  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1012 [29];
  assign \$1014  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1015  = \$1013  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1014 [31];
  assign \$1016  = \$1015  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[0];
  assign \$1017  = \$1016  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[1];
  assign \$1018  = \$1017  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[6];
  assign \$1019  = \$1018  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[9];
  assign \$1020  = \$1019  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[13];
  assign \$1021  = \$1020  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[15];
  assign \$1022  = \$1021  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[16];
  assign \$1023  = \$1022  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[17];
  assign \$1024  = \$1023  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[19];
  assign \$1025  = \$1024  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[20];
  assign \$1026  = \$1025  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[26];
  assign \$1027  = \$1026  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[27];
  assign \$1028  = \$1027  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[29];
  assign \$1029  = \$1028  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[31];
  assign \$1030  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1032  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1033  = \$1031  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1032 [2];
  assign \$1034  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1035  = \$1033  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1034 [7];
  assign \$1036  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1037  = \$1035  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1036 [10];
  assign \$1038  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1039  = \$1037  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1038 [14];
  assign \$1040  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1041  = \$1039  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1040 [16];
  assign \$1042  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1043  = \$1041  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1042 [17];
  assign \$1044  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1045  = \$1043  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1044 [18];
  assign \$1046  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1047  = \$1045  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1046 [20];
  assign \$1048  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1049  = \$1047  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1048 [21];
  assign \$1050  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1051  = \$1049  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1050 [27];
  assign \$1052  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1053  = \$1051  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1052 [28];
  assign \$1054  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1055  = \$1053  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1054 [30];
  assign \$1056  = \$1055  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[1];
  assign \$1057  = \$1056  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[2];
  assign \$1058  = \$1057  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[7];
  assign \$1059  = \$1058  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[10];
  assign \$1060  = \$1059  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[14];
  assign \$1061  = \$1060  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[16];
  assign \$1062  = \$1061  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[17];
  assign \$1063  = \$1062  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[18];
  assign \$1064  = \$1063  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[20];
  assign \$1065  = \$1064  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[21];
  assign \$1066  = \$1065  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[27];
  assign \$1067  = \$1066  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[28];
  assign \$1068  = \$1067  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[30];
  assign \$1069  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1071  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1072  = \$1070  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1071 [3];
  assign \$1073  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1074  = \$1072  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1073 [8];
  assign \$1075  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1076  = \$1074  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1075 [11];
  assign \$1077  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1078  = \$1076  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1077 [15];
  assign \$1079  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1080  = \$1078  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1079 [17];
  assign \$1081  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1082  = \$1080  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1081 [18];
  assign \$1083  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1084  = \$1082  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1083 [19];
  assign \$1085  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1086  = \$1084  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1085 [21];
  assign \$1087  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1088  = \$1086  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1087 [22];
  assign \$1089  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1090  = \$1088  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1089 [28];
  assign \$1091  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1092  = \$1090  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1091 [29];
  assign \$1093  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1094  = \$1092  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1093 [31];
  assign \$1095  = \$1094  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[2];
  assign \$1096  = \$1095  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[3];
  assign \$1097  = \$1096  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[8];
  assign \$1098  = \$1097  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[11];
  assign \$1099  = \$1098  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[15];
  assign \$1100  = \$1099  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[17];
  assign \$1101  = \$1100  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[18];
  assign \$1102  = \$1101  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[19];
  assign \$1103  = \$1102  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[21];
  assign \$1104  = \$1103  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[22];
  assign \$1105  = \$1104  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[28];
  assign \$1106  = \$1105  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[29];
  assign \$1107  = \$1106  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[31];
  assign \$1108  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1110  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1111  = \$1109  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1110 [3];
  assign \$1112  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1113  = \$1111  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1112 [4];
  assign \$1114  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1115  = \$1113  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1114 [6];
  assign \$1116  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1117  = \$1115  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1116 [10];
  assign \$1118  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1119  = \$1117  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1118 [18];
  assign \$1120  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1121  = \$1119  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1120 [19];
  assign \$1122  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1123  = \$1121  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1122 [20];
  assign \$1124  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1125  = \$1123  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1124 [22];
  assign \$1126  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1127  = \$1125  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1126 [23];
  assign \$1128  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1129  = \$1127  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1128 [24];
  assign \$1130  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1131  = \$1129  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1130 [25];
  assign \$1132  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1133  = \$1131  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1132 [26];
  assign \$1134  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1135  = \$1133  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1134 [28];
  assign \$1136  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1137  = \$1135  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1136 [31];
  assign \$1138  = \$1137  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[0];
  assign \$1139  = \$1138  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[3];
  assign \$1140  = \$1139  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[4];
  assign \$1141  = \$1140  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[6];
  assign \$1142  = \$1141  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[10];
  assign \$1143  = \$1142  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[18];
  assign \$1144  = \$1143  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[19];
  assign \$1145  = \$1144  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[20];
  assign \$1146  = \$1145  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[22];
  assign \$1147  = \$1146  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[23];
  assign \$1148  = \$1147  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[24];
  assign \$1149  = \$1148  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[25];
  assign \$1150  = \$1149  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[26];
  assign \$1151  = \$1150  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[28];
  assign \$1152  = \$1151  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[31];
  assign \$1153  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1155  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1156  = \$1154  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1155 [4];
  assign \$1157  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1158  = \$1156  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1157 [5];
  assign \$1159  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1160  = \$1158  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1159 [7];
  assign \$1161  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1162  = \$1160  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1161 [11];
  assign \$1163  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1164  = \$1162  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1163 [19];
  assign \$1165  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1166  = \$1164  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1165 [20];
  assign \$1167  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1168  = \$1166  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1167 [21];
  assign \$1169  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1170  = \$1168  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1169 [23];
  assign \$1171  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1172  = \$1170  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1171 [24];
  assign \$1173  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1174  = \$1172  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1173 [25];
  assign \$1175  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1176  = \$1174  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1175 [26];
  assign \$1177  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1178  = \$1176  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1177 [27];
  assign \$1179  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1180  = \$1178  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1179 [29];
  assign \$1181  = \$1180  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[1];
  assign \$1182  = \$1181  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[4];
  assign \$1183  = \$1182  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[5];
  assign \$1184  = \$1183  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[7];
  assign \$1185  = \$1184  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[11];
  assign \$1186  = \$1185  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[19];
  assign \$1187  = \$1186  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[20];
  assign \$1188  = \$1187  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[21];
  assign \$1189  = \$1188  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[23];
  assign \$1190  = \$1189  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[24];
  assign \$1191  = \$1190  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[25];
  assign \$1192  = \$1191  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[26];
  assign \$1193  = \$1192  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[27];
  assign \$1194  = \$1193  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[29];
  assign \$1195  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1197  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1198  = \$1196  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1197 [5];
  assign \$1199  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1200  = \$1198  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1199 [6];
  assign \$1201  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1202  = \$1200  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1201 [8];
  assign \$1203  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1204  = \$1202  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1203 [12];
  assign \$1205  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1206  = \$1204  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1205 [20];
  assign \$1207  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1208  = \$1206  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1207 [21];
  assign \$1209  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1210  = \$1208  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1209 [22];
  assign \$1211  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1212  = \$1210  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1211 [24];
  assign \$1213  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1214  = \$1212  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1213 [25];
  assign \$1215  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1216  = \$1214  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1215 [26];
  assign \$1217  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1218  = \$1216  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1217 [27];
  assign \$1219  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1220  = \$1218  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1219 [28];
  assign \$1221  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1222  = \$1220  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1221 [30];
  assign \$1223  = \$1222  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[2];
  assign \$1224  = \$1223  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[5];
  assign \$1225  = \$1224  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[6];
  assign \$1226  = \$1225  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[8];
  assign \$1227  = \$1226  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[12];
  assign \$1228  = \$1227  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[20];
  assign \$1229  = \$1228  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[21];
  assign \$1230  = \$1229  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[22];
  assign \$1231  = \$1230  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[24];
  assign \$1232  = \$1231  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[25];
  assign \$1233  = \$1232  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[26];
  assign \$1234  = \$1233  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[27];
  assign \$1235  = \$1234  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[28];
  assign \$1236  = \$1235  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[30];
  assign \$1237  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1239  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1240  = \$1238  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1239 [6];
  assign \$1241  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1242  = \$1240  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1241 [7];
  assign \$1243  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1244  = \$1242  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1243 [9];
  assign \$1245  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1246  = \$1244  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1245 [13];
  assign \$1247  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1248  = \$1246  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1247 [21];
  assign \$1249  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1250  = \$1248  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1249 [22];
  assign \$1251  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1252  = \$1250  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1251 [23];
  assign \$1253  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1254  = \$1252  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1253 [25];
  assign \$1255  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1256  = \$1254  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1255 [26];
  assign \$1257  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1258  = \$1256  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1257 [27];
  assign \$1259  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1260  = \$1258  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1259 [28];
  assign \$1261  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1262  = \$1260  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1261 [29];
  assign \$1263  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1264  = \$1262  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1263 [31];
  assign \$1265  = \$1264  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[3];
  assign \$1266  = \$1265  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[6];
  assign \$1267  = \$1266  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[7];
  assign \$1268  = \$1267  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[9];
  assign \$1269  = \$1268  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[13];
  assign \$1270  = \$1269  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[21];
  assign \$1271  = \$1270  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[22];
  assign \$1272  = \$1271  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[23];
  assign \$1273  = \$1272  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[25];
  assign \$1274  = \$1273  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[26];
  assign \$1275  = \$1274  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[27];
  assign \$1276  = \$1275  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[28];
  assign \$1277  = \$1276  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[29];
  assign \$1278  = \$1277  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[31];
  assign \$1279  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1281  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1282  = \$1280  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1281 [7];
  assign \$1283  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1284  = \$1282  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1283 [8];
  assign \$1285  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1286  = \$1284  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1285 [10];
  assign \$1287  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1288  = \$1286  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1287 [14];
  assign \$1289  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1290  = \$1288  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1289 [22];
  assign \$1291  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1292  = \$1290  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1291 [23];
  assign \$1293  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1294  = \$1292  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1293 [24];
  assign \$1295  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1296  = \$1294  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1295 [26];
  assign \$1297  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1298  = \$1296  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1297 [27];
  assign \$1299  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1300  = \$1298  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1299 [28];
  assign \$1301  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1302  = \$1300  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1301 [29];
  assign \$1303  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1304  = \$1302  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1303 [30];
  assign \$1305  = \$1304  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[4];
  assign \$1306  = \$1305  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[7];
  assign \$1307  = \$1306  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[8];
  assign \$1308  = \$1307  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[10];
  assign \$1309  = \$1308  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[14];
  assign \$1310  = \$1309  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[22];
  assign \$1311  = \$1310  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[23];
  assign \$1312  = \$1311  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[24];
  assign \$1313  = \$1312  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[26];
  assign \$1314  = \$1313  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[27];
  assign \$1315  = \$1314  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[28];
  assign \$1316  = \$1315  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[29];
  assign \$1317  = \$1316  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[30];
  assign \$1318  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1320  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1321  = \$1319  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1320 [8];
  assign \$1322  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1323  = \$1321  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1322 [9];
  assign \$1324  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1325  = \$1323  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1324 [11];
  assign \$1326  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1327  = \$1325  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1326 [15];
  assign \$1328  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1329  = \$1327  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1328 [23];
  assign \$1330  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1331  = \$1329  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1330 [24];
  assign \$1332  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1333  = \$1331  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1332 [25];
  assign \$1334  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1335  = \$1333  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1334 [27];
  assign \$1336  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1337  = \$1335  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1336 [28];
  assign \$1338  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1339  = \$1337  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1338 [29];
  assign \$1340  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1341  = \$1339  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1340 [30];
  assign \$1342  = start ? (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:338" *) 32'd4294967295 : crc_reg;
  assign \$1343  = \$1341  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:344" *) \$1342 [31];
  assign \$1344  = \$1343  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[5];
  assign \$1345  = \$1344  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[8];
  assign \$1346  = \$1345  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[9];
  assign \$1347  = \$1346  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[11];
  assign \$1348  = \$1347  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[15];
  assign \$1349  = \$1348  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[23];
  assign \$1350  = \$1349  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[24];
  assign \$1351  = \$1350  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[25];
  assign \$1352  = \$1351  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[27];
  assign \$1353  = \$1352  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[28];
  assign \$1354  = \$1353  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[29];
  assign \$1355  = \$1354  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[30];
  assign \$1356  = \$1355  ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:347" *) data_in[31];
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\crc\\__init__.py:322" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) crc_reg <= 32'd4294967295;
    else crc_reg <= \$1357 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$5 ) begin end
    \$1357  = crc_reg;
    if (valid) begin
      \$1357 [0] = \$39 ;
      \$1357 [1] = \$78 ;
      \$1357 [2] = \$126 ;
      \$1357 [3] = \$171 ;
      \$1357 [4] = \$222 ;
      \$1357 [5] = \$267 ;
      \$1357 [6] = \$312 ;
      \$1357 [7] = \$360 ;
      \$1357 [8] = \$399 ;
      \$1357 [9] = \$435 ;
      \$1357 [10] = \$474 ;
      \$1357 [11] = \$525 ;
      \$1357 [12] = \$576 ;
      \$1357 [13] = \$624 ;
      \$1357 [14] = \$669 ;
      \$1357 [15] = \$714 ;
      \$1357 [16] = \$756 ;
      \$1357 [17] = \$798 ;
      \$1357 [18] = \$837 ;
      \$1357 [19] = \$873 ;
      \$1357 [20] = \$909 ;
      \$1357 [21] = \$945 ;
      \$1357 [22] = \$987 ;
      \$1357 [23] = \$1029 ;
      \$1357 [24] = \$1068 ;
      \$1357 [25] = \$1107 ;
      \$1357 [26] = \$1152 ;
      \$1357 [27] = \$1194 ;
      \$1357 [28] = \$1236 ;
      \$1357 [29] = \$1278 ;
      \$1357 [30] = \$1317 ;
      \$1357 [31] = \$1356 ;
    end else if (start) begin
      \$1357  = 32'd4294967295;
    end
  end
  assign data = data_in;
  assign crc = crc_reg;
  assign \$2  = \$1 [0];
  assign \$41  = \$40 [0];
  assign \$80  = \$79 [0];
  assign \$128  = \$127 [1];
  assign \$173  = \$172 [0];
  assign \$224  = \$223 [0];
  assign \$269  = \$268 [1];
  assign \$314  = \$313 [0];
  assign \$362  = \$361 [0];
  assign \$401  = \$400 [1];
  assign \$437  = \$436 [0];
  assign \$476  = \$475 [0];
  assign \$527  = \$526 [0];
  assign \$578  = \$577 [1];
  assign \$626  = \$625 [2];
  assign \$671  = \$670 [3];
  assign \$716  = \$715 [0];
  assign \$758  = \$757 [1];
  assign \$800  = \$799 [2];
  assign \$839  = \$838 [3];
  assign \$875  = \$874 [4];
  assign \$911  = \$910 [5];
  assign \$947  = \$946 [0];
  assign \$989  = \$988 [0];
  assign \$1031  = \$1030 [1];
  assign \$1070  = \$1069 [2];
  assign \$1109  = \$1108 [0];
  assign \$1154  = \$1153 [1];
  assign \$1196  = \$1195 [2];
  assign \$1238  = \$1237 [3];
  assign \$1280  = \$1279 [4];
  assign \$1319  = \$1318 [5];
endmodule

(* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:80" *)
(* generator = "Amaranth" *)
module \Controller.em_serial_controller_shift_dma_4 (sync_100_rst, read_bram_address_input, write_bram_address_input, read_node_address_input, write_node_address_input, data_input, read_complete_input, write_complete_input, bram_read_data, write_bram_address_output, read_bram_address_output, write_node_address_output, read_node_address_output, write_complete_output, data_output, read_complete_output, bram_address, bram_write_data, bram_write_enable, sync_100_clk);
  reg \$auto$verilog_backend.cc:2352:dump_module$6  = 0;
  wire \$1 ;
  wire \$10 ;
  wire \$11 ;
  wire \$12 ;
  wire \$13 ;
  wire \$14 ;
  reg \$15 ;
  reg [31:0] \$16 ;
  reg \$17 ;
  reg \$18 ;
  wire \$2 ;
  wire \$3 ;
  wire \$4 ;
  wire \$5 ;
  wire \$6 ;
  wire \$7 ;
  wire \$8 ;
  wire \$9 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:70" *)
  output [15:0] bram_address;
  reg [15:0] bram_address;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:72" *)
  input [31:0] bram_read_data;
  wire [31:0] bram_read_data;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:71" *)
  output [31:0] bram_write_data;
  reg [31:0] bram_write_data;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:73" *)
  output bram_write_enable;
  reg bram_write_enable;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:89" *)
  reg [31:0] buf_data = 32'd0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:86" *)
  reg [15:0] buf_read_bram_address = 16'h0000;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:90" *)
  reg buf_read_complete = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:88" *)
  reg [7:0] buf_read_node_address = 8'h00;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:85" *)
  reg [15:0] buf_write_bram_address = 16'h0000;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:91" *)
  reg buf_write_complete = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:87" *)
  reg [7:0] buf_write_node_address = 8'h00;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:63" *)
  input [31:0] data_input;
  wire [31:0] data_input;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:64" *)
  output [31:0] data_output;
  reg [31:0] data_output = 32'd0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:59" *)
  input [15:0] read_bram_address_input;
  wire [15:0] read_bram_address_input;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:60" *)
  output [15:0] read_bram_address_output;
  reg [15:0] read_bram_address_output = 16'h0000;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:65" *)
  input read_complete_input;
  wire read_complete_input;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:66" *)
  output read_complete_output;
  reg read_complete_output = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:93" *)
  reg read_next = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:55" *)
  input [7:0] read_node_address_input;
  wire [7:0] read_node_address_input;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:56" *)
  output [7:0] read_node_address_output;
  reg [7:0] read_node_address_output = 8'h00;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:273" *)
  input sync_100_clk;
  wire sync_100_clk;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:273" *)
  input sync_100_rst;
  wire sync_100_rst;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:61" *)
  input [15:0] write_bram_address_input;
  wire [15:0] write_bram_address_input;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:62" *)
  output [15:0] write_bram_address_output;
  reg [15:0] write_bram_address_output = 16'h0000;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:67" *)
  input write_complete_input;
  wire write_complete_input;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:68" *)
  output write_complete_output;
  reg write_complete_output = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:57" *)
  input [7:0] write_node_address_input;
  wire [7:0] write_node_address_input;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:58" *)
  output [7:0] write_node_address_output;
  reg [7:0] write_node_address_output = 8'h00;
  assign \$1  = read_node_address_input == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:113" *) 3'h4;
  assign \$2  = ! (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:113" *) read_complete_input;
  assign \$3  = \$1  & (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:113" *) \$2 ;
  assign \$4  = write_node_address_input == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:129" *) 3'h4;
  assign \$5  = \$4  & (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:129" *) read_complete_input;
  assign \$6  = ! (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:129" *) write_complete_input;
  assign \$7  = \$5  & (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:129" *) \$6 ;
  assign \$8  = read_node_address_input == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:113" *) 3'h4;
  assign \$9  = ! (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:113" *) read_complete_input;
  assign \$10  = \$8  & (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:113" *) \$9 ;
  assign \$11  = write_node_address_input == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:129" *) 3'h4;
  assign \$12  = \$11  & (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:129" *) read_complete_input;
  assign \$13  = ! (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:129" *) write_complete_input;
  assign \$14  = \$12  & (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:129" *) \$13 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:85" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_write_bram_address <= 16'h0000;
    else buf_write_bram_address <= write_bram_address_input;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:86" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_read_bram_address <= 16'h0000;
    else buf_read_bram_address <= read_bram_address_input;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:87" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_write_node_address <= 8'h00;
    else buf_write_node_address <= write_node_address_input;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:88" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_read_node_address <= 8'h00;
    else buf_read_node_address <= read_node_address_input;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:62" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) write_bram_address_output <= 16'h0000;
    else write_bram_address_output <= buf_write_bram_address;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:60" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) read_bram_address_output <= 16'h0000;
    else read_bram_address_output <= buf_read_bram_address;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:58" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) write_node_address_output <= 8'h00;
    else write_node_address_output <= buf_write_node_address;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:56" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) read_node_address_output <= 8'h00;
    else read_node_address_output <= buf_read_node_address;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:89" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_data <= 32'd0;
    else buf_data <= data_input;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:90" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_read_complete <= 1'h0;
    else buf_read_complete <= read_complete_input;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:68" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) write_complete_output <= 1'h0;
    else write_complete_output <= buf_write_complete;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:93" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) read_next <= 1'h0;
    else read_next <= \$15 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:64" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) data_output <= 32'd0;
    else data_output <= \$16 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:66" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) read_complete_output <= 1'h0;
    else read_complete_output <= \$17 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:91" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_write_complete <= 1'h0;
    else buf_write_complete <= \$18 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$6 ) begin end
    \$15  = read_next;
    if (\$3 ) begin
      \$15  = 1'h1;
    end else if (read_next) begin
      \$15  = 1'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$6 ) begin end
    (* full_case = 32'd1 *)
    if (read_next) begin
      \$16  = bram_read_data;
    end else begin
      \$16  = buf_data;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$6 ) begin end
    (* full_case = 32'd1 *)
    if (read_next) begin
      \$17  = 1'h1;
    end else begin
      \$17  = buf_read_complete;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$6 ) begin end
    (* full_case = 32'd1 *)
    if (\$7 ) begin
      \$18  = 1'h1;
    end else begin
      \$18  = write_complete_input;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$6 ) begin end
    bram_address = 16'h0000;
    if (\$10 ) begin
      bram_address = read_bram_address_input;
    end
    if (\$14 ) begin
      bram_address = write_bram_address_input;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$6 ) begin end
    bram_write_data = 32'd0;
    if (\$14 ) begin
      bram_write_data = data_input;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$6 ) begin end
    (* full_case = 32'd1 *)
    if (\$14 ) begin
      bram_write_enable = 1'h1;
    end else begin
      bram_write_enable = 1'h0;
    end
  end
endmodule

(* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:60" *)
(* generator = "Amaranth" *)
module \Controller.fanuc_encoders (sync_100_rst, \rx$21 , bram_read_data, req, bram_address, \trigger$20 , sync_100_clk);
  reg \$auto$verilog_backend.cc:2352:dump_module$7  = 0;
  wire [46:0] \$1 ;
  wire [7:0] \$10 ;
  reg [31:0] \$11 ;
  wire [16:0] \$2 ;
  wire [1:0] \$3 ;
  wire [1:0] \$4 ;
  wire [3:0] \$5 ;
  wire [3:0] \$6 ;
  wire [3:0] \$7 ;
  wire [3:0] \$8 ;
  wire [7:0] \$9 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:208" *)
  wire battery_fail;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:30" *)
  input [15:0] bram_address;
  wire [15:0] bram_address;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:32" *)
  output [31:0] bram_read_data;
  reg [31:0] bram_read_data = 32'd0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:207" *)
  wire [9:0] commutation_count;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:212" *)
  wire crc_fail;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:35" *)
  wire [7:0] debug;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:213" *)
  wire done;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:205" *)
  wire [15:0] multiturn_count;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:211" *)
  wire no_response;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:131" *)
  output req;
  wire req;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:201" *)
  wire rx;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:26" *)
  input [5:0] \rx$21 ;
  wire [5:0] \rx$21 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:206" *)
  wire [15:0] singleturn_count;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:273" *)
  input sync_100_clk;
  wire sync_100_clk;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:273" *)
  input sync_100_rst;
  wire sync_100_rst;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:61" *)
  wire [5:0] synced_rx;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:203" *)
  wire trigger;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:28" *)
  input \trigger$20 ;
  wire \trigger$20 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:130" *)
  wire \trigger$6 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:24" *)
  wire [5:0] tx;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:25" *)
  wire [5:0] tx_enable;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:209" *)
  wire unindexed;
  assign \$4  = { 1'h0, battery_fail } | (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:88" *) \$3 ;
  assign \$6  = { 2'h0, \$4  } | (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:88" *) \$5 ;
  assign \$8  = \$6  | (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:88" *) \$7 ;
  assign \$10  = { 4'h0, \$8  } | (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:88" *) \$9 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:32" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) bram_read_data <= 32'd0;
    else bram_read_data <= \$11 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:65" *)
  \Controller.fanuc_encoders.U$1  \U$1  (
    .stage1(trigger),
    .sync_100_clk(sync_100_clk),
    .sync_100_rst(sync_100_rst),
    .trigger(\trigger$20 )
  );
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:66" *)
  \Controller.fanuc_encoders.U$2  \U$2  (
    .rx(\rx$21 ),
    .stage1(synced_rx),
    .sync_100_clk(sync_100_clk),
    .sync_100_rst(sync_100_rst)
  );
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:72" *)
  \Controller.fanuc_encoders.U$3  \U$3  (
    .battery_fail(battery_fail),
    .commutation_count(commutation_count),
    .crc_fail(crc_fail),
    .done(done),
    .multiturn_count(multiturn_count),
    .no_response(no_response),
    .rx(synced_rx[0]),
    .singleturn_count(singleturn_count),
    .sync_100_clk(sync_100_clk),
    .sync_100_rst(sync_100_rst),
    .trigger(trigger),
    .unindexed(unindexed)
  );
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:63" *)
  \Controller.fanuc_encoders.request_pulse  request_pulse (
    .req(req),
    .sync_100_clk(sync_100_clk),
    .sync_100_rst(sync_100_rst),
    .trigger(trigger)
  );
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$7 ) begin end
    (* full_case = 32'd1 *)
    casez (bram_address[3:0])
      4'h0:
          \$11  = { 16'h0000, multiturn_count };
      4'h1:
          \$11  = \$1 [31:0];
      4'h2:
          \$11  = { 15'h0000, \$2  };
      4'h3:
          \$11  = { 24'h000000, \$10  };
      default:
          \$11  = 32'd0;
    endcase
  end
  assign tx_enable = 6'h3f;
  assign tx = { req, req, req, req, req, req };
  assign rx = synced_rx[0];
  assign \trigger$6  = trigger;
  assign debug = bram_address[7:0];
  assign \$1  = { 15'h0000, singleturn_count, 16'h0000 };
  assign \$2  = { 1'h0, commutation_count, 6'h00 };
  assign \$3  = { unindexed, 1'h0 };
  assign \$5  = { 1'h0, no_response, 2'h0 };
  assign \$7  = { crc_fail, 3'h0 };
  assign \$9  = { 3'h0, done, 4'h0 };
endmodule

(* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\cdc.py:101" *)
(* generator = "Amaranth" *)
module \Controller.fanuc_encoders.U$1 (sync_100_rst, stage1, trigger, sync_100_clk);
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\cdc.py:102" *)
  reg stage0 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:130" *)
  output stage1;
  reg stage1 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:273" *)
  input sync_100_clk;
  wire sync_100_clk;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:273" *)
  input sync_100_rst;
  wire sync_100_rst;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:28" *)
  input trigger;
  wire trigger;
  (* init = 1'h0 *)
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:130" *)
  wire \trigger$5 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\cdc.py:102" *)
  always @(posedge sync_100_clk)
    stage0 <= trigger;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\cdc.py:102" *)
  always @(posedge sync_100_clk)
    stage1 <= stage0;
  assign \trigger$5  = stage1;
endmodule

(* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\cdc.py:101" *)
(* generator = "Amaranth" *)
module \Controller.fanuc_encoders.U$2 (sync_100_rst, rx, stage1, sync_100_clk);
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:26" *)
  input [5:0] rx;
  wire [5:0] rx;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\cdc.py:102" *)
  reg [5:0] stage0 = 6'h00;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:61" *)
  output [5:0] stage1;
  reg [5:0] stage1 = 6'h00;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:273" *)
  input sync_100_clk;
  wire sync_100_clk;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:273" *)
  input sync_100_rst;
  wire sync_100_rst;
  (* init = 6'h00 *)
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:61" *)
  wire [5:0] synced_rx;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\cdc.py:102" *)
  always @(posedge sync_100_clk)
    stage0 <= rx;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\lib\\cdc.py:102" *)
  always @(posedge sync_100_clk)
    stage1 <= stage0;
  assign synced_rx = stage1;
endmodule

(* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:219" *)
(* generator = "Amaranth" *)
module \Controller.fanuc_encoders.U$3 (sync_100_rst, trigger, rx, no_response, done, crc_fail, multiturn_count, singleturn_count, commutation_count, battery_fail, unindexed, sync_100_clk);
  reg \$auto$verilog_backend.cc:2352:dump_module$8  = 0;
  wire \$1 ;
  wire \$10 ;
  reg \$100 ;
  reg \$101 ;
  wire \$11 ;
  wire \$12 ;
  wire \$13 ;
  wire \$14 ;
  reg \$15 ;
  reg \$16 ;
  reg [7:0] \$17 ;
  reg [6:0] \$18 ;
  reg [1:0] \$19 ;
  wire \$2 ;
  reg \$20 ;
  reg [15:0] \$21 ;
  reg [15:0] \$22 ;
  reg [9:0] \$23 ;
  reg \$24 ;
  reg \$25 ;
  reg \$26 ;
  reg \$27 ;
  reg \$28 ;
  reg \$29 ;
  wire \$3 ;
  reg \$30 ;
  reg \$31 ;
  reg \$32 ;
  reg \$33 ;
  reg \$34 ;
  reg \$35 ;
  reg \$36 ;
  reg \$37 ;
  reg \$38 ;
  reg \$39 ;
  wire \$4 ;
  reg \$40 ;
  reg \$41 ;
  reg \$42 ;
  reg \$43 ;
  reg \$44 ;
  reg \$45 ;
  reg \$46 ;
  reg \$47 ;
  reg \$48 ;
  reg \$49 ;
  wire [7:0] \$5 ;
  reg \$50 ;
  reg \$51 ;
  reg \$52 ;
  reg \$53 ;
  reg \$54 ;
  reg \$55 ;
  reg \$56 ;
  reg \$57 ;
  reg \$58 ;
  reg \$59 ;
  wire [8:0] \$6 ;
  reg \$60 ;
  reg \$61 ;
  reg \$62 ;
  reg \$63 ;
  reg \$64 ;
  reg \$65 ;
  reg \$66 ;
  reg \$67 ;
  reg \$68 ;
  reg \$69 ;
  wire \$7 ;
  reg \$70 ;
  reg \$71 ;
  reg \$72 ;
  reg \$73 ;
  reg \$74 ;
  reg \$75 ;
  reg \$76 ;
  reg \$77 ;
  reg \$78 ;
  reg \$79 ;
  wire \$8 ;
  reg \$80 ;
  reg \$81 ;
  reg \$82 ;
  reg \$83 ;
  reg \$84 ;
  reg \$85 ;
  reg \$86 ;
  reg \$87 ;
  reg \$88 ;
  reg \$89 ;
  wire \$9 ;
  reg \$90 ;
  reg \$91 ;
  reg \$92 ;
  reg \$93 ;
  reg \$94 ;
  reg \$95 ;
  reg \$96 ;
  reg \$97 ;
  reg \$98 ;
  reg \$99 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:208" *)
  output battery_fail;
  reg battery_fail = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  reg buf_0 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  reg buf_1 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  reg buf_10 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  reg buf_11 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  reg buf_12 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  reg buf_13 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  reg buf_14 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  reg buf_15 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  reg buf_16 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  reg buf_17 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  reg buf_18 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  reg buf_19 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  reg buf_2 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  reg buf_20 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  reg buf_21 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  reg buf_22 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  reg buf_23 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  reg buf_24 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  reg buf_25 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  reg buf_26 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  reg buf_27 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  reg buf_28 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  reg buf_29 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  reg buf_3 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  reg buf_30 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  reg buf_31 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  reg buf_32 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  reg buf_33 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  reg buf_34 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  reg buf_35 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  reg buf_36 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  reg buf_37 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  reg buf_38 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  reg buf_39 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  reg buf_4 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  reg buf_40 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  reg buf_41 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  reg buf_42 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  reg buf_43 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  reg buf_44 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  reg buf_45 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  reg buf_46 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  reg buf_47 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  reg buf_48 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  reg buf_49 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  reg buf_5 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  reg buf_50 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  reg buf_51 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  reg buf_52 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  reg buf_53 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  reg buf_54 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  reg buf_55 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  reg buf_56 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  reg buf_57 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  reg buf_58 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  reg buf_59 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  reg buf_6 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  reg buf_60 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  reg buf_61 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  reg buf_62 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  reg buf_63 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  reg buf_64 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  reg buf_65 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  reg buf_66 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  reg buf_67 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  reg buf_68 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  reg buf_69 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  reg buf_7 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  reg buf_70 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  reg buf_71 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  reg buf_72 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  reg buf_73 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  reg buf_74 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  reg buf_75 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  reg buf_8 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  reg buf_9 = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:192" *)
  reg capture;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:193" *)
  reg [7:0] cnt = 8'h00;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:207" *)
  output [9:0] commutation_count;
  reg [9:0] commutation_count = 10'h000;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:212" *)
  output crc_fail;
  reg crc_fail = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:164" *)
  wire crc_ok;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:165" *)
  output done;
  reg done = 1'h0;
  (* src = "C:\\Program Files\\WindowsApps\\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\\lib\\contextlib.py:142" *)
  reg [1:0] fsm_state = 2'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:194" *)
  reg [6:0] idx = 7'h00;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:162" *)
  wire \input ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:198" *)
  reg input_prev = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:205" *)
  output [15:0] multiturn_count;
  reg [15:0] multiturn_count = 16'h0000;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:211" *)
  output no_response;
  reg no_response = 1'h0;
  (* init = 1'h0 *)
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:165" *)
  wire reset;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:162" *)
  input rx;
  wire rx;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:206" *)
  output [15:0] singleturn_count;
  reg [15:0] singleturn_count = 16'h0000;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:195" *)
  reg [2:0] state;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:163" *)
  wire strobe;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:273" *)
  input sync_100_clk;
  wire sync_100_clk;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:273" *)
  input sync_100_rst;
  wire sync_100_rst;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:203" *)
  input trigger;
  wire trigger;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:209" *)
  output unindexed;
  reg unindexed = 1'h0;
  assign \$1  = ~ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:235" *) rx;
  assign \$2  = input_prev & (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:235" *) \$1 ;
  assign \$3  = ! (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:248" *) cnt;
  assign \$4  = rx != (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:253" *) input_prev;
  assign \$5  = idx + (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:251" *) 1'h1;
  assign \$6  = cnt - (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:257" *) 1'h1;
  assign \$7  = idx == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:259" *) 7'h4c;
  assign \$8  = ~ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:268" *) crc_ok;
  assign \$9  = ~ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:294" *) trigger;
  assign \$10  = ! (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:248" *) cnt;
  assign \$11  = rx != (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:253" *) input_prev;
  assign \$12  = ! (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\hdl\\_dsl.py:490" *) fsm_state;
  assign \$13  = fsm_state == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\hdl\\_dsl.py:490" *) 1'h1;
  assign \$14  = fsm_state == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\hdl\\_dsl.py:490" *) 2'h2;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:198" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) input_prev <= 1'h0;
    else input_prev <= rx;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:211" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) no_response <= 1'h0;
    else no_response <= \$15 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:213" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) done <= 1'h0;
    else done <= \$16 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:193" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) cnt <= 8'h00;
    else cnt <= \$17 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:194" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) idx <= 7'h00;
    else idx <= \$18 ;
  (* src = "C:\\Program Files\\WindowsApps\\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\\lib\\contextlib.py:142" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) fsm_state <= 2'h0;
    else fsm_state <= \$19 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:212" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) crc_fail <= 1'h0;
    else crc_fail <= \$20 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:205" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) multiturn_count <= 16'h0000;
    else multiturn_count <= \$21 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:206" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) singleturn_count <= 16'h0000;
    else singleturn_count <= \$22 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:207" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) commutation_count <= 10'h000;
    else commutation_count <= \$23 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:208" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) battery_fail <= 1'h0;
    else battery_fail <= \$24 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:209" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) unindexed <= 1'h0;
    else unindexed <= \$25 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_0 <= 1'h0;
    else buf_0 <= \$26 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_1 <= 1'h0;
    else buf_1 <= \$27 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_2 <= 1'h0;
    else buf_2 <= \$28 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_3 <= 1'h0;
    else buf_3 <= \$29 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_4 <= 1'h0;
    else buf_4 <= \$30 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_5 <= 1'h0;
    else buf_5 <= \$31 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_6 <= 1'h0;
    else buf_6 <= \$32 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_7 <= 1'h0;
    else buf_7 <= \$33 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_8 <= 1'h0;
    else buf_8 <= \$34 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_9 <= 1'h0;
    else buf_9 <= \$35 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_10 <= 1'h0;
    else buf_10 <= \$36 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_11 <= 1'h0;
    else buf_11 <= \$37 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_12 <= 1'h0;
    else buf_12 <= \$38 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_13 <= 1'h0;
    else buf_13 <= \$39 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_14 <= 1'h0;
    else buf_14 <= \$40 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_15 <= 1'h0;
    else buf_15 <= \$41 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_16 <= 1'h0;
    else buf_16 <= \$42 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_17 <= 1'h0;
    else buf_17 <= \$43 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_18 <= 1'h0;
    else buf_18 <= \$44 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_19 <= 1'h0;
    else buf_19 <= \$45 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_20 <= 1'h0;
    else buf_20 <= \$46 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_21 <= 1'h0;
    else buf_21 <= \$47 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_22 <= 1'h0;
    else buf_22 <= \$48 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_23 <= 1'h0;
    else buf_23 <= \$49 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_24 <= 1'h0;
    else buf_24 <= \$50 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_25 <= 1'h0;
    else buf_25 <= \$51 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_26 <= 1'h0;
    else buf_26 <= \$52 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_27 <= 1'h0;
    else buf_27 <= \$53 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_28 <= 1'h0;
    else buf_28 <= \$54 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_29 <= 1'h0;
    else buf_29 <= \$55 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_30 <= 1'h0;
    else buf_30 <= \$56 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_31 <= 1'h0;
    else buf_31 <= \$57 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_32 <= 1'h0;
    else buf_32 <= \$58 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_33 <= 1'h0;
    else buf_33 <= \$59 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_34 <= 1'h0;
    else buf_34 <= \$60 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_35 <= 1'h0;
    else buf_35 <= \$61 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_36 <= 1'h0;
    else buf_36 <= \$62 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_37 <= 1'h0;
    else buf_37 <= \$63 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_38 <= 1'h0;
    else buf_38 <= \$64 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_39 <= 1'h0;
    else buf_39 <= \$65 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_40 <= 1'h0;
    else buf_40 <= \$66 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_41 <= 1'h0;
    else buf_41 <= \$67 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_42 <= 1'h0;
    else buf_42 <= \$68 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_43 <= 1'h0;
    else buf_43 <= \$69 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_44 <= 1'h0;
    else buf_44 <= \$70 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_45 <= 1'h0;
    else buf_45 <= \$71 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_46 <= 1'h0;
    else buf_46 <= \$72 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_47 <= 1'h0;
    else buf_47 <= \$73 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_48 <= 1'h0;
    else buf_48 <= \$74 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_49 <= 1'h0;
    else buf_49 <= \$75 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_50 <= 1'h0;
    else buf_50 <= \$76 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_51 <= 1'h0;
    else buf_51 <= \$77 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_52 <= 1'h0;
    else buf_52 <= \$78 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_53 <= 1'h0;
    else buf_53 <= \$79 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_54 <= 1'h0;
    else buf_54 <= \$80 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_55 <= 1'h0;
    else buf_55 <= \$81 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_56 <= 1'h0;
    else buf_56 <= \$82 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_57 <= 1'h0;
    else buf_57 <= \$83 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_58 <= 1'h0;
    else buf_58 <= \$84 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_59 <= 1'h0;
    else buf_59 <= \$85 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_60 <= 1'h0;
    else buf_60 <= \$86 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_61 <= 1'h0;
    else buf_61 <= \$87 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_62 <= 1'h0;
    else buf_62 <= \$88 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_63 <= 1'h0;
    else buf_63 <= \$89 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_64 <= 1'h0;
    else buf_64 <= \$90 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_65 <= 1'h0;
    else buf_65 <= \$91 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_66 <= 1'h0;
    else buf_66 <= \$92 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_67 <= 1'h0;
    else buf_67 <= \$93 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_68 <= 1'h0;
    else buf_68 <= \$94 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_69 <= 1'h0;
    else buf_69 <= \$95 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_70 <= 1'h0;
    else buf_70 <= \$96 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_71 <= 1'h0;
    else buf_71 <= \$97 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_72 <= 1'h0;
    else buf_72 <= \$98 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_73 <= 1'h0;
    else buf_73 <= \$99 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_74 <= 1'h0;
    else buf_74 <= \$100 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:227" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_75 <= 1'h0;
    else buf_75 <= \$101 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:221" *)
  \Controller.fanuc_encoders.U$3.crc  crc (
    .crc_ok(crc_ok),
    .\input (rx),
    .reset(done),
    .strobe(capture),
    .sync_100_clk(sync_100_clk),
    .sync_100_rst(sync_100_rst)
  );
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$15  = no_response;
    if (trigger) begin
      \$15  = 1'h1;
    end
    casez (fsm_state)
      2'h0:
          if (\$2 ) begin
            \$15  = 1'h0;
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$16  = done;
    casez (fsm_state)
      2'h0:
          if (\$2 ) begin
            \$16  = 1'h0;
          end
      2'h1:
          /* empty */;
      2'h2:
          \$16  = 1'h1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$17  = cnt;
    casez (fsm_state)
      2'h0:
          if (\$2 ) begin
            \$17  = 8'h90;
          end
      2'h1:
          (* full_case = 32'd1 *)
          if (\$3 ) begin
            \$17  = 8'h60;
          end else if (\$4 ) begin
            \$17  = 8'h2f;
          end else begin
            \$17  = \$6 [7:0];
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$18  = idx;
    casez (fsm_state)
      2'h0:
          if (\$2 ) begin
            \$18  = 7'h00;
          end
      2'h1:
          if (\$3 ) begin
            \$18  = \$5 [6:0];
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$19  = fsm_state;
    casez (fsm_state)
      2'h0:
          if (\$2 ) begin
            \$19  = 2'h1;
          end
      2'h1:
        begin
          if (trigger) begin
            \$19  = 2'h0;
          end
          if (\$7 ) begin
            \$19  = 2'h2;
          end
        end
      2'h2:
          if (\$9 ) begin
            \$19  = 2'h0;
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$20  = crc_fail;
    casez (fsm_state)
      2'h0:
          /* empty */;
      2'h1:
          /* empty */;
      2'h2:
          (* full_case = 32'd1 *)
          if (no_response) begin
          end else if (\$8 ) begin
            \$20  = 1'h1;
          end else begin
            \$20  = 1'h0;
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$21  = multiturn_count;
    casez (fsm_state)
      2'h0:
          /* empty */;
      2'h1:
          /* empty */;
      2'h2:
          (* full_case = 32'd1 *)
          if (no_response) begin
          end else if (\$8 ) begin
          end else begin
            \$21  = { buf_51, buf_50, buf_49, buf_48, buf_47, buf_46, buf_45, buf_44, buf_43, buf_42, buf_41, buf_40, buf_39, buf_38, buf_37, buf_36 };
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$22  = singleturn_count;
    casez (fsm_state)
      2'h0:
          /* empty */;
      2'h1:
          /* empty */;
      2'h2:
          (* full_case = 32'd1 *)
          if (no_response) begin
          end else if (\$8 ) begin
          end else begin
            \$22  = { buf_33, buf_32, buf_31, buf_30, buf_29, buf_28, buf_27, buf_26, buf_25, buf_24, buf_23, buf_22, buf_21, buf_20, buf_19, buf_18 };
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$23  = commutation_count;
    casez (fsm_state)
      2'h0:
          /* empty */;
      2'h1:
          /* empty */;
      2'h2:
          (* full_case = 32'd1 *)
          if (no_response) begin
          end else if (\$8 ) begin
          end else begin
            \$23  = { buf_63, buf_62, buf_61, buf_60, buf_59, buf_58, buf_57, buf_56, buf_55, buf_54 };
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$24  = battery_fail;
    casez (fsm_state)
      2'h0:
          /* empty */;
      2'h1:
          /* empty */;
      2'h2:
          (* full_case = 32'd1 *)
          if (no_response) begin
          end else if (\$8 ) begin
          end else begin
            \$24  = buf_5;
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$25  = unindexed;
    casez (fsm_state)
      2'h0:
          /* empty */;
      2'h1:
          /* empty */;
      2'h2:
          (* full_case = 32'd1 *)
          if (no_response) begin
          end else if (\$8 ) begin
          end else begin
            \$25  = buf_8;
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$26  = buf_0;
    if (capture) begin
      casez (idx)
        7'h00:
            \$26  = rx;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$27  = buf_1;
    if (capture) begin
      casez (idx)
        7'h00:
            /* empty */;
        7'h01:
            \$27  = rx;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$28  = buf_2;
    if (capture) begin
      casez (idx)
        7'h00:
            /* empty */;
        7'h01:
            /* empty */;
        7'h02:
            \$28  = rx;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$29  = buf_3;
    if (capture) begin
      casez (idx)
        7'h00:
            /* empty */;
        7'h01:
            /* empty */;
        7'h02:
            /* empty */;
        7'h03:
            \$29  = rx;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$30  = buf_4;
    if (capture) begin
      casez (idx)
        7'h00:
            /* empty */;
        7'h01:
            /* empty */;
        7'h02:
            /* empty */;
        7'h03:
            /* empty */;
        7'h04:
            \$30  = rx;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$31  = buf_5;
    if (capture) begin
      casez (idx)
        7'h00:
            /* empty */;
        7'h01:
            /* empty */;
        7'h02:
            /* empty */;
        7'h03:
            /* empty */;
        7'h04:
            /* empty */;
        7'h05:
            \$31  = rx;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$32  = buf_6;
    if (capture) begin
      casez (idx)
        7'h00:
            /* empty */;
        7'h01:
            /* empty */;
        7'h02:
            /* empty */;
        7'h03:
            /* empty */;
        7'h04:
            /* empty */;
        7'h05:
            /* empty */;
        7'h06:
            \$32  = rx;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$33  = buf_7;
    if (capture) begin
      casez (idx)
        7'h00:
            /* empty */;
        7'h01:
            /* empty */;
        7'h02:
            /* empty */;
        7'h03:
            /* empty */;
        7'h04:
            /* empty */;
        7'h05:
            /* empty */;
        7'h06:
            /* empty */;
        7'h07:
            \$33  = rx;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$34  = buf_8;
    if (capture) begin
      casez (idx)
        7'h00:
            /* empty */;
        7'h01:
            /* empty */;
        7'h02:
            /* empty */;
        7'h03:
            /* empty */;
        7'h04:
            /* empty */;
        7'h05:
            /* empty */;
        7'h06:
            /* empty */;
        7'h07:
            /* empty */;
        7'h08:
            \$34  = rx;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$35  = buf_9;
    if (capture) begin
      casez (idx)
        7'h00:
            /* empty */;
        7'h01:
            /* empty */;
        7'h02:
            /* empty */;
        7'h03:
            /* empty */;
        7'h04:
            /* empty */;
        7'h05:
            /* empty */;
        7'h06:
            /* empty */;
        7'h07:
            /* empty */;
        7'h08:
            /* empty */;
        7'h09:
            \$35  = rx;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$36  = buf_10;
    if (capture) begin
      casez (idx)
        7'h00:
            /* empty */;
        7'h01:
            /* empty */;
        7'h02:
            /* empty */;
        7'h03:
            /* empty */;
        7'h04:
            /* empty */;
        7'h05:
            /* empty */;
        7'h06:
            /* empty */;
        7'h07:
            /* empty */;
        7'h08:
            /* empty */;
        7'h09:
            /* empty */;
        7'h0a:
            \$36  = rx;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$37  = buf_11;
    if (capture) begin
      casez (idx)
        7'h00:
            /* empty */;
        7'h01:
            /* empty */;
        7'h02:
            /* empty */;
        7'h03:
            /* empty */;
        7'h04:
            /* empty */;
        7'h05:
            /* empty */;
        7'h06:
            /* empty */;
        7'h07:
            /* empty */;
        7'h08:
            /* empty */;
        7'h09:
            /* empty */;
        7'h0a:
            /* empty */;
        7'h0b:
            \$37  = rx;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$38  = buf_12;
    if (capture) begin
      casez (idx)
        7'h00:
            /* empty */;
        7'h01:
            /* empty */;
        7'h02:
            /* empty */;
        7'h03:
            /* empty */;
        7'h04:
            /* empty */;
        7'h05:
            /* empty */;
        7'h06:
            /* empty */;
        7'h07:
            /* empty */;
        7'h08:
            /* empty */;
        7'h09:
            /* empty */;
        7'h0a:
            /* empty */;
        7'h0b:
            /* empty */;
        7'h0c:
            \$38  = rx;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$39  = buf_13;
    if (capture) begin
      casez (idx)
        7'h00:
            /* empty */;
        7'h01:
            /* empty */;
        7'h02:
            /* empty */;
        7'h03:
            /* empty */;
        7'h04:
            /* empty */;
        7'h05:
            /* empty */;
        7'h06:
            /* empty */;
        7'h07:
            /* empty */;
        7'h08:
            /* empty */;
        7'h09:
            /* empty */;
        7'h0a:
            /* empty */;
        7'h0b:
            /* empty */;
        7'h0c:
            /* empty */;
        7'h0d:
            \$39  = rx;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$40  = buf_14;
    if (capture) begin
      casez (idx)
        7'h00:
            /* empty */;
        7'h01:
            /* empty */;
        7'h02:
            /* empty */;
        7'h03:
            /* empty */;
        7'h04:
            /* empty */;
        7'h05:
            /* empty */;
        7'h06:
            /* empty */;
        7'h07:
            /* empty */;
        7'h08:
            /* empty */;
        7'h09:
            /* empty */;
        7'h0a:
            /* empty */;
        7'h0b:
            /* empty */;
        7'h0c:
            /* empty */;
        7'h0d:
            /* empty */;
        7'h0e:
            \$40  = rx;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$41  = buf_15;
    if (capture) begin
      casez (idx)
        7'h00:
            /* empty */;
        7'h01:
            /* empty */;
        7'h02:
            /* empty */;
        7'h03:
            /* empty */;
        7'h04:
            /* empty */;
        7'h05:
            /* empty */;
        7'h06:
            /* empty */;
        7'h07:
            /* empty */;
        7'h08:
            /* empty */;
        7'h09:
            /* empty */;
        7'h0a:
            /* empty */;
        7'h0b:
            /* empty */;
        7'h0c:
            /* empty */;
        7'h0d:
            /* empty */;
        7'h0e:
            /* empty */;
        7'h0f:
            \$41  = rx;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$42  = buf_16;
    if (capture) begin
      casez (idx)
        7'h00:
            /* empty */;
        7'h01:
            /* empty */;
        7'h02:
            /* empty */;
        7'h03:
            /* empty */;
        7'h04:
            /* empty */;
        7'h05:
            /* empty */;
        7'h06:
            /* empty */;
        7'h07:
            /* empty */;
        7'h08:
            /* empty */;
        7'h09:
            /* empty */;
        7'h0a:
            /* empty */;
        7'h0b:
            /* empty */;
        7'h0c:
            /* empty */;
        7'h0d:
            /* empty */;
        7'h0e:
            /* empty */;
        7'h0f:
            /* empty */;
        7'h10:
            \$42  = rx;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$43  = buf_17;
    if (capture) begin
      casez (idx)
        7'h00:
            /* empty */;
        7'h01:
            /* empty */;
        7'h02:
            /* empty */;
        7'h03:
            /* empty */;
        7'h04:
            /* empty */;
        7'h05:
            /* empty */;
        7'h06:
            /* empty */;
        7'h07:
            /* empty */;
        7'h08:
            /* empty */;
        7'h09:
            /* empty */;
        7'h0a:
            /* empty */;
        7'h0b:
            /* empty */;
        7'h0c:
            /* empty */;
        7'h0d:
            /* empty */;
        7'h0e:
            /* empty */;
        7'h0f:
            /* empty */;
        7'h10:
            /* empty */;
        7'h11:
            \$43  = rx;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$44  = buf_18;
    if (capture) begin
      casez (idx)
        7'h00:
            /* empty */;
        7'h01:
            /* empty */;
        7'h02:
            /* empty */;
        7'h03:
            /* empty */;
        7'h04:
            /* empty */;
        7'h05:
            /* empty */;
        7'h06:
            /* empty */;
        7'h07:
            /* empty */;
        7'h08:
            /* empty */;
        7'h09:
            /* empty */;
        7'h0a:
            /* empty */;
        7'h0b:
            /* empty */;
        7'h0c:
            /* empty */;
        7'h0d:
            /* empty */;
        7'h0e:
            /* empty */;
        7'h0f:
            /* empty */;
        7'h10:
            /* empty */;
        7'h11:
            /* empty */;
        7'h12:
            \$44  = rx;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$45  = buf_19;
    if (capture) begin
      casez (idx)
        7'h00:
            /* empty */;
        7'h01:
            /* empty */;
        7'h02:
            /* empty */;
        7'h03:
            /* empty */;
        7'h04:
            /* empty */;
        7'h05:
            /* empty */;
        7'h06:
            /* empty */;
        7'h07:
            /* empty */;
        7'h08:
            /* empty */;
        7'h09:
            /* empty */;
        7'h0a:
            /* empty */;
        7'h0b:
            /* empty */;
        7'h0c:
            /* empty */;
        7'h0d:
            /* empty */;
        7'h0e:
            /* empty */;
        7'h0f:
            /* empty */;
        7'h10:
            /* empty */;
        7'h11:
            /* empty */;
        7'h12:
            /* empty */;
        7'h13:
            \$45  = rx;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$46  = buf_20;
    if (capture) begin
      casez (idx)
        7'h00:
            /* empty */;
        7'h01:
            /* empty */;
        7'h02:
            /* empty */;
        7'h03:
            /* empty */;
        7'h04:
            /* empty */;
        7'h05:
            /* empty */;
        7'h06:
            /* empty */;
        7'h07:
            /* empty */;
        7'h08:
            /* empty */;
        7'h09:
            /* empty */;
        7'h0a:
            /* empty */;
        7'h0b:
            /* empty */;
        7'h0c:
            /* empty */;
        7'h0d:
            /* empty */;
        7'h0e:
            /* empty */;
        7'h0f:
            /* empty */;
        7'h10:
            /* empty */;
        7'h11:
            /* empty */;
        7'h12:
            /* empty */;
        7'h13:
            /* empty */;
        7'h14:
            \$46  = rx;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$47  = buf_21;
    if (capture) begin
      casez (idx)
        7'h00:
            /* empty */;
        7'h01:
            /* empty */;
        7'h02:
            /* empty */;
        7'h03:
            /* empty */;
        7'h04:
            /* empty */;
        7'h05:
            /* empty */;
        7'h06:
            /* empty */;
        7'h07:
            /* empty */;
        7'h08:
            /* empty */;
        7'h09:
            /* empty */;
        7'h0a:
            /* empty */;
        7'h0b:
            /* empty */;
        7'h0c:
            /* empty */;
        7'h0d:
            /* empty */;
        7'h0e:
            /* empty */;
        7'h0f:
            /* empty */;
        7'h10:
            /* empty */;
        7'h11:
            /* empty */;
        7'h12:
            /* empty */;
        7'h13:
            /* empty */;
        7'h14:
            /* empty */;
        7'h15:
            \$47  = rx;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$48  = buf_22;
    if (capture) begin
      casez (idx)
        7'h00:
            /* empty */;
        7'h01:
            /* empty */;
        7'h02:
            /* empty */;
        7'h03:
            /* empty */;
        7'h04:
            /* empty */;
        7'h05:
            /* empty */;
        7'h06:
            /* empty */;
        7'h07:
            /* empty */;
        7'h08:
            /* empty */;
        7'h09:
            /* empty */;
        7'h0a:
            /* empty */;
        7'h0b:
            /* empty */;
        7'h0c:
            /* empty */;
        7'h0d:
            /* empty */;
        7'h0e:
            /* empty */;
        7'h0f:
            /* empty */;
        7'h10:
            /* empty */;
        7'h11:
            /* empty */;
        7'h12:
            /* empty */;
        7'h13:
            /* empty */;
        7'h14:
            /* empty */;
        7'h15:
            /* empty */;
        7'h16:
            \$48  = rx;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$49  = buf_23;
    if (capture) begin
      casez (idx)
        7'h00:
            /* empty */;
        7'h01:
            /* empty */;
        7'h02:
            /* empty */;
        7'h03:
            /* empty */;
        7'h04:
            /* empty */;
        7'h05:
            /* empty */;
        7'h06:
            /* empty */;
        7'h07:
            /* empty */;
        7'h08:
            /* empty */;
        7'h09:
            /* empty */;
        7'h0a:
            /* empty */;
        7'h0b:
            /* empty */;
        7'h0c:
            /* empty */;
        7'h0d:
            /* empty */;
        7'h0e:
            /* empty */;
        7'h0f:
            /* empty */;
        7'h10:
            /* empty */;
        7'h11:
            /* empty */;
        7'h12:
            /* empty */;
        7'h13:
            /* empty */;
        7'h14:
            /* empty */;
        7'h15:
            /* empty */;
        7'h16:
            /* empty */;
        7'h17:
            \$49  = rx;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$50  = buf_24;
    if (capture) begin
      casez (idx)
        7'h00:
            /* empty */;
        7'h01:
            /* empty */;
        7'h02:
            /* empty */;
        7'h03:
            /* empty */;
        7'h04:
            /* empty */;
        7'h05:
            /* empty */;
        7'h06:
            /* empty */;
        7'h07:
            /* empty */;
        7'h08:
            /* empty */;
        7'h09:
            /* empty */;
        7'h0a:
            /* empty */;
        7'h0b:
            /* empty */;
        7'h0c:
            /* empty */;
        7'h0d:
            /* empty */;
        7'h0e:
            /* empty */;
        7'h0f:
            /* empty */;
        7'h10:
            /* empty */;
        7'h11:
            /* empty */;
        7'h12:
            /* empty */;
        7'h13:
            /* empty */;
        7'h14:
            /* empty */;
        7'h15:
            /* empty */;
        7'h16:
            /* empty */;
        7'h17:
            /* empty */;
        7'h18:
            \$50  = rx;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$51  = buf_25;
    if (capture) begin
      casez (idx)
        7'h00:
            /* empty */;
        7'h01:
            /* empty */;
        7'h02:
            /* empty */;
        7'h03:
            /* empty */;
        7'h04:
            /* empty */;
        7'h05:
            /* empty */;
        7'h06:
            /* empty */;
        7'h07:
            /* empty */;
        7'h08:
            /* empty */;
        7'h09:
            /* empty */;
        7'h0a:
            /* empty */;
        7'h0b:
            /* empty */;
        7'h0c:
            /* empty */;
        7'h0d:
            /* empty */;
        7'h0e:
            /* empty */;
        7'h0f:
            /* empty */;
        7'h10:
            /* empty */;
        7'h11:
            /* empty */;
        7'h12:
            /* empty */;
        7'h13:
            /* empty */;
        7'h14:
            /* empty */;
        7'h15:
            /* empty */;
        7'h16:
            /* empty */;
        7'h17:
            /* empty */;
        7'h18:
            /* empty */;
        7'h19:
            \$51  = rx;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$52  = buf_26;
    if (capture) begin
      casez (idx)
        7'h00:
            /* empty */;
        7'h01:
            /* empty */;
        7'h02:
            /* empty */;
        7'h03:
            /* empty */;
        7'h04:
            /* empty */;
        7'h05:
            /* empty */;
        7'h06:
            /* empty */;
        7'h07:
            /* empty */;
        7'h08:
            /* empty */;
        7'h09:
            /* empty */;
        7'h0a:
            /* empty */;
        7'h0b:
            /* empty */;
        7'h0c:
            /* empty */;
        7'h0d:
            /* empty */;
        7'h0e:
            /* empty */;
        7'h0f:
            /* empty */;
        7'h10:
            /* empty */;
        7'h11:
            /* empty */;
        7'h12:
            /* empty */;
        7'h13:
            /* empty */;
        7'h14:
            /* empty */;
        7'h15:
            /* empty */;
        7'h16:
            /* empty */;
        7'h17:
            /* empty */;
        7'h18:
            /* empty */;
        7'h19:
            /* empty */;
        7'h1a:
            \$52  = rx;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$53  = buf_27;
    if (capture) begin
      casez (idx)
        7'h00:
            /* empty */;
        7'h01:
            /* empty */;
        7'h02:
            /* empty */;
        7'h03:
            /* empty */;
        7'h04:
            /* empty */;
        7'h05:
            /* empty */;
        7'h06:
            /* empty */;
        7'h07:
            /* empty */;
        7'h08:
            /* empty */;
        7'h09:
            /* empty */;
        7'h0a:
            /* empty */;
        7'h0b:
            /* empty */;
        7'h0c:
            /* empty */;
        7'h0d:
            /* empty */;
        7'h0e:
            /* empty */;
        7'h0f:
            /* empty */;
        7'h10:
            /* empty */;
        7'h11:
            /* empty */;
        7'h12:
            /* empty */;
        7'h13:
            /* empty */;
        7'h14:
            /* empty */;
        7'h15:
            /* empty */;
        7'h16:
            /* empty */;
        7'h17:
            /* empty */;
        7'h18:
            /* empty */;
        7'h19:
            /* empty */;
        7'h1a:
            /* empty */;
        7'h1b:
            \$53  = rx;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$54  = buf_28;
    if (capture) begin
      casez (idx)
        7'h00:
            /* empty */;
        7'h01:
            /* empty */;
        7'h02:
            /* empty */;
        7'h03:
            /* empty */;
        7'h04:
            /* empty */;
        7'h05:
            /* empty */;
        7'h06:
            /* empty */;
        7'h07:
            /* empty */;
        7'h08:
            /* empty */;
        7'h09:
            /* empty */;
        7'h0a:
            /* empty */;
        7'h0b:
            /* empty */;
        7'h0c:
            /* empty */;
        7'h0d:
            /* empty */;
        7'h0e:
            /* empty */;
        7'h0f:
            /* empty */;
        7'h10:
            /* empty */;
        7'h11:
            /* empty */;
        7'h12:
            /* empty */;
        7'h13:
            /* empty */;
        7'h14:
            /* empty */;
        7'h15:
            /* empty */;
        7'h16:
            /* empty */;
        7'h17:
            /* empty */;
        7'h18:
            /* empty */;
        7'h19:
            /* empty */;
        7'h1a:
            /* empty */;
        7'h1b:
            /* empty */;
        7'h1c:
            \$54  = rx;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$55  = buf_29;
    if (capture) begin
      casez (idx)
        7'h00:
            /* empty */;
        7'h01:
            /* empty */;
        7'h02:
            /* empty */;
        7'h03:
            /* empty */;
        7'h04:
            /* empty */;
        7'h05:
            /* empty */;
        7'h06:
            /* empty */;
        7'h07:
            /* empty */;
        7'h08:
            /* empty */;
        7'h09:
            /* empty */;
        7'h0a:
            /* empty */;
        7'h0b:
            /* empty */;
        7'h0c:
            /* empty */;
        7'h0d:
            /* empty */;
        7'h0e:
            /* empty */;
        7'h0f:
            /* empty */;
        7'h10:
            /* empty */;
        7'h11:
            /* empty */;
        7'h12:
            /* empty */;
        7'h13:
            /* empty */;
        7'h14:
            /* empty */;
        7'h15:
            /* empty */;
        7'h16:
            /* empty */;
        7'h17:
            /* empty */;
        7'h18:
            /* empty */;
        7'h19:
            /* empty */;
        7'h1a:
            /* empty */;
        7'h1b:
            /* empty */;
        7'h1c:
            /* empty */;
        7'h1d:
            \$55  = rx;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$56  = buf_30;
    if (capture) begin
      casez (idx)
        7'h00:
            /* empty */;
        7'h01:
            /* empty */;
        7'h02:
            /* empty */;
        7'h03:
            /* empty */;
        7'h04:
            /* empty */;
        7'h05:
            /* empty */;
        7'h06:
            /* empty */;
        7'h07:
            /* empty */;
        7'h08:
            /* empty */;
        7'h09:
            /* empty */;
        7'h0a:
            /* empty */;
        7'h0b:
            /* empty */;
        7'h0c:
            /* empty */;
        7'h0d:
            /* empty */;
        7'h0e:
            /* empty */;
        7'h0f:
            /* empty */;
        7'h10:
            /* empty */;
        7'h11:
            /* empty */;
        7'h12:
            /* empty */;
        7'h13:
            /* empty */;
        7'h14:
            /* empty */;
        7'h15:
            /* empty */;
        7'h16:
            /* empty */;
        7'h17:
            /* empty */;
        7'h18:
            /* empty */;
        7'h19:
            /* empty */;
        7'h1a:
            /* empty */;
        7'h1b:
            /* empty */;
        7'h1c:
            /* empty */;
        7'h1d:
            /* empty */;
        7'h1e:
            \$56  = rx;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$57  = buf_31;
    if (capture) begin
      casez (idx)
        7'h00:
            /* empty */;
        7'h01:
            /* empty */;
        7'h02:
            /* empty */;
        7'h03:
            /* empty */;
        7'h04:
            /* empty */;
        7'h05:
            /* empty */;
        7'h06:
            /* empty */;
        7'h07:
            /* empty */;
        7'h08:
            /* empty */;
        7'h09:
            /* empty */;
        7'h0a:
            /* empty */;
        7'h0b:
            /* empty */;
        7'h0c:
            /* empty */;
        7'h0d:
            /* empty */;
        7'h0e:
            /* empty */;
        7'h0f:
            /* empty */;
        7'h10:
            /* empty */;
        7'h11:
            /* empty */;
        7'h12:
            /* empty */;
        7'h13:
            /* empty */;
        7'h14:
            /* empty */;
        7'h15:
            /* empty */;
        7'h16:
            /* empty */;
        7'h17:
            /* empty */;
        7'h18:
            /* empty */;
        7'h19:
            /* empty */;
        7'h1a:
            /* empty */;
        7'h1b:
            /* empty */;
        7'h1c:
            /* empty */;
        7'h1d:
            /* empty */;
        7'h1e:
            /* empty */;
        7'h1f:
            \$57  = rx;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$58  = buf_32;
    if (capture) begin
      casez (idx)
        7'h00:
            /* empty */;
        7'h01:
            /* empty */;
        7'h02:
            /* empty */;
        7'h03:
            /* empty */;
        7'h04:
            /* empty */;
        7'h05:
            /* empty */;
        7'h06:
            /* empty */;
        7'h07:
            /* empty */;
        7'h08:
            /* empty */;
        7'h09:
            /* empty */;
        7'h0a:
            /* empty */;
        7'h0b:
            /* empty */;
        7'h0c:
            /* empty */;
        7'h0d:
            /* empty */;
        7'h0e:
            /* empty */;
        7'h0f:
            /* empty */;
        7'h10:
            /* empty */;
        7'h11:
            /* empty */;
        7'h12:
            /* empty */;
        7'h13:
            /* empty */;
        7'h14:
            /* empty */;
        7'h15:
            /* empty */;
        7'h16:
            /* empty */;
        7'h17:
            /* empty */;
        7'h18:
            /* empty */;
        7'h19:
            /* empty */;
        7'h1a:
            /* empty */;
        7'h1b:
            /* empty */;
        7'h1c:
            /* empty */;
        7'h1d:
            /* empty */;
        7'h1e:
            /* empty */;
        7'h1f:
            /* empty */;
        7'h20:
            \$58  = rx;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$59  = buf_33;
    if (capture) begin
      casez (idx)
        7'h00:
            /* empty */;
        7'h01:
            /* empty */;
        7'h02:
            /* empty */;
        7'h03:
            /* empty */;
        7'h04:
            /* empty */;
        7'h05:
            /* empty */;
        7'h06:
            /* empty */;
        7'h07:
            /* empty */;
        7'h08:
            /* empty */;
        7'h09:
            /* empty */;
        7'h0a:
            /* empty */;
        7'h0b:
            /* empty */;
        7'h0c:
            /* empty */;
        7'h0d:
            /* empty */;
        7'h0e:
            /* empty */;
        7'h0f:
            /* empty */;
        7'h10:
            /* empty */;
        7'h11:
            /* empty */;
        7'h12:
            /* empty */;
        7'h13:
            /* empty */;
        7'h14:
            /* empty */;
        7'h15:
            /* empty */;
        7'h16:
            /* empty */;
        7'h17:
            /* empty */;
        7'h18:
            /* empty */;
        7'h19:
            /* empty */;
        7'h1a:
            /* empty */;
        7'h1b:
            /* empty */;
        7'h1c:
            /* empty */;
        7'h1d:
            /* empty */;
        7'h1e:
            /* empty */;
        7'h1f:
            /* empty */;
        7'h20:
            /* empty */;
        7'h21:
            \$59  = rx;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$60  = buf_34;
    if (capture) begin
      casez (idx)
        7'h00:
            /* empty */;
        7'h01:
            /* empty */;
        7'h02:
            /* empty */;
        7'h03:
            /* empty */;
        7'h04:
            /* empty */;
        7'h05:
            /* empty */;
        7'h06:
            /* empty */;
        7'h07:
            /* empty */;
        7'h08:
            /* empty */;
        7'h09:
            /* empty */;
        7'h0a:
            /* empty */;
        7'h0b:
            /* empty */;
        7'h0c:
            /* empty */;
        7'h0d:
            /* empty */;
        7'h0e:
            /* empty */;
        7'h0f:
            /* empty */;
        7'h10:
            /* empty */;
        7'h11:
            /* empty */;
        7'h12:
            /* empty */;
        7'h13:
            /* empty */;
        7'h14:
            /* empty */;
        7'h15:
            /* empty */;
        7'h16:
            /* empty */;
        7'h17:
            /* empty */;
        7'h18:
            /* empty */;
        7'h19:
            /* empty */;
        7'h1a:
            /* empty */;
        7'h1b:
            /* empty */;
        7'h1c:
            /* empty */;
        7'h1d:
            /* empty */;
        7'h1e:
            /* empty */;
        7'h1f:
            /* empty */;
        7'h20:
            /* empty */;
        7'h21:
            /* empty */;
        7'h22:
            \$60  = rx;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$61  = buf_35;
    if (capture) begin
      casez (idx)
        7'h00:
            /* empty */;
        7'h01:
            /* empty */;
        7'h02:
            /* empty */;
        7'h03:
            /* empty */;
        7'h04:
            /* empty */;
        7'h05:
            /* empty */;
        7'h06:
            /* empty */;
        7'h07:
            /* empty */;
        7'h08:
            /* empty */;
        7'h09:
            /* empty */;
        7'h0a:
            /* empty */;
        7'h0b:
            /* empty */;
        7'h0c:
            /* empty */;
        7'h0d:
            /* empty */;
        7'h0e:
            /* empty */;
        7'h0f:
            /* empty */;
        7'h10:
            /* empty */;
        7'h11:
            /* empty */;
        7'h12:
            /* empty */;
        7'h13:
            /* empty */;
        7'h14:
            /* empty */;
        7'h15:
            /* empty */;
        7'h16:
            /* empty */;
        7'h17:
            /* empty */;
        7'h18:
            /* empty */;
        7'h19:
            /* empty */;
        7'h1a:
            /* empty */;
        7'h1b:
            /* empty */;
        7'h1c:
            /* empty */;
        7'h1d:
            /* empty */;
        7'h1e:
            /* empty */;
        7'h1f:
            /* empty */;
        7'h20:
            /* empty */;
        7'h21:
            /* empty */;
        7'h22:
            /* empty */;
        7'h23:
            \$61  = rx;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$62  = buf_36;
    if (capture) begin
      casez (idx)
        7'h00:
            /* empty */;
        7'h01:
            /* empty */;
        7'h02:
            /* empty */;
        7'h03:
            /* empty */;
        7'h04:
            /* empty */;
        7'h05:
            /* empty */;
        7'h06:
            /* empty */;
        7'h07:
            /* empty */;
        7'h08:
            /* empty */;
        7'h09:
            /* empty */;
        7'h0a:
            /* empty */;
        7'h0b:
            /* empty */;
        7'h0c:
            /* empty */;
        7'h0d:
            /* empty */;
        7'h0e:
            /* empty */;
        7'h0f:
            /* empty */;
        7'h10:
            /* empty */;
        7'h11:
            /* empty */;
        7'h12:
            /* empty */;
        7'h13:
            /* empty */;
        7'h14:
            /* empty */;
        7'h15:
            /* empty */;
        7'h16:
            /* empty */;
        7'h17:
            /* empty */;
        7'h18:
            /* empty */;
        7'h19:
            /* empty */;
        7'h1a:
            /* empty */;
        7'h1b:
            /* empty */;
        7'h1c:
            /* empty */;
        7'h1d:
            /* empty */;
        7'h1e:
            /* empty */;
        7'h1f:
            /* empty */;
        7'h20:
            /* empty */;
        7'h21:
            /* empty */;
        7'h22:
            /* empty */;
        7'h23:
            /* empty */;
        7'h24:
            \$62  = rx;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$63  = buf_37;
    if (capture) begin
      casez (idx)
        7'h00:
            /* empty */;
        7'h01:
            /* empty */;
        7'h02:
            /* empty */;
        7'h03:
            /* empty */;
        7'h04:
            /* empty */;
        7'h05:
            /* empty */;
        7'h06:
            /* empty */;
        7'h07:
            /* empty */;
        7'h08:
            /* empty */;
        7'h09:
            /* empty */;
        7'h0a:
            /* empty */;
        7'h0b:
            /* empty */;
        7'h0c:
            /* empty */;
        7'h0d:
            /* empty */;
        7'h0e:
            /* empty */;
        7'h0f:
            /* empty */;
        7'h10:
            /* empty */;
        7'h11:
            /* empty */;
        7'h12:
            /* empty */;
        7'h13:
            /* empty */;
        7'h14:
            /* empty */;
        7'h15:
            /* empty */;
        7'h16:
            /* empty */;
        7'h17:
            /* empty */;
        7'h18:
            /* empty */;
        7'h19:
            /* empty */;
        7'h1a:
            /* empty */;
        7'h1b:
            /* empty */;
        7'h1c:
            /* empty */;
        7'h1d:
            /* empty */;
        7'h1e:
            /* empty */;
        7'h1f:
            /* empty */;
        7'h20:
            /* empty */;
        7'h21:
            /* empty */;
        7'h22:
            /* empty */;
        7'h23:
            /* empty */;
        7'h24:
            /* empty */;
        7'h25:
            \$63  = rx;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$64  = buf_38;
    if (capture) begin
      casez (idx)
        7'h00:
            /* empty */;
        7'h01:
            /* empty */;
        7'h02:
            /* empty */;
        7'h03:
            /* empty */;
        7'h04:
            /* empty */;
        7'h05:
            /* empty */;
        7'h06:
            /* empty */;
        7'h07:
            /* empty */;
        7'h08:
            /* empty */;
        7'h09:
            /* empty */;
        7'h0a:
            /* empty */;
        7'h0b:
            /* empty */;
        7'h0c:
            /* empty */;
        7'h0d:
            /* empty */;
        7'h0e:
            /* empty */;
        7'h0f:
            /* empty */;
        7'h10:
            /* empty */;
        7'h11:
            /* empty */;
        7'h12:
            /* empty */;
        7'h13:
            /* empty */;
        7'h14:
            /* empty */;
        7'h15:
            /* empty */;
        7'h16:
            /* empty */;
        7'h17:
            /* empty */;
        7'h18:
            /* empty */;
        7'h19:
            /* empty */;
        7'h1a:
            /* empty */;
        7'h1b:
            /* empty */;
        7'h1c:
            /* empty */;
        7'h1d:
            /* empty */;
        7'h1e:
            /* empty */;
        7'h1f:
            /* empty */;
        7'h20:
            /* empty */;
        7'h21:
            /* empty */;
        7'h22:
            /* empty */;
        7'h23:
            /* empty */;
        7'h24:
            /* empty */;
        7'h25:
            /* empty */;
        7'h26:
            \$64  = rx;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$65  = buf_39;
    if (capture) begin
      casez (idx)
        7'h00:
            /* empty */;
        7'h01:
            /* empty */;
        7'h02:
            /* empty */;
        7'h03:
            /* empty */;
        7'h04:
            /* empty */;
        7'h05:
            /* empty */;
        7'h06:
            /* empty */;
        7'h07:
            /* empty */;
        7'h08:
            /* empty */;
        7'h09:
            /* empty */;
        7'h0a:
            /* empty */;
        7'h0b:
            /* empty */;
        7'h0c:
            /* empty */;
        7'h0d:
            /* empty */;
        7'h0e:
            /* empty */;
        7'h0f:
            /* empty */;
        7'h10:
            /* empty */;
        7'h11:
            /* empty */;
        7'h12:
            /* empty */;
        7'h13:
            /* empty */;
        7'h14:
            /* empty */;
        7'h15:
            /* empty */;
        7'h16:
            /* empty */;
        7'h17:
            /* empty */;
        7'h18:
            /* empty */;
        7'h19:
            /* empty */;
        7'h1a:
            /* empty */;
        7'h1b:
            /* empty */;
        7'h1c:
            /* empty */;
        7'h1d:
            /* empty */;
        7'h1e:
            /* empty */;
        7'h1f:
            /* empty */;
        7'h20:
            /* empty */;
        7'h21:
            /* empty */;
        7'h22:
            /* empty */;
        7'h23:
            /* empty */;
        7'h24:
            /* empty */;
        7'h25:
            /* empty */;
        7'h26:
            /* empty */;
        7'h27:
            \$65  = rx;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$66  = buf_40;
    if (capture) begin
      casez (idx)
        7'h00:
            /* empty */;
        7'h01:
            /* empty */;
        7'h02:
            /* empty */;
        7'h03:
            /* empty */;
        7'h04:
            /* empty */;
        7'h05:
            /* empty */;
        7'h06:
            /* empty */;
        7'h07:
            /* empty */;
        7'h08:
            /* empty */;
        7'h09:
            /* empty */;
        7'h0a:
            /* empty */;
        7'h0b:
            /* empty */;
        7'h0c:
            /* empty */;
        7'h0d:
            /* empty */;
        7'h0e:
            /* empty */;
        7'h0f:
            /* empty */;
        7'h10:
            /* empty */;
        7'h11:
            /* empty */;
        7'h12:
            /* empty */;
        7'h13:
            /* empty */;
        7'h14:
            /* empty */;
        7'h15:
            /* empty */;
        7'h16:
            /* empty */;
        7'h17:
            /* empty */;
        7'h18:
            /* empty */;
        7'h19:
            /* empty */;
        7'h1a:
            /* empty */;
        7'h1b:
            /* empty */;
        7'h1c:
            /* empty */;
        7'h1d:
            /* empty */;
        7'h1e:
            /* empty */;
        7'h1f:
            /* empty */;
        7'h20:
            /* empty */;
        7'h21:
            /* empty */;
        7'h22:
            /* empty */;
        7'h23:
            /* empty */;
        7'h24:
            /* empty */;
        7'h25:
            /* empty */;
        7'h26:
            /* empty */;
        7'h27:
            /* empty */;
        7'h28:
            \$66  = rx;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$67  = buf_41;
    if (capture) begin
      casez (idx)
        7'h00:
            /* empty */;
        7'h01:
            /* empty */;
        7'h02:
            /* empty */;
        7'h03:
            /* empty */;
        7'h04:
            /* empty */;
        7'h05:
            /* empty */;
        7'h06:
            /* empty */;
        7'h07:
            /* empty */;
        7'h08:
            /* empty */;
        7'h09:
            /* empty */;
        7'h0a:
            /* empty */;
        7'h0b:
            /* empty */;
        7'h0c:
            /* empty */;
        7'h0d:
            /* empty */;
        7'h0e:
            /* empty */;
        7'h0f:
            /* empty */;
        7'h10:
            /* empty */;
        7'h11:
            /* empty */;
        7'h12:
            /* empty */;
        7'h13:
            /* empty */;
        7'h14:
            /* empty */;
        7'h15:
            /* empty */;
        7'h16:
            /* empty */;
        7'h17:
            /* empty */;
        7'h18:
            /* empty */;
        7'h19:
            /* empty */;
        7'h1a:
            /* empty */;
        7'h1b:
            /* empty */;
        7'h1c:
            /* empty */;
        7'h1d:
            /* empty */;
        7'h1e:
            /* empty */;
        7'h1f:
            /* empty */;
        7'h20:
            /* empty */;
        7'h21:
            /* empty */;
        7'h22:
            /* empty */;
        7'h23:
            /* empty */;
        7'h24:
            /* empty */;
        7'h25:
            /* empty */;
        7'h26:
            /* empty */;
        7'h27:
            /* empty */;
        7'h28:
            /* empty */;
        7'h29:
            \$67  = rx;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$68  = buf_42;
    if (capture) begin
      casez (idx)
        7'h00:
            /* empty */;
        7'h01:
            /* empty */;
        7'h02:
            /* empty */;
        7'h03:
            /* empty */;
        7'h04:
            /* empty */;
        7'h05:
            /* empty */;
        7'h06:
            /* empty */;
        7'h07:
            /* empty */;
        7'h08:
            /* empty */;
        7'h09:
            /* empty */;
        7'h0a:
            /* empty */;
        7'h0b:
            /* empty */;
        7'h0c:
            /* empty */;
        7'h0d:
            /* empty */;
        7'h0e:
            /* empty */;
        7'h0f:
            /* empty */;
        7'h10:
            /* empty */;
        7'h11:
            /* empty */;
        7'h12:
            /* empty */;
        7'h13:
            /* empty */;
        7'h14:
            /* empty */;
        7'h15:
            /* empty */;
        7'h16:
            /* empty */;
        7'h17:
            /* empty */;
        7'h18:
            /* empty */;
        7'h19:
            /* empty */;
        7'h1a:
            /* empty */;
        7'h1b:
            /* empty */;
        7'h1c:
            /* empty */;
        7'h1d:
            /* empty */;
        7'h1e:
            /* empty */;
        7'h1f:
            /* empty */;
        7'h20:
            /* empty */;
        7'h21:
            /* empty */;
        7'h22:
            /* empty */;
        7'h23:
            /* empty */;
        7'h24:
            /* empty */;
        7'h25:
            /* empty */;
        7'h26:
            /* empty */;
        7'h27:
            /* empty */;
        7'h28:
            /* empty */;
        7'h29:
            /* empty */;
        7'h2a:
            \$68  = rx;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$69  = buf_43;
    if (capture) begin
      casez (idx)
        7'h00:
            /* empty */;
        7'h01:
            /* empty */;
        7'h02:
            /* empty */;
        7'h03:
            /* empty */;
        7'h04:
            /* empty */;
        7'h05:
            /* empty */;
        7'h06:
            /* empty */;
        7'h07:
            /* empty */;
        7'h08:
            /* empty */;
        7'h09:
            /* empty */;
        7'h0a:
            /* empty */;
        7'h0b:
            /* empty */;
        7'h0c:
            /* empty */;
        7'h0d:
            /* empty */;
        7'h0e:
            /* empty */;
        7'h0f:
            /* empty */;
        7'h10:
            /* empty */;
        7'h11:
            /* empty */;
        7'h12:
            /* empty */;
        7'h13:
            /* empty */;
        7'h14:
            /* empty */;
        7'h15:
            /* empty */;
        7'h16:
            /* empty */;
        7'h17:
            /* empty */;
        7'h18:
            /* empty */;
        7'h19:
            /* empty */;
        7'h1a:
            /* empty */;
        7'h1b:
            /* empty */;
        7'h1c:
            /* empty */;
        7'h1d:
            /* empty */;
        7'h1e:
            /* empty */;
        7'h1f:
            /* empty */;
        7'h20:
            /* empty */;
        7'h21:
            /* empty */;
        7'h22:
            /* empty */;
        7'h23:
            /* empty */;
        7'h24:
            /* empty */;
        7'h25:
            /* empty */;
        7'h26:
            /* empty */;
        7'h27:
            /* empty */;
        7'h28:
            /* empty */;
        7'h29:
            /* empty */;
        7'h2a:
            /* empty */;
        7'h2b:
            \$69  = rx;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$70  = buf_44;
    if (capture) begin
      casez (idx)
        7'h00:
            /* empty */;
        7'h01:
            /* empty */;
        7'h02:
            /* empty */;
        7'h03:
            /* empty */;
        7'h04:
            /* empty */;
        7'h05:
            /* empty */;
        7'h06:
            /* empty */;
        7'h07:
            /* empty */;
        7'h08:
            /* empty */;
        7'h09:
            /* empty */;
        7'h0a:
            /* empty */;
        7'h0b:
            /* empty */;
        7'h0c:
            /* empty */;
        7'h0d:
            /* empty */;
        7'h0e:
            /* empty */;
        7'h0f:
            /* empty */;
        7'h10:
            /* empty */;
        7'h11:
            /* empty */;
        7'h12:
            /* empty */;
        7'h13:
            /* empty */;
        7'h14:
            /* empty */;
        7'h15:
            /* empty */;
        7'h16:
            /* empty */;
        7'h17:
            /* empty */;
        7'h18:
            /* empty */;
        7'h19:
            /* empty */;
        7'h1a:
            /* empty */;
        7'h1b:
            /* empty */;
        7'h1c:
            /* empty */;
        7'h1d:
            /* empty */;
        7'h1e:
            /* empty */;
        7'h1f:
            /* empty */;
        7'h20:
            /* empty */;
        7'h21:
            /* empty */;
        7'h22:
            /* empty */;
        7'h23:
            /* empty */;
        7'h24:
            /* empty */;
        7'h25:
            /* empty */;
        7'h26:
            /* empty */;
        7'h27:
            /* empty */;
        7'h28:
            /* empty */;
        7'h29:
            /* empty */;
        7'h2a:
            /* empty */;
        7'h2b:
            /* empty */;
        7'h2c:
            \$70  = rx;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$71  = buf_45;
    if (capture) begin
      casez (idx)
        7'h00:
            /* empty */;
        7'h01:
            /* empty */;
        7'h02:
            /* empty */;
        7'h03:
            /* empty */;
        7'h04:
            /* empty */;
        7'h05:
            /* empty */;
        7'h06:
            /* empty */;
        7'h07:
            /* empty */;
        7'h08:
            /* empty */;
        7'h09:
            /* empty */;
        7'h0a:
            /* empty */;
        7'h0b:
            /* empty */;
        7'h0c:
            /* empty */;
        7'h0d:
            /* empty */;
        7'h0e:
            /* empty */;
        7'h0f:
            /* empty */;
        7'h10:
            /* empty */;
        7'h11:
            /* empty */;
        7'h12:
            /* empty */;
        7'h13:
            /* empty */;
        7'h14:
            /* empty */;
        7'h15:
            /* empty */;
        7'h16:
            /* empty */;
        7'h17:
            /* empty */;
        7'h18:
            /* empty */;
        7'h19:
            /* empty */;
        7'h1a:
            /* empty */;
        7'h1b:
            /* empty */;
        7'h1c:
            /* empty */;
        7'h1d:
            /* empty */;
        7'h1e:
            /* empty */;
        7'h1f:
            /* empty */;
        7'h20:
            /* empty */;
        7'h21:
            /* empty */;
        7'h22:
            /* empty */;
        7'h23:
            /* empty */;
        7'h24:
            /* empty */;
        7'h25:
            /* empty */;
        7'h26:
            /* empty */;
        7'h27:
            /* empty */;
        7'h28:
            /* empty */;
        7'h29:
            /* empty */;
        7'h2a:
            /* empty */;
        7'h2b:
            /* empty */;
        7'h2c:
            /* empty */;
        7'h2d:
            \$71  = rx;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$72  = buf_46;
    if (capture) begin
      casez (idx)
        7'h00:
            /* empty */;
        7'h01:
            /* empty */;
        7'h02:
            /* empty */;
        7'h03:
            /* empty */;
        7'h04:
            /* empty */;
        7'h05:
            /* empty */;
        7'h06:
            /* empty */;
        7'h07:
            /* empty */;
        7'h08:
            /* empty */;
        7'h09:
            /* empty */;
        7'h0a:
            /* empty */;
        7'h0b:
            /* empty */;
        7'h0c:
            /* empty */;
        7'h0d:
            /* empty */;
        7'h0e:
            /* empty */;
        7'h0f:
            /* empty */;
        7'h10:
            /* empty */;
        7'h11:
            /* empty */;
        7'h12:
            /* empty */;
        7'h13:
            /* empty */;
        7'h14:
            /* empty */;
        7'h15:
            /* empty */;
        7'h16:
            /* empty */;
        7'h17:
            /* empty */;
        7'h18:
            /* empty */;
        7'h19:
            /* empty */;
        7'h1a:
            /* empty */;
        7'h1b:
            /* empty */;
        7'h1c:
            /* empty */;
        7'h1d:
            /* empty */;
        7'h1e:
            /* empty */;
        7'h1f:
            /* empty */;
        7'h20:
            /* empty */;
        7'h21:
            /* empty */;
        7'h22:
            /* empty */;
        7'h23:
            /* empty */;
        7'h24:
            /* empty */;
        7'h25:
            /* empty */;
        7'h26:
            /* empty */;
        7'h27:
            /* empty */;
        7'h28:
            /* empty */;
        7'h29:
            /* empty */;
        7'h2a:
            /* empty */;
        7'h2b:
            /* empty */;
        7'h2c:
            /* empty */;
        7'h2d:
            /* empty */;
        7'h2e:
            \$72  = rx;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$73  = buf_47;
    if (capture) begin
      casez (idx)
        7'h00:
            /* empty */;
        7'h01:
            /* empty */;
        7'h02:
            /* empty */;
        7'h03:
            /* empty */;
        7'h04:
            /* empty */;
        7'h05:
            /* empty */;
        7'h06:
            /* empty */;
        7'h07:
            /* empty */;
        7'h08:
            /* empty */;
        7'h09:
            /* empty */;
        7'h0a:
            /* empty */;
        7'h0b:
            /* empty */;
        7'h0c:
            /* empty */;
        7'h0d:
            /* empty */;
        7'h0e:
            /* empty */;
        7'h0f:
            /* empty */;
        7'h10:
            /* empty */;
        7'h11:
            /* empty */;
        7'h12:
            /* empty */;
        7'h13:
            /* empty */;
        7'h14:
            /* empty */;
        7'h15:
            /* empty */;
        7'h16:
            /* empty */;
        7'h17:
            /* empty */;
        7'h18:
            /* empty */;
        7'h19:
            /* empty */;
        7'h1a:
            /* empty */;
        7'h1b:
            /* empty */;
        7'h1c:
            /* empty */;
        7'h1d:
            /* empty */;
        7'h1e:
            /* empty */;
        7'h1f:
            /* empty */;
        7'h20:
            /* empty */;
        7'h21:
            /* empty */;
        7'h22:
            /* empty */;
        7'h23:
            /* empty */;
        7'h24:
            /* empty */;
        7'h25:
            /* empty */;
        7'h26:
            /* empty */;
        7'h27:
            /* empty */;
        7'h28:
            /* empty */;
        7'h29:
            /* empty */;
        7'h2a:
            /* empty */;
        7'h2b:
            /* empty */;
        7'h2c:
            /* empty */;
        7'h2d:
            /* empty */;
        7'h2e:
            /* empty */;
        7'h2f:
            \$73  = rx;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$74  = buf_48;
    if (capture) begin
      casez (idx)
        7'h00:
            /* empty */;
        7'h01:
            /* empty */;
        7'h02:
            /* empty */;
        7'h03:
            /* empty */;
        7'h04:
            /* empty */;
        7'h05:
            /* empty */;
        7'h06:
            /* empty */;
        7'h07:
            /* empty */;
        7'h08:
            /* empty */;
        7'h09:
            /* empty */;
        7'h0a:
            /* empty */;
        7'h0b:
            /* empty */;
        7'h0c:
            /* empty */;
        7'h0d:
            /* empty */;
        7'h0e:
            /* empty */;
        7'h0f:
            /* empty */;
        7'h10:
            /* empty */;
        7'h11:
            /* empty */;
        7'h12:
            /* empty */;
        7'h13:
            /* empty */;
        7'h14:
            /* empty */;
        7'h15:
            /* empty */;
        7'h16:
            /* empty */;
        7'h17:
            /* empty */;
        7'h18:
            /* empty */;
        7'h19:
            /* empty */;
        7'h1a:
            /* empty */;
        7'h1b:
            /* empty */;
        7'h1c:
            /* empty */;
        7'h1d:
            /* empty */;
        7'h1e:
            /* empty */;
        7'h1f:
            /* empty */;
        7'h20:
            /* empty */;
        7'h21:
            /* empty */;
        7'h22:
            /* empty */;
        7'h23:
            /* empty */;
        7'h24:
            /* empty */;
        7'h25:
            /* empty */;
        7'h26:
            /* empty */;
        7'h27:
            /* empty */;
        7'h28:
            /* empty */;
        7'h29:
            /* empty */;
        7'h2a:
            /* empty */;
        7'h2b:
            /* empty */;
        7'h2c:
            /* empty */;
        7'h2d:
            /* empty */;
        7'h2e:
            /* empty */;
        7'h2f:
            /* empty */;
        7'h30:
            \$74  = rx;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$75  = buf_49;
    if (capture) begin
      casez (idx)
        7'h00:
            /* empty */;
        7'h01:
            /* empty */;
        7'h02:
            /* empty */;
        7'h03:
            /* empty */;
        7'h04:
            /* empty */;
        7'h05:
            /* empty */;
        7'h06:
            /* empty */;
        7'h07:
            /* empty */;
        7'h08:
            /* empty */;
        7'h09:
            /* empty */;
        7'h0a:
            /* empty */;
        7'h0b:
            /* empty */;
        7'h0c:
            /* empty */;
        7'h0d:
            /* empty */;
        7'h0e:
            /* empty */;
        7'h0f:
            /* empty */;
        7'h10:
            /* empty */;
        7'h11:
            /* empty */;
        7'h12:
            /* empty */;
        7'h13:
            /* empty */;
        7'h14:
            /* empty */;
        7'h15:
            /* empty */;
        7'h16:
            /* empty */;
        7'h17:
            /* empty */;
        7'h18:
            /* empty */;
        7'h19:
            /* empty */;
        7'h1a:
            /* empty */;
        7'h1b:
            /* empty */;
        7'h1c:
            /* empty */;
        7'h1d:
            /* empty */;
        7'h1e:
            /* empty */;
        7'h1f:
            /* empty */;
        7'h20:
            /* empty */;
        7'h21:
            /* empty */;
        7'h22:
            /* empty */;
        7'h23:
            /* empty */;
        7'h24:
            /* empty */;
        7'h25:
            /* empty */;
        7'h26:
            /* empty */;
        7'h27:
            /* empty */;
        7'h28:
            /* empty */;
        7'h29:
            /* empty */;
        7'h2a:
            /* empty */;
        7'h2b:
            /* empty */;
        7'h2c:
            /* empty */;
        7'h2d:
            /* empty */;
        7'h2e:
            /* empty */;
        7'h2f:
            /* empty */;
        7'h30:
            /* empty */;
        7'h31:
            \$75  = rx;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$76  = buf_50;
    if (capture) begin
      casez (idx)
        7'h00:
            /* empty */;
        7'h01:
            /* empty */;
        7'h02:
            /* empty */;
        7'h03:
            /* empty */;
        7'h04:
            /* empty */;
        7'h05:
            /* empty */;
        7'h06:
            /* empty */;
        7'h07:
            /* empty */;
        7'h08:
            /* empty */;
        7'h09:
            /* empty */;
        7'h0a:
            /* empty */;
        7'h0b:
            /* empty */;
        7'h0c:
            /* empty */;
        7'h0d:
            /* empty */;
        7'h0e:
            /* empty */;
        7'h0f:
            /* empty */;
        7'h10:
            /* empty */;
        7'h11:
            /* empty */;
        7'h12:
            /* empty */;
        7'h13:
            /* empty */;
        7'h14:
            /* empty */;
        7'h15:
            /* empty */;
        7'h16:
            /* empty */;
        7'h17:
            /* empty */;
        7'h18:
            /* empty */;
        7'h19:
            /* empty */;
        7'h1a:
            /* empty */;
        7'h1b:
            /* empty */;
        7'h1c:
            /* empty */;
        7'h1d:
            /* empty */;
        7'h1e:
            /* empty */;
        7'h1f:
            /* empty */;
        7'h20:
            /* empty */;
        7'h21:
            /* empty */;
        7'h22:
            /* empty */;
        7'h23:
            /* empty */;
        7'h24:
            /* empty */;
        7'h25:
            /* empty */;
        7'h26:
            /* empty */;
        7'h27:
            /* empty */;
        7'h28:
            /* empty */;
        7'h29:
            /* empty */;
        7'h2a:
            /* empty */;
        7'h2b:
            /* empty */;
        7'h2c:
            /* empty */;
        7'h2d:
            /* empty */;
        7'h2e:
            /* empty */;
        7'h2f:
            /* empty */;
        7'h30:
            /* empty */;
        7'h31:
            /* empty */;
        7'h32:
            \$76  = rx;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$77  = buf_51;
    if (capture) begin
      casez (idx)
        7'h00:
            /* empty */;
        7'h01:
            /* empty */;
        7'h02:
            /* empty */;
        7'h03:
            /* empty */;
        7'h04:
            /* empty */;
        7'h05:
            /* empty */;
        7'h06:
            /* empty */;
        7'h07:
            /* empty */;
        7'h08:
            /* empty */;
        7'h09:
            /* empty */;
        7'h0a:
            /* empty */;
        7'h0b:
            /* empty */;
        7'h0c:
            /* empty */;
        7'h0d:
            /* empty */;
        7'h0e:
            /* empty */;
        7'h0f:
            /* empty */;
        7'h10:
            /* empty */;
        7'h11:
            /* empty */;
        7'h12:
            /* empty */;
        7'h13:
            /* empty */;
        7'h14:
            /* empty */;
        7'h15:
            /* empty */;
        7'h16:
            /* empty */;
        7'h17:
            /* empty */;
        7'h18:
            /* empty */;
        7'h19:
            /* empty */;
        7'h1a:
            /* empty */;
        7'h1b:
            /* empty */;
        7'h1c:
            /* empty */;
        7'h1d:
            /* empty */;
        7'h1e:
            /* empty */;
        7'h1f:
            /* empty */;
        7'h20:
            /* empty */;
        7'h21:
            /* empty */;
        7'h22:
            /* empty */;
        7'h23:
            /* empty */;
        7'h24:
            /* empty */;
        7'h25:
            /* empty */;
        7'h26:
            /* empty */;
        7'h27:
            /* empty */;
        7'h28:
            /* empty */;
        7'h29:
            /* empty */;
        7'h2a:
            /* empty */;
        7'h2b:
            /* empty */;
        7'h2c:
            /* empty */;
        7'h2d:
            /* empty */;
        7'h2e:
            /* empty */;
        7'h2f:
            /* empty */;
        7'h30:
            /* empty */;
        7'h31:
            /* empty */;
        7'h32:
            /* empty */;
        7'h33:
            \$77  = rx;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$78  = buf_52;
    if (capture) begin
      casez (idx)
        7'h00:
            /* empty */;
        7'h01:
            /* empty */;
        7'h02:
            /* empty */;
        7'h03:
            /* empty */;
        7'h04:
            /* empty */;
        7'h05:
            /* empty */;
        7'h06:
            /* empty */;
        7'h07:
            /* empty */;
        7'h08:
            /* empty */;
        7'h09:
            /* empty */;
        7'h0a:
            /* empty */;
        7'h0b:
            /* empty */;
        7'h0c:
            /* empty */;
        7'h0d:
            /* empty */;
        7'h0e:
            /* empty */;
        7'h0f:
            /* empty */;
        7'h10:
            /* empty */;
        7'h11:
            /* empty */;
        7'h12:
            /* empty */;
        7'h13:
            /* empty */;
        7'h14:
            /* empty */;
        7'h15:
            /* empty */;
        7'h16:
            /* empty */;
        7'h17:
            /* empty */;
        7'h18:
            /* empty */;
        7'h19:
            /* empty */;
        7'h1a:
            /* empty */;
        7'h1b:
            /* empty */;
        7'h1c:
            /* empty */;
        7'h1d:
            /* empty */;
        7'h1e:
            /* empty */;
        7'h1f:
            /* empty */;
        7'h20:
            /* empty */;
        7'h21:
            /* empty */;
        7'h22:
            /* empty */;
        7'h23:
            /* empty */;
        7'h24:
            /* empty */;
        7'h25:
            /* empty */;
        7'h26:
            /* empty */;
        7'h27:
            /* empty */;
        7'h28:
            /* empty */;
        7'h29:
            /* empty */;
        7'h2a:
            /* empty */;
        7'h2b:
            /* empty */;
        7'h2c:
            /* empty */;
        7'h2d:
            /* empty */;
        7'h2e:
            /* empty */;
        7'h2f:
            /* empty */;
        7'h30:
            /* empty */;
        7'h31:
            /* empty */;
        7'h32:
            /* empty */;
        7'h33:
            /* empty */;
        7'h34:
            \$78  = rx;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$79  = buf_53;
    if (capture) begin
      casez (idx)
        7'h00:
            /* empty */;
        7'h01:
            /* empty */;
        7'h02:
            /* empty */;
        7'h03:
            /* empty */;
        7'h04:
            /* empty */;
        7'h05:
            /* empty */;
        7'h06:
            /* empty */;
        7'h07:
            /* empty */;
        7'h08:
            /* empty */;
        7'h09:
            /* empty */;
        7'h0a:
            /* empty */;
        7'h0b:
            /* empty */;
        7'h0c:
            /* empty */;
        7'h0d:
            /* empty */;
        7'h0e:
            /* empty */;
        7'h0f:
            /* empty */;
        7'h10:
            /* empty */;
        7'h11:
            /* empty */;
        7'h12:
            /* empty */;
        7'h13:
            /* empty */;
        7'h14:
            /* empty */;
        7'h15:
            /* empty */;
        7'h16:
            /* empty */;
        7'h17:
            /* empty */;
        7'h18:
            /* empty */;
        7'h19:
            /* empty */;
        7'h1a:
            /* empty */;
        7'h1b:
            /* empty */;
        7'h1c:
            /* empty */;
        7'h1d:
            /* empty */;
        7'h1e:
            /* empty */;
        7'h1f:
            /* empty */;
        7'h20:
            /* empty */;
        7'h21:
            /* empty */;
        7'h22:
            /* empty */;
        7'h23:
            /* empty */;
        7'h24:
            /* empty */;
        7'h25:
            /* empty */;
        7'h26:
            /* empty */;
        7'h27:
            /* empty */;
        7'h28:
            /* empty */;
        7'h29:
            /* empty */;
        7'h2a:
            /* empty */;
        7'h2b:
            /* empty */;
        7'h2c:
            /* empty */;
        7'h2d:
            /* empty */;
        7'h2e:
            /* empty */;
        7'h2f:
            /* empty */;
        7'h30:
            /* empty */;
        7'h31:
            /* empty */;
        7'h32:
            /* empty */;
        7'h33:
            /* empty */;
        7'h34:
            /* empty */;
        7'h35:
            \$79  = rx;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$80  = buf_54;
    if (capture) begin
      casez (idx)
        7'h00:
            /* empty */;
        7'h01:
            /* empty */;
        7'h02:
            /* empty */;
        7'h03:
            /* empty */;
        7'h04:
            /* empty */;
        7'h05:
            /* empty */;
        7'h06:
            /* empty */;
        7'h07:
            /* empty */;
        7'h08:
            /* empty */;
        7'h09:
            /* empty */;
        7'h0a:
            /* empty */;
        7'h0b:
            /* empty */;
        7'h0c:
            /* empty */;
        7'h0d:
            /* empty */;
        7'h0e:
            /* empty */;
        7'h0f:
            /* empty */;
        7'h10:
            /* empty */;
        7'h11:
            /* empty */;
        7'h12:
            /* empty */;
        7'h13:
            /* empty */;
        7'h14:
            /* empty */;
        7'h15:
            /* empty */;
        7'h16:
            /* empty */;
        7'h17:
            /* empty */;
        7'h18:
            /* empty */;
        7'h19:
            /* empty */;
        7'h1a:
            /* empty */;
        7'h1b:
            /* empty */;
        7'h1c:
            /* empty */;
        7'h1d:
            /* empty */;
        7'h1e:
            /* empty */;
        7'h1f:
            /* empty */;
        7'h20:
            /* empty */;
        7'h21:
            /* empty */;
        7'h22:
            /* empty */;
        7'h23:
            /* empty */;
        7'h24:
            /* empty */;
        7'h25:
            /* empty */;
        7'h26:
            /* empty */;
        7'h27:
            /* empty */;
        7'h28:
            /* empty */;
        7'h29:
            /* empty */;
        7'h2a:
            /* empty */;
        7'h2b:
            /* empty */;
        7'h2c:
            /* empty */;
        7'h2d:
            /* empty */;
        7'h2e:
            /* empty */;
        7'h2f:
            /* empty */;
        7'h30:
            /* empty */;
        7'h31:
            /* empty */;
        7'h32:
            /* empty */;
        7'h33:
            /* empty */;
        7'h34:
            /* empty */;
        7'h35:
            /* empty */;
        7'h36:
            \$80  = rx;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$81  = buf_55;
    if (capture) begin
      casez (idx)
        7'h00:
            /* empty */;
        7'h01:
            /* empty */;
        7'h02:
            /* empty */;
        7'h03:
            /* empty */;
        7'h04:
            /* empty */;
        7'h05:
            /* empty */;
        7'h06:
            /* empty */;
        7'h07:
            /* empty */;
        7'h08:
            /* empty */;
        7'h09:
            /* empty */;
        7'h0a:
            /* empty */;
        7'h0b:
            /* empty */;
        7'h0c:
            /* empty */;
        7'h0d:
            /* empty */;
        7'h0e:
            /* empty */;
        7'h0f:
            /* empty */;
        7'h10:
            /* empty */;
        7'h11:
            /* empty */;
        7'h12:
            /* empty */;
        7'h13:
            /* empty */;
        7'h14:
            /* empty */;
        7'h15:
            /* empty */;
        7'h16:
            /* empty */;
        7'h17:
            /* empty */;
        7'h18:
            /* empty */;
        7'h19:
            /* empty */;
        7'h1a:
            /* empty */;
        7'h1b:
            /* empty */;
        7'h1c:
            /* empty */;
        7'h1d:
            /* empty */;
        7'h1e:
            /* empty */;
        7'h1f:
            /* empty */;
        7'h20:
            /* empty */;
        7'h21:
            /* empty */;
        7'h22:
            /* empty */;
        7'h23:
            /* empty */;
        7'h24:
            /* empty */;
        7'h25:
            /* empty */;
        7'h26:
            /* empty */;
        7'h27:
            /* empty */;
        7'h28:
            /* empty */;
        7'h29:
            /* empty */;
        7'h2a:
            /* empty */;
        7'h2b:
            /* empty */;
        7'h2c:
            /* empty */;
        7'h2d:
            /* empty */;
        7'h2e:
            /* empty */;
        7'h2f:
            /* empty */;
        7'h30:
            /* empty */;
        7'h31:
            /* empty */;
        7'h32:
            /* empty */;
        7'h33:
            /* empty */;
        7'h34:
            /* empty */;
        7'h35:
            /* empty */;
        7'h36:
            /* empty */;
        7'h37:
            \$81  = rx;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$82  = buf_56;
    if (capture) begin
      casez (idx)
        7'h00:
            /* empty */;
        7'h01:
            /* empty */;
        7'h02:
            /* empty */;
        7'h03:
            /* empty */;
        7'h04:
            /* empty */;
        7'h05:
            /* empty */;
        7'h06:
            /* empty */;
        7'h07:
            /* empty */;
        7'h08:
            /* empty */;
        7'h09:
            /* empty */;
        7'h0a:
            /* empty */;
        7'h0b:
            /* empty */;
        7'h0c:
            /* empty */;
        7'h0d:
            /* empty */;
        7'h0e:
            /* empty */;
        7'h0f:
            /* empty */;
        7'h10:
            /* empty */;
        7'h11:
            /* empty */;
        7'h12:
            /* empty */;
        7'h13:
            /* empty */;
        7'h14:
            /* empty */;
        7'h15:
            /* empty */;
        7'h16:
            /* empty */;
        7'h17:
            /* empty */;
        7'h18:
            /* empty */;
        7'h19:
            /* empty */;
        7'h1a:
            /* empty */;
        7'h1b:
            /* empty */;
        7'h1c:
            /* empty */;
        7'h1d:
            /* empty */;
        7'h1e:
            /* empty */;
        7'h1f:
            /* empty */;
        7'h20:
            /* empty */;
        7'h21:
            /* empty */;
        7'h22:
            /* empty */;
        7'h23:
            /* empty */;
        7'h24:
            /* empty */;
        7'h25:
            /* empty */;
        7'h26:
            /* empty */;
        7'h27:
            /* empty */;
        7'h28:
            /* empty */;
        7'h29:
            /* empty */;
        7'h2a:
            /* empty */;
        7'h2b:
            /* empty */;
        7'h2c:
            /* empty */;
        7'h2d:
            /* empty */;
        7'h2e:
            /* empty */;
        7'h2f:
            /* empty */;
        7'h30:
            /* empty */;
        7'h31:
            /* empty */;
        7'h32:
            /* empty */;
        7'h33:
            /* empty */;
        7'h34:
            /* empty */;
        7'h35:
            /* empty */;
        7'h36:
            /* empty */;
        7'h37:
            /* empty */;
        7'h38:
            \$82  = rx;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$83  = buf_57;
    if (capture) begin
      casez (idx)
        7'h00:
            /* empty */;
        7'h01:
            /* empty */;
        7'h02:
            /* empty */;
        7'h03:
            /* empty */;
        7'h04:
            /* empty */;
        7'h05:
            /* empty */;
        7'h06:
            /* empty */;
        7'h07:
            /* empty */;
        7'h08:
            /* empty */;
        7'h09:
            /* empty */;
        7'h0a:
            /* empty */;
        7'h0b:
            /* empty */;
        7'h0c:
            /* empty */;
        7'h0d:
            /* empty */;
        7'h0e:
            /* empty */;
        7'h0f:
            /* empty */;
        7'h10:
            /* empty */;
        7'h11:
            /* empty */;
        7'h12:
            /* empty */;
        7'h13:
            /* empty */;
        7'h14:
            /* empty */;
        7'h15:
            /* empty */;
        7'h16:
            /* empty */;
        7'h17:
            /* empty */;
        7'h18:
            /* empty */;
        7'h19:
            /* empty */;
        7'h1a:
            /* empty */;
        7'h1b:
            /* empty */;
        7'h1c:
            /* empty */;
        7'h1d:
            /* empty */;
        7'h1e:
            /* empty */;
        7'h1f:
            /* empty */;
        7'h20:
            /* empty */;
        7'h21:
            /* empty */;
        7'h22:
            /* empty */;
        7'h23:
            /* empty */;
        7'h24:
            /* empty */;
        7'h25:
            /* empty */;
        7'h26:
            /* empty */;
        7'h27:
            /* empty */;
        7'h28:
            /* empty */;
        7'h29:
            /* empty */;
        7'h2a:
            /* empty */;
        7'h2b:
            /* empty */;
        7'h2c:
            /* empty */;
        7'h2d:
            /* empty */;
        7'h2e:
            /* empty */;
        7'h2f:
            /* empty */;
        7'h30:
            /* empty */;
        7'h31:
            /* empty */;
        7'h32:
            /* empty */;
        7'h33:
            /* empty */;
        7'h34:
            /* empty */;
        7'h35:
            /* empty */;
        7'h36:
            /* empty */;
        7'h37:
            /* empty */;
        7'h38:
            /* empty */;
        7'h39:
            \$83  = rx;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$84  = buf_58;
    if (capture) begin
      casez (idx)
        7'h00:
            /* empty */;
        7'h01:
            /* empty */;
        7'h02:
            /* empty */;
        7'h03:
            /* empty */;
        7'h04:
            /* empty */;
        7'h05:
            /* empty */;
        7'h06:
            /* empty */;
        7'h07:
            /* empty */;
        7'h08:
            /* empty */;
        7'h09:
            /* empty */;
        7'h0a:
            /* empty */;
        7'h0b:
            /* empty */;
        7'h0c:
            /* empty */;
        7'h0d:
            /* empty */;
        7'h0e:
            /* empty */;
        7'h0f:
            /* empty */;
        7'h10:
            /* empty */;
        7'h11:
            /* empty */;
        7'h12:
            /* empty */;
        7'h13:
            /* empty */;
        7'h14:
            /* empty */;
        7'h15:
            /* empty */;
        7'h16:
            /* empty */;
        7'h17:
            /* empty */;
        7'h18:
            /* empty */;
        7'h19:
            /* empty */;
        7'h1a:
            /* empty */;
        7'h1b:
            /* empty */;
        7'h1c:
            /* empty */;
        7'h1d:
            /* empty */;
        7'h1e:
            /* empty */;
        7'h1f:
            /* empty */;
        7'h20:
            /* empty */;
        7'h21:
            /* empty */;
        7'h22:
            /* empty */;
        7'h23:
            /* empty */;
        7'h24:
            /* empty */;
        7'h25:
            /* empty */;
        7'h26:
            /* empty */;
        7'h27:
            /* empty */;
        7'h28:
            /* empty */;
        7'h29:
            /* empty */;
        7'h2a:
            /* empty */;
        7'h2b:
            /* empty */;
        7'h2c:
            /* empty */;
        7'h2d:
            /* empty */;
        7'h2e:
            /* empty */;
        7'h2f:
            /* empty */;
        7'h30:
            /* empty */;
        7'h31:
            /* empty */;
        7'h32:
            /* empty */;
        7'h33:
            /* empty */;
        7'h34:
            /* empty */;
        7'h35:
            /* empty */;
        7'h36:
            /* empty */;
        7'h37:
            /* empty */;
        7'h38:
            /* empty */;
        7'h39:
            /* empty */;
        7'h3a:
            \$84  = rx;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$85  = buf_59;
    if (capture) begin
      casez (idx)
        7'h00:
            /* empty */;
        7'h01:
            /* empty */;
        7'h02:
            /* empty */;
        7'h03:
            /* empty */;
        7'h04:
            /* empty */;
        7'h05:
            /* empty */;
        7'h06:
            /* empty */;
        7'h07:
            /* empty */;
        7'h08:
            /* empty */;
        7'h09:
            /* empty */;
        7'h0a:
            /* empty */;
        7'h0b:
            /* empty */;
        7'h0c:
            /* empty */;
        7'h0d:
            /* empty */;
        7'h0e:
            /* empty */;
        7'h0f:
            /* empty */;
        7'h10:
            /* empty */;
        7'h11:
            /* empty */;
        7'h12:
            /* empty */;
        7'h13:
            /* empty */;
        7'h14:
            /* empty */;
        7'h15:
            /* empty */;
        7'h16:
            /* empty */;
        7'h17:
            /* empty */;
        7'h18:
            /* empty */;
        7'h19:
            /* empty */;
        7'h1a:
            /* empty */;
        7'h1b:
            /* empty */;
        7'h1c:
            /* empty */;
        7'h1d:
            /* empty */;
        7'h1e:
            /* empty */;
        7'h1f:
            /* empty */;
        7'h20:
            /* empty */;
        7'h21:
            /* empty */;
        7'h22:
            /* empty */;
        7'h23:
            /* empty */;
        7'h24:
            /* empty */;
        7'h25:
            /* empty */;
        7'h26:
            /* empty */;
        7'h27:
            /* empty */;
        7'h28:
            /* empty */;
        7'h29:
            /* empty */;
        7'h2a:
            /* empty */;
        7'h2b:
            /* empty */;
        7'h2c:
            /* empty */;
        7'h2d:
            /* empty */;
        7'h2e:
            /* empty */;
        7'h2f:
            /* empty */;
        7'h30:
            /* empty */;
        7'h31:
            /* empty */;
        7'h32:
            /* empty */;
        7'h33:
            /* empty */;
        7'h34:
            /* empty */;
        7'h35:
            /* empty */;
        7'h36:
            /* empty */;
        7'h37:
            /* empty */;
        7'h38:
            /* empty */;
        7'h39:
            /* empty */;
        7'h3a:
            /* empty */;
        7'h3b:
            \$85  = rx;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$86  = buf_60;
    if (capture) begin
      casez (idx)
        7'h00:
            /* empty */;
        7'h01:
            /* empty */;
        7'h02:
            /* empty */;
        7'h03:
            /* empty */;
        7'h04:
            /* empty */;
        7'h05:
            /* empty */;
        7'h06:
            /* empty */;
        7'h07:
            /* empty */;
        7'h08:
            /* empty */;
        7'h09:
            /* empty */;
        7'h0a:
            /* empty */;
        7'h0b:
            /* empty */;
        7'h0c:
            /* empty */;
        7'h0d:
            /* empty */;
        7'h0e:
            /* empty */;
        7'h0f:
            /* empty */;
        7'h10:
            /* empty */;
        7'h11:
            /* empty */;
        7'h12:
            /* empty */;
        7'h13:
            /* empty */;
        7'h14:
            /* empty */;
        7'h15:
            /* empty */;
        7'h16:
            /* empty */;
        7'h17:
            /* empty */;
        7'h18:
            /* empty */;
        7'h19:
            /* empty */;
        7'h1a:
            /* empty */;
        7'h1b:
            /* empty */;
        7'h1c:
            /* empty */;
        7'h1d:
            /* empty */;
        7'h1e:
            /* empty */;
        7'h1f:
            /* empty */;
        7'h20:
            /* empty */;
        7'h21:
            /* empty */;
        7'h22:
            /* empty */;
        7'h23:
            /* empty */;
        7'h24:
            /* empty */;
        7'h25:
            /* empty */;
        7'h26:
            /* empty */;
        7'h27:
            /* empty */;
        7'h28:
            /* empty */;
        7'h29:
            /* empty */;
        7'h2a:
            /* empty */;
        7'h2b:
            /* empty */;
        7'h2c:
            /* empty */;
        7'h2d:
            /* empty */;
        7'h2e:
            /* empty */;
        7'h2f:
            /* empty */;
        7'h30:
            /* empty */;
        7'h31:
            /* empty */;
        7'h32:
            /* empty */;
        7'h33:
            /* empty */;
        7'h34:
            /* empty */;
        7'h35:
            /* empty */;
        7'h36:
            /* empty */;
        7'h37:
            /* empty */;
        7'h38:
            /* empty */;
        7'h39:
            /* empty */;
        7'h3a:
            /* empty */;
        7'h3b:
            /* empty */;
        7'h3c:
            \$86  = rx;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$87  = buf_61;
    if (capture) begin
      casez (idx)
        7'h00:
            /* empty */;
        7'h01:
            /* empty */;
        7'h02:
            /* empty */;
        7'h03:
            /* empty */;
        7'h04:
            /* empty */;
        7'h05:
            /* empty */;
        7'h06:
            /* empty */;
        7'h07:
            /* empty */;
        7'h08:
            /* empty */;
        7'h09:
            /* empty */;
        7'h0a:
            /* empty */;
        7'h0b:
            /* empty */;
        7'h0c:
            /* empty */;
        7'h0d:
            /* empty */;
        7'h0e:
            /* empty */;
        7'h0f:
            /* empty */;
        7'h10:
            /* empty */;
        7'h11:
            /* empty */;
        7'h12:
            /* empty */;
        7'h13:
            /* empty */;
        7'h14:
            /* empty */;
        7'h15:
            /* empty */;
        7'h16:
            /* empty */;
        7'h17:
            /* empty */;
        7'h18:
            /* empty */;
        7'h19:
            /* empty */;
        7'h1a:
            /* empty */;
        7'h1b:
            /* empty */;
        7'h1c:
            /* empty */;
        7'h1d:
            /* empty */;
        7'h1e:
            /* empty */;
        7'h1f:
            /* empty */;
        7'h20:
            /* empty */;
        7'h21:
            /* empty */;
        7'h22:
            /* empty */;
        7'h23:
            /* empty */;
        7'h24:
            /* empty */;
        7'h25:
            /* empty */;
        7'h26:
            /* empty */;
        7'h27:
            /* empty */;
        7'h28:
            /* empty */;
        7'h29:
            /* empty */;
        7'h2a:
            /* empty */;
        7'h2b:
            /* empty */;
        7'h2c:
            /* empty */;
        7'h2d:
            /* empty */;
        7'h2e:
            /* empty */;
        7'h2f:
            /* empty */;
        7'h30:
            /* empty */;
        7'h31:
            /* empty */;
        7'h32:
            /* empty */;
        7'h33:
            /* empty */;
        7'h34:
            /* empty */;
        7'h35:
            /* empty */;
        7'h36:
            /* empty */;
        7'h37:
            /* empty */;
        7'h38:
            /* empty */;
        7'h39:
            /* empty */;
        7'h3a:
            /* empty */;
        7'h3b:
            /* empty */;
        7'h3c:
            /* empty */;
        7'h3d:
            \$87  = rx;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$88  = buf_62;
    if (capture) begin
      casez (idx)
        7'h00:
            /* empty */;
        7'h01:
            /* empty */;
        7'h02:
            /* empty */;
        7'h03:
            /* empty */;
        7'h04:
            /* empty */;
        7'h05:
            /* empty */;
        7'h06:
            /* empty */;
        7'h07:
            /* empty */;
        7'h08:
            /* empty */;
        7'h09:
            /* empty */;
        7'h0a:
            /* empty */;
        7'h0b:
            /* empty */;
        7'h0c:
            /* empty */;
        7'h0d:
            /* empty */;
        7'h0e:
            /* empty */;
        7'h0f:
            /* empty */;
        7'h10:
            /* empty */;
        7'h11:
            /* empty */;
        7'h12:
            /* empty */;
        7'h13:
            /* empty */;
        7'h14:
            /* empty */;
        7'h15:
            /* empty */;
        7'h16:
            /* empty */;
        7'h17:
            /* empty */;
        7'h18:
            /* empty */;
        7'h19:
            /* empty */;
        7'h1a:
            /* empty */;
        7'h1b:
            /* empty */;
        7'h1c:
            /* empty */;
        7'h1d:
            /* empty */;
        7'h1e:
            /* empty */;
        7'h1f:
            /* empty */;
        7'h20:
            /* empty */;
        7'h21:
            /* empty */;
        7'h22:
            /* empty */;
        7'h23:
            /* empty */;
        7'h24:
            /* empty */;
        7'h25:
            /* empty */;
        7'h26:
            /* empty */;
        7'h27:
            /* empty */;
        7'h28:
            /* empty */;
        7'h29:
            /* empty */;
        7'h2a:
            /* empty */;
        7'h2b:
            /* empty */;
        7'h2c:
            /* empty */;
        7'h2d:
            /* empty */;
        7'h2e:
            /* empty */;
        7'h2f:
            /* empty */;
        7'h30:
            /* empty */;
        7'h31:
            /* empty */;
        7'h32:
            /* empty */;
        7'h33:
            /* empty */;
        7'h34:
            /* empty */;
        7'h35:
            /* empty */;
        7'h36:
            /* empty */;
        7'h37:
            /* empty */;
        7'h38:
            /* empty */;
        7'h39:
            /* empty */;
        7'h3a:
            /* empty */;
        7'h3b:
            /* empty */;
        7'h3c:
            /* empty */;
        7'h3d:
            /* empty */;
        7'h3e:
            \$88  = rx;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$89  = buf_63;
    if (capture) begin
      casez (idx)
        7'h00:
            /* empty */;
        7'h01:
            /* empty */;
        7'h02:
            /* empty */;
        7'h03:
            /* empty */;
        7'h04:
            /* empty */;
        7'h05:
            /* empty */;
        7'h06:
            /* empty */;
        7'h07:
            /* empty */;
        7'h08:
            /* empty */;
        7'h09:
            /* empty */;
        7'h0a:
            /* empty */;
        7'h0b:
            /* empty */;
        7'h0c:
            /* empty */;
        7'h0d:
            /* empty */;
        7'h0e:
            /* empty */;
        7'h0f:
            /* empty */;
        7'h10:
            /* empty */;
        7'h11:
            /* empty */;
        7'h12:
            /* empty */;
        7'h13:
            /* empty */;
        7'h14:
            /* empty */;
        7'h15:
            /* empty */;
        7'h16:
            /* empty */;
        7'h17:
            /* empty */;
        7'h18:
            /* empty */;
        7'h19:
            /* empty */;
        7'h1a:
            /* empty */;
        7'h1b:
            /* empty */;
        7'h1c:
            /* empty */;
        7'h1d:
            /* empty */;
        7'h1e:
            /* empty */;
        7'h1f:
            /* empty */;
        7'h20:
            /* empty */;
        7'h21:
            /* empty */;
        7'h22:
            /* empty */;
        7'h23:
            /* empty */;
        7'h24:
            /* empty */;
        7'h25:
            /* empty */;
        7'h26:
            /* empty */;
        7'h27:
            /* empty */;
        7'h28:
            /* empty */;
        7'h29:
            /* empty */;
        7'h2a:
            /* empty */;
        7'h2b:
            /* empty */;
        7'h2c:
            /* empty */;
        7'h2d:
            /* empty */;
        7'h2e:
            /* empty */;
        7'h2f:
            /* empty */;
        7'h30:
            /* empty */;
        7'h31:
            /* empty */;
        7'h32:
            /* empty */;
        7'h33:
            /* empty */;
        7'h34:
            /* empty */;
        7'h35:
            /* empty */;
        7'h36:
            /* empty */;
        7'h37:
            /* empty */;
        7'h38:
            /* empty */;
        7'h39:
            /* empty */;
        7'h3a:
            /* empty */;
        7'h3b:
            /* empty */;
        7'h3c:
            /* empty */;
        7'h3d:
            /* empty */;
        7'h3e:
            /* empty */;
        7'h3f:
            \$89  = rx;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$90  = buf_64;
    if (capture) begin
      casez (idx)
        7'h00:
            /* empty */;
        7'h01:
            /* empty */;
        7'h02:
            /* empty */;
        7'h03:
            /* empty */;
        7'h04:
            /* empty */;
        7'h05:
            /* empty */;
        7'h06:
            /* empty */;
        7'h07:
            /* empty */;
        7'h08:
            /* empty */;
        7'h09:
            /* empty */;
        7'h0a:
            /* empty */;
        7'h0b:
            /* empty */;
        7'h0c:
            /* empty */;
        7'h0d:
            /* empty */;
        7'h0e:
            /* empty */;
        7'h0f:
            /* empty */;
        7'h10:
            /* empty */;
        7'h11:
            /* empty */;
        7'h12:
            /* empty */;
        7'h13:
            /* empty */;
        7'h14:
            /* empty */;
        7'h15:
            /* empty */;
        7'h16:
            /* empty */;
        7'h17:
            /* empty */;
        7'h18:
            /* empty */;
        7'h19:
            /* empty */;
        7'h1a:
            /* empty */;
        7'h1b:
            /* empty */;
        7'h1c:
            /* empty */;
        7'h1d:
            /* empty */;
        7'h1e:
            /* empty */;
        7'h1f:
            /* empty */;
        7'h20:
            /* empty */;
        7'h21:
            /* empty */;
        7'h22:
            /* empty */;
        7'h23:
            /* empty */;
        7'h24:
            /* empty */;
        7'h25:
            /* empty */;
        7'h26:
            /* empty */;
        7'h27:
            /* empty */;
        7'h28:
            /* empty */;
        7'h29:
            /* empty */;
        7'h2a:
            /* empty */;
        7'h2b:
            /* empty */;
        7'h2c:
            /* empty */;
        7'h2d:
            /* empty */;
        7'h2e:
            /* empty */;
        7'h2f:
            /* empty */;
        7'h30:
            /* empty */;
        7'h31:
            /* empty */;
        7'h32:
            /* empty */;
        7'h33:
            /* empty */;
        7'h34:
            /* empty */;
        7'h35:
            /* empty */;
        7'h36:
            /* empty */;
        7'h37:
            /* empty */;
        7'h38:
            /* empty */;
        7'h39:
            /* empty */;
        7'h3a:
            /* empty */;
        7'h3b:
            /* empty */;
        7'h3c:
            /* empty */;
        7'h3d:
            /* empty */;
        7'h3e:
            /* empty */;
        7'h3f:
            /* empty */;
        7'h40:
            \$90  = rx;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$91  = buf_65;
    if (capture) begin
      casez (idx)
        7'h00:
            /* empty */;
        7'h01:
            /* empty */;
        7'h02:
            /* empty */;
        7'h03:
            /* empty */;
        7'h04:
            /* empty */;
        7'h05:
            /* empty */;
        7'h06:
            /* empty */;
        7'h07:
            /* empty */;
        7'h08:
            /* empty */;
        7'h09:
            /* empty */;
        7'h0a:
            /* empty */;
        7'h0b:
            /* empty */;
        7'h0c:
            /* empty */;
        7'h0d:
            /* empty */;
        7'h0e:
            /* empty */;
        7'h0f:
            /* empty */;
        7'h10:
            /* empty */;
        7'h11:
            /* empty */;
        7'h12:
            /* empty */;
        7'h13:
            /* empty */;
        7'h14:
            /* empty */;
        7'h15:
            /* empty */;
        7'h16:
            /* empty */;
        7'h17:
            /* empty */;
        7'h18:
            /* empty */;
        7'h19:
            /* empty */;
        7'h1a:
            /* empty */;
        7'h1b:
            /* empty */;
        7'h1c:
            /* empty */;
        7'h1d:
            /* empty */;
        7'h1e:
            /* empty */;
        7'h1f:
            /* empty */;
        7'h20:
            /* empty */;
        7'h21:
            /* empty */;
        7'h22:
            /* empty */;
        7'h23:
            /* empty */;
        7'h24:
            /* empty */;
        7'h25:
            /* empty */;
        7'h26:
            /* empty */;
        7'h27:
            /* empty */;
        7'h28:
            /* empty */;
        7'h29:
            /* empty */;
        7'h2a:
            /* empty */;
        7'h2b:
            /* empty */;
        7'h2c:
            /* empty */;
        7'h2d:
            /* empty */;
        7'h2e:
            /* empty */;
        7'h2f:
            /* empty */;
        7'h30:
            /* empty */;
        7'h31:
            /* empty */;
        7'h32:
            /* empty */;
        7'h33:
            /* empty */;
        7'h34:
            /* empty */;
        7'h35:
            /* empty */;
        7'h36:
            /* empty */;
        7'h37:
            /* empty */;
        7'h38:
            /* empty */;
        7'h39:
            /* empty */;
        7'h3a:
            /* empty */;
        7'h3b:
            /* empty */;
        7'h3c:
            /* empty */;
        7'h3d:
            /* empty */;
        7'h3e:
            /* empty */;
        7'h3f:
            /* empty */;
        7'h40:
            /* empty */;
        7'h41:
            \$91  = rx;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$92  = buf_66;
    if (capture) begin
      casez (idx)
        7'h00:
            /* empty */;
        7'h01:
            /* empty */;
        7'h02:
            /* empty */;
        7'h03:
            /* empty */;
        7'h04:
            /* empty */;
        7'h05:
            /* empty */;
        7'h06:
            /* empty */;
        7'h07:
            /* empty */;
        7'h08:
            /* empty */;
        7'h09:
            /* empty */;
        7'h0a:
            /* empty */;
        7'h0b:
            /* empty */;
        7'h0c:
            /* empty */;
        7'h0d:
            /* empty */;
        7'h0e:
            /* empty */;
        7'h0f:
            /* empty */;
        7'h10:
            /* empty */;
        7'h11:
            /* empty */;
        7'h12:
            /* empty */;
        7'h13:
            /* empty */;
        7'h14:
            /* empty */;
        7'h15:
            /* empty */;
        7'h16:
            /* empty */;
        7'h17:
            /* empty */;
        7'h18:
            /* empty */;
        7'h19:
            /* empty */;
        7'h1a:
            /* empty */;
        7'h1b:
            /* empty */;
        7'h1c:
            /* empty */;
        7'h1d:
            /* empty */;
        7'h1e:
            /* empty */;
        7'h1f:
            /* empty */;
        7'h20:
            /* empty */;
        7'h21:
            /* empty */;
        7'h22:
            /* empty */;
        7'h23:
            /* empty */;
        7'h24:
            /* empty */;
        7'h25:
            /* empty */;
        7'h26:
            /* empty */;
        7'h27:
            /* empty */;
        7'h28:
            /* empty */;
        7'h29:
            /* empty */;
        7'h2a:
            /* empty */;
        7'h2b:
            /* empty */;
        7'h2c:
            /* empty */;
        7'h2d:
            /* empty */;
        7'h2e:
            /* empty */;
        7'h2f:
            /* empty */;
        7'h30:
            /* empty */;
        7'h31:
            /* empty */;
        7'h32:
            /* empty */;
        7'h33:
            /* empty */;
        7'h34:
            /* empty */;
        7'h35:
            /* empty */;
        7'h36:
            /* empty */;
        7'h37:
            /* empty */;
        7'h38:
            /* empty */;
        7'h39:
            /* empty */;
        7'h3a:
            /* empty */;
        7'h3b:
            /* empty */;
        7'h3c:
            /* empty */;
        7'h3d:
            /* empty */;
        7'h3e:
            /* empty */;
        7'h3f:
            /* empty */;
        7'h40:
            /* empty */;
        7'h41:
            /* empty */;
        7'h42:
            \$92  = rx;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$93  = buf_67;
    if (capture) begin
      casez (idx)
        7'h00:
            /* empty */;
        7'h01:
            /* empty */;
        7'h02:
            /* empty */;
        7'h03:
            /* empty */;
        7'h04:
            /* empty */;
        7'h05:
            /* empty */;
        7'h06:
            /* empty */;
        7'h07:
            /* empty */;
        7'h08:
            /* empty */;
        7'h09:
            /* empty */;
        7'h0a:
            /* empty */;
        7'h0b:
            /* empty */;
        7'h0c:
            /* empty */;
        7'h0d:
            /* empty */;
        7'h0e:
            /* empty */;
        7'h0f:
            /* empty */;
        7'h10:
            /* empty */;
        7'h11:
            /* empty */;
        7'h12:
            /* empty */;
        7'h13:
            /* empty */;
        7'h14:
            /* empty */;
        7'h15:
            /* empty */;
        7'h16:
            /* empty */;
        7'h17:
            /* empty */;
        7'h18:
            /* empty */;
        7'h19:
            /* empty */;
        7'h1a:
            /* empty */;
        7'h1b:
            /* empty */;
        7'h1c:
            /* empty */;
        7'h1d:
            /* empty */;
        7'h1e:
            /* empty */;
        7'h1f:
            /* empty */;
        7'h20:
            /* empty */;
        7'h21:
            /* empty */;
        7'h22:
            /* empty */;
        7'h23:
            /* empty */;
        7'h24:
            /* empty */;
        7'h25:
            /* empty */;
        7'h26:
            /* empty */;
        7'h27:
            /* empty */;
        7'h28:
            /* empty */;
        7'h29:
            /* empty */;
        7'h2a:
            /* empty */;
        7'h2b:
            /* empty */;
        7'h2c:
            /* empty */;
        7'h2d:
            /* empty */;
        7'h2e:
            /* empty */;
        7'h2f:
            /* empty */;
        7'h30:
            /* empty */;
        7'h31:
            /* empty */;
        7'h32:
            /* empty */;
        7'h33:
            /* empty */;
        7'h34:
            /* empty */;
        7'h35:
            /* empty */;
        7'h36:
            /* empty */;
        7'h37:
            /* empty */;
        7'h38:
            /* empty */;
        7'h39:
            /* empty */;
        7'h3a:
            /* empty */;
        7'h3b:
            /* empty */;
        7'h3c:
            /* empty */;
        7'h3d:
            /* empty */;
        7'h3e:
            /* empty */;
        7'h3f:
            /* empty */;
        7'h40:
            /* empty */;
        7'h41:
            /* empty */;
        7'h42:
            /* empty */;
        7'h43:
            \$93  = rx;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$94  = buf_68;
    if (capture) begin
      casez (idx)
        7'h00:
            /* empty */;
        7'h01:
            /* empty */;
        7'h02:
            /* empty */;
        7'h03:
            /* empty */;
        7'h04:
            /* empty */;
        7'h05:
            /* empty */;
        7'h06:
            /* empty */;
        7'h07:
            /* empty */;
        7'h08:
            /* empty */;
        7'h09:
            /* empty */;
        7'h0a:
            /* empty */;
        7'h0b:
            /* empty */;
        7'h0c:
            /* empty */;
        7'h0d:
            /* empty */;
        7'h0e:
            /* empty */;
        7'h0f:
            /* empty */;
        7'h10:
            /* empty */;
        7'h11:
            /* empty */;
        7'h12:
            /* empty */;
        7'h13:
            /* empty */;
        7'h14:
            /* empty */;
        7'h15:
            /* empty */;
        7'h16:
            /* empty */;
        7'h17:
            /* empty */;
        7'h18:
            /* empty */;
        7'h19:
            /* empty */;
        7'h1a:
            /* empty */;
        7'h1b:
            /* empty */;
        7'h1c:
            /* empty */;
        7'h1d:
            /* empty */;
        7'h1e:
            /* empty */;
        7'h1f:
            /* empty */;
        7'h20:
            /* empty */;
        7'h21:
            /* empty */;
        7'h22:
            /* empty */;
        7'h23:
            /* empty */;
        7'h24:
            /* empty */;
        7'h25:
            /* empty */;
        7'h26:
            /* empty */;
        7'h27:
            /* empty */;
        7'h28:
            /* empty */;
        7'h29:
            /* empty */;
        7'h2a:
            /* empty */;
        7'h2b:
            /* empty */;
        7'h2c:
            /* empty */;
        7'h2d:
            /* empty */;
        7'h2e:
            /* empty */;
        7'h2f:
            /* empty */;
        7'h30:
            /* empty */;
        7'h31:
            /* empty */;
        7'h32:
            /* empty */;
        7'h33:
            /* empty */;
        7'h34:
            /* empty */;
        7'h35:
            /* empty */;
        7'h36:
            /* empty */;
        7'h37:
            /* empty */;
        7'h38:
            /* empty */;
        7'h39:
            /* empty */;
        7'h3a:
            /* empty */;
        7'h3b:
            /* empty */;
        7'h3c:
            /* empty */;
        7'h3d:
            /* empty */;
        7'h3e:
            /* empty */;
        7'h3f:
            /* empty */;
        7'h40:
            /* empty */;
        7'h41:
            /* empty */;
        7'h42:
            /* empty */;
        7'h43:
            /* empty */;
        7'h44:
            \$94  = rx;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$95  = buf_69;
    if (capture) begin
      casez (idx)
        7'h00:
            /* empty */;
        7'h01:
            /* empty */;
        7'h02:
            /* empty */;
        7'h03:
            /* empty */;
        7'h04:
            /* empty */;
        7'h05:
            /* empty */;
        7'h06:
            /* empty */;
        7'h07:
            /* empty */;
        7'h08:
            /* empty */;
        7'h09:
            /* empty */;
        7'h0a:
            /* empty */;
        7'h0b:
            /* empty */;
        7'h0c:
            /* empty */;
        7'h0d:
            /* empty */;
        7'h0e:
            /* empty */;
        7'h0f:
            /* empty */;
        7'h10:
            /* empty */;
        7'h11:
            /* empty */;
        7'h12:
            /* empty */;
        7'h13:
            /* empty */;
        7'h14:
            /* empty */;
        7'h15:
            /* empty */;
        7'h16:
            /* empty */;
        7'h17:
            /* empty */;
        7'h18:
            /* empty */;
        7'h19:
            /* empty */;
        7'h1a:
            /* empty */;
        7'h1b:
            /* empty */;
        7'h1c:
            /* empty */;
        7'h1d:
            /* empty */;
        7'h1e:
            /* empty */;
        7'h1f:
            /* empty */;
        7'h20:
            /* empty */;
        7'h21:
            /* empty */;
        7'h22:
            /* empty */;
        7'h23:
            /* empty */;
        7'h24:
            /* empty */;
        7'h25:
            /* empty */;
        7'h26:
            /* empty */;
        7'h27:
            /* empty */;
        7'h28:
            /* empty */;
        7'h29:
            /* empty */;
        7'h2a:
            /* empty */;
        7'h2b:
            /* empty */;
        7'h2c:
            /* empty */;
        7'h2d:
            /* empty */;
        7'h2e:
            /* empty */;
        7'h2f:
            /* empty */;
        7'h30:
            /* empty */;
        7'h31:
            /* empty */;
        7'h32:
            /* empty */;
        7'h33:
            /* empty */;
        7'h34:
            /* empty */;
        7'h35:
            /* empty */;
        7'h36:
            /* empty */;
        7'h37:
            /* empty */;
        7'h38:
            /* empty */;
        7'h39:
            /* empty */;
        7'h3a:
            /* empty */;
        7'h3b:
            /* empty */;
        7'h3c:
            /* empty */;
        7'h3d:
            /* empty */;
        7'h3e:
            /* empty */;
        7'h3f:
            /* empty */;
        7'h40:
            /* empty */;
        7'h41:
            /* empty */;
        7'h42:
            /* empty */;
        7'h43:
            /* empty */;
        7'h44:
            /* empty */;
        7'h45:
            \$95  = rx;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$96  = buf_70;
    if (capture) begin
      casez (idx)
        7'h00:
            /* empty */;
        7'h01:
            /* empty */;
        7'h02:
            /* empty */;
        7'h03:
            /* empty */;
        7'h04:
            /* empty */;
        7'h05:
            /* empty */;
        7'h06:
            /* empty */;
        7'h07:
            /* empty */;
        7'h08:
            /* empty */;
        7'h09:
            /* empty */;
        7'h0a:
            /* empty */;
        7'h0b:
            /* empty */;
        7'h0c:
            /* empty */;
        7'h0d:
            /* empty */;
        7'h0e:
            /* empty */;
        7'h0f:
            /* empty */;
        7'h10:
            /* empty */;
        7'h11:
            /* empty */;
        7'h12:
            /* empty */;
        7'h13:
            /* empty */;
        7'h14:
            /* empty */;
        7'h15:
            /* empty */;
        7'h16:
            /* empty */;
        7'h17:
            /* empty */;
        7'h18:
            /* empty */;
        7'h19:
            /* empty */;
        7'h1a:
            /* empty */;
        7'h1b:
            /* empty */;
        7'h1c:
            /* empty */;
        7'h1d:
            /* empty */;
        7'h1e:
            /* empty */;
        7'h1f:
            /* empty */;
        7'h20:
            /* empty */;
        7'h21:
            /* empty */;
        7'h22:
            /* empty */;
        7'h23:
            /* empty */;
        7'h24:
            /* empty */;
        7'h25:
            /* empty */;
        7'h26:
            /* empty */;
        7'h27:
            /* empty */;
        7'h28:
            /* empty */;
        7'h29:
            /* empty */;
        7'h2a:
            /* empty */;
        7'h2b:
            /* empty */;
        7'h2c:
            /* empty */;
        7'h2d:
            /* empty */;
        7'h2e:
            /* empty */;
        7'h2f:
            /* empty */;
        7'h30:
            /* empty */;
        7'h31:
            /* empty */;
        7'h32:
            /* empty */;
        7'h33:
            /* empty */;
        7'h34:
            /* empty */;
        7'h35:
            /* empty */;
        7'h36:
            /* empty */;
        7'h37:
            /* empty */;
        7'h38:
            /* empty */;
        7'h39:
            /* empty */;
        7'h3a:
            /* empty */;
        7'h3b:
            /* empty */;
        7'h3c:
            /* empty */;
        7'h3d:
            /* empty */;
        7'h3e:
            /* empty */;
        7'h3f:
            /* empty */;
        7'h40:
            /* empty */;
        7'h41:
            /* empty */;
        7'h42:
            /* empty */;
        7'h43:
            /* empty */;
        7'h44:
            /* empty */;
        7'h45:
            /* empty */;
        7'h46:
            \$96  = rx;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$97  = buf_71;
    if (capture) begin
      casez (idx)
        7'h00:
            /* empty */;
        7'h01:
            /* empty */;
        7'h02:
            /* empty */;
        7'h03:
            /* empty */;
        7'h04:
            /* empty */;
        7'h05:
            /* empty */;
        7'h06:
            /* empty */;
        7'h07:
            /* empty */;
        7'h08:
            /* empty */;
        7'h09:
            /* empty */;
        7'h0a:
            /* empty */;
        7'h0b:
            /* empty */;
        7'h0c:
            /* empty */;
        7'h0d:
            /* empty */;
        7'h0e:
            /* empty */;
        7'h0f:
            /* empty */;
        7'h10:
            /* empty */;
        7'h11:
            /* empty */;
        7'h12:
            /* empty */;
        7'h13:
            /* empty */;
        7'h14:
            /* empty */;
        7'h15:
            /* empty */;
        7'h16:
            /* empty */;
        7'h17:
            /* empty */;
        7'h18:
            /* empty */;
        7'h19:
            /* empty */;
        7'h1a:
            /* empty */;
        7'h1b:
            /* empty */;
        7'h1c:
            /* empty */;
        7'h1d:
            /* empty */;
        7'h1e:
            /* empty */;
        7'h1f:
            /* empty */;
        7'h20:
            /* empty */;
        7'h21:
            /* empty */;
        7'h22:
            /* empty */;
        7'h23:
            /* empty */;
        7'h24:
            /* empty */;
        7'h25:
            /* empty */;
        7'h26:
            /* empty */;
        7'h27:
            /* empty */;
        7'h28:
            /* empty */;
        7'h29:
            /* empty */;
        7'h2a:
            /* empty */;
        7'h2b:
            /* empty */;
        7'h2c:
            /* empty */;
        7'h2d:
            /* empty */;
        7'h2e:
            /* empty */;
        7'h2f:
            /* empty */;
        7'h30:
            /* empty */;
        7'h31:
            /* empty */;
        7'h32:
            /* empty */;
        7'h33:
            /* empty */;
        7'h34:
            /* empty */;
        7'h35:
            /* empty */;
        7'h36:
            /* empty */;
        7'h37:
            /* empty */;
        7'h38:
            /* empty */;
        7'h39:
            /* empty */;
        7'h3a:
            /* empty */;
        7'h3b:
            /* empty */;
        7'h3c:
            /* empty */;
        7'h3d:
            /* empty */;
        7'h3e:
            /* empty */;
        7'h3f:
            /* empty */;
        7'h40:
            /* empty */;
        7'h41:
            /* empty */;
        7'h42:
            /* empty */;
        7'h43:
            /* empty */;
        7'h44:
            /* empty */;
        7'h45:
            /* empty */;
        7'h46:
            /* empty */;
        7'h47:
            \$97  = rx;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$98  = buf_72;
    if (capture) begin
      casez (idx)
        7'h00:
            /* empty */;
        7'h01:
            /* empty */;
        7'h02:
            /* empty */;
        7'h03:
            /* empty */;
        7'h04:
            /* empty */;
        7'h05:
            /* empty */;
        7'h06:
            /* empty */;
        7'h07:
            /* empty */;
        7'h08:
            /* empty */;
        7'h09:
            /* empty */;
        7'h0a:
            /* empty */;
        7'h0b:
            /* empty */;
        7'h0c:
            /* empty */;
        7'h0d:
            /* empty */;
        7'h0e:
            /* empty */;
        7'h0f:
            /* empty */;
        7'h10:
            /* empty */;
        7'h11:
            /* empty */;
        7'h12:
            /* empty */;
        7'h13:
            /* empty */;
        7'h14:
            /* empty */;
        7'h15:
            /* empty */;
        7'h16:
            /* empty */;
        7'h17:
            /* empty */;
        7'h18:
            /* empty */;
        7'h19:
            /* empty */;
        7'h1a:
            /* empty */;
        7'h1b:
            /* empty */;
        7'h1c:
            /* empty */;
        7'h1d:
            /* empty */;
        7'h1e:
            /* empty */;
        7'h1f:
            /* empty */;
        7'h20:
            /* empty */;
        7'h21:
            /* empty */;
        7'h22:
            /* empty */;
        7'h23:
            /* empty */;
        7'h24:
            /* empty */;
        7'h25:
            /* empty */;
        7'h26:
            /* empty */;
        7'h27:
            /* empty */;
        7'h28:
            /* empty */;
        7'h29:
            /* empty */;
        7'h2a:
            /* empty */;
        7'h2b:
            /* empty */;
        7'h2c:
            /* empty */;
        7'h2d:
            /* empty */;
        7'h2e:
            /* empty */;
        7'h2f:
            /* empty */;
        7'h30:
            /* empty */;
        7'h31:
            /* empty */;
        7'h32:
            /* empty */;
        7'h33:
            /* empty */;
        7'h34:
            /* empty */;
        7'h35:
            /* empty */;
        7'h36:
            /* empty */;
        7'h37:
            /* empty */;
        7'h38:
            /* empty */;
        7'h39:
            /* empty */;
        7'h3a:
            /* empty */;
        7'h3b:
            /* empty */;
        7'h3c:
            /* empty */;
        7'h3d:
            /* empty */;
        7'h3e:
            /* empty */;
        7'h3f:
            /* empty */;
        7'h40:
            /* empty */;
        7'h41:
            /* empty */;
        7'h42:
            /* empty */;
        7'h43:
            /* empty */;
        7'h44:
            /* empty */;
        7'h45:
            /* empty */;
        7'h46:
            /* empty */;
        7'h47:
            /* empty */;
        7'h48:
            \$98  = rx;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$99  = buf_73;
    if (capture) begin
      casez (idx)
        7'h00:
            /* empty */;
        7'h01:
            /* empty */;
        7'h02:
            /* empty */;
        7'h03:
            /* empty */;
        7'h04:
            /* empty */;
        7'h05:
            /* empty */;
        7'h06:
            /* empty */;
        7'h07:
            /* empty */;
        7'h08:
            /* empty */;
        7'h09:
            /* empty */;
        7'h0a:
            /* empty */;
        7'h0b:
            /* empty */;
        7'h0c:
            /* empty */;
        7'h0d:
            /* empty */;
        7'h0e:
            /* empty */;
        7'h0f:
            /* empty */;
        7'h10:
            /* empty */;
        7'h11:
            /* empty */;
        7'h12:
            /* empty */;
        7'h13:
            /* empty */;
        7'h14:
            /* empty */;
        7'h15:
            /* empty */;
        7'h16:
            /* empty */;
        7'h17:
            /* empty */;
        7'h18:
            /* empty */;
        7'h19:
            /* empty */;
        7'h1a:
            /* empty */;
        7'h1b:
            /* empty */;
        7'h1c:
            /* empty */;
        7'h1d:
            /* empty */;
        7'h1e:
            /* empty */;
        7'h1f:
            /* empty */;
        7'h20:
            /* empty */;
        7'h21:
            /* empty */;
        7'h22:
            /* empty */;
        7'h23:
            /* empty */;
        7'h24:
            /* empty */;
        7'h25:
            /* empty */;
        7'h26:
            /* empty */;
        7'h27:
            /* empty */;
        7'h28:
            /* empty */;
        7'h29:
            /* empty */;
        7'h2a:
            /* empty */;
        7'h2b:
            /* empty */;
        7'h2c:
            /* empty */;
        7'h2d:
            /* empty */;
        7'h2e:
            /* empty */;
        7'h2f:
            /* empty */;
        7'h30:
            /* empty */;
        7'h31:
            /* empty */;
        7'h32:
            /* empty */;
        7'h33:
            /* empty */;
        7'h34:
            /* empty */;
        7'h35:
            /* empty */;
        7'h36:
            /* empty */;
        7'h37:
            /* empty */;
        7'h38:
            /* empty */;
        7'h39:
            /* empty */;
        7'h3a:
            /* empty */;
        7'h3b:
            /* empty */;
        7'h3c:
            /* empty */;
        7'h3d:
            /* empty */;
        7'h3e:
            /* empty */;
        7'h3f:
            /* empty */;
        7'h40:
            /* empty */;
        7'h41:
            /* empty */;
        7'h42:
            /* empty */;
        7'h43:
            /* empty */;
        7'h44:
            /* empty */;
        7'h45:
            /* empty */;
        7'h46:
            /* empty */;
        7'h47:
            /* empty */;
        7'h48:
            /* empty */;
        7'h49:
            \$99  = rx;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$100  = buf_74;
    if (capture) begin
      casez (idx)
        7'h00:
            /* empty */;
        7'h01:
            /* empty */;
        7'h02:
            /* empty */;
        7'h03:
            /* empty */;
        7'h04:
            /* empty */;
        7'h05:
            /* empty */;
        7'h06:
            /* empty */;
        7'h07:
            /* empty */;
        7'h08:
            /* empty */;
        7'h09:
            /* empty */;
        7'h0a:
            /* empty */;
        7'h0b:
            /* empty */;
        7'h0c:
            /* empty */;
        7'h0d:
            /* empty */;
        7'h0e:
            /* empty */;
        7'h0f:
            /* empty */;
        7'h10:
            /* empty */;
        7'h11:
            /* empty */;
        7'h12:
            /* empty */;
        7'h13:
            /* empty */;
        7'h14:
            /* empty */;
        7'h15:
            /* empty */;
        7'h16:
            /* empty */;
        7'h17:
            /* empty */;
        7'h18:
            /* empty */;
        7'h19:
            /* empty */;
        7'h1a:
            /* empty */;
        7'h1b:
            /* empty */;
        7'h1c:
            /* empty */;
        7'h1d:
            /* empty */;
        7'h1e:
            /* empty */;
        7'h1f:
            /* empty */;
        7'h20:
            /* empty */;
        7'h21:
            /* empty */;
        7'h22:
            /* empty */;
        7'h23:
            /* empty */;
        7'h24:
            /* empty */;
        7'h25:
            /* empty */;
        7'h26:
            /* empty */;
        7'h27:
            /* empty */;
        7'h28:
            /* empty */;
        7'h29:
            /* empty */;
        7'h2a:
            /* empty */;
        7'h2b:
            /* empty */;
        7'h2c:
            /* empty */;
        7'h2d:
            /* empty */;
        7'h2e:
            /* empty */;
        7'h2f:
            /* empty */;
        7'h30:
            /* empty */;
        7'h31:
            /* empty */;
        7'h32:
            /* empty */;
        7'h33:
            /* empty */;
        7'h34:
            /* empty */;
        7'h35:
            /* empty */;
        7'h36:
            /* empty */;
        7'h37:
            /* empty */;
        7'h38:
            /* empty */;
        7'h39:
            /* empty */;
        7'h3a:
            /* empty */;
        7'h3b:
            /* empty */;
        7'h3c:
            /* empty */;
        7'h3d:
            /* empty */;
        7'h3e:
            /* empty */;
        7'h3f:
            /* empty */;
        7'h40:
            /* empty */;
        7'h41:
            /* empty */;
        7'h42:
            /* empty */;
        7'h43:
            /* empty */;
        7'h44:
            /* empty */;
        7'h45:
            /* empty */;
        7'h46:
            /* empty */;
        7'h47:
            /* empty */;
        7'h48:
            /* empty */;
        7'h49:
            /* empty */;
        7'h4a:
            \$100  = rx;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$101  = buf_75;
    if (capture) begin
      casez (idx)
        7'h00:
            /* empty */;
        7'h01:
            /* empty */;
        7'h02:
            /* empty */;
        7'h03:
            /* empty */;
        7'h04:
            /* empty */;
        7'h05:
            /* empty */;
        7'h06:
            /* empty */;
        7'h07:
            /* empty */;
        7'h08:
            /* empty */;
        7'h09:
            /* empty */;
        7'h0a:
            /* empty */;
        7'h0b:
            /* empty */;
        7'h0c:
            /* empty */;
        7'h0d:
            /* empty */;
        7'h0e:
            /* empty */;
        7'h0f:
            /* empty */;
        7'h10:
            /* empty */;
        7'h11:
            /* empty */;
        7'h12:
            /* empty */;
        7'h13:
            /* empty */;
        7'h14:
            /* empty */;
        7'h15:
            /* empty */;
        7'h16:
            /* empty */;
        7'h17:
            /* empty */;
        7'h18:
            /* empty */;
        7'h19:
            /* empty */;
        7'h1a:
            /* empty */;
        7'h1b:
            /* empty */;
        7'h1c:
            /* empty */;
        7'h1d:
            /* empty */;
        7'h1e:
            /* empty */;
        7'h1f:
            /* empty */;
        7'h20:
            /* empty */;
        7'h21:
            /* empty */;
        7'h22:
            /* empty */;
        7'h23:
            /* empty */;
        7'h24:
            /* empty */;
        7'h25:
            /* empty */;
        7'h26:
            /* empty */;
        7'h27:
            /* empty */;
        7'h28:
            /* empty */;
        7'h29:
            /* empty */;
        7'h2a:
            /* empty */;
        7'h2b:
            /* empty */;
        7'h2c:
            /* empty */;
        7'h2d:
            /* empty */;
        7'h2e:
            /* empty */;
        7'h2f:
            /* empty */;
        7'h30:
            /* empty */;
        7'h31:
            /* empty */;
        7'h32:
            /* empty */;
        7'h33:
            /* empty */;
        7'h34:
            /* empty */;
        7'h35:
            /* empty */;
        7'h36:
            /* empty */;
        7'h37:
            /* empty */;
        7'h38:
            /* empty */;
        7'h39:
            /* empty */;
        7'h3a:
            /* empty */;
        7'h3b:
            /* empty */;
        7'h3c:
            /* empty */;
        7'h3d:
            /* empty */;
        7'h3e:
            /* empty */;
        7'h3f:
            /* empty */;
        7'h40:
            /* empty */;
        7'h41:
            /* empty */;
        7'h42:
            /* empty */;
        7'h43:
            /* empty */;
        7'h44:
            /* empty */;
        7'h45:
            /* empty */;
        7'h46:
            /* empty */;
        7'h47:
            /* empty */;
        7'h48:
            /* empty */;
        7'h49:
            /* empty */;
        7'h4a:
            /* empty */;
        7'h4b:
            \$101  = rx;
      endcase
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    state = 3'h0;
    casez (fsm_state)
      2'h0:
          state = 3'h1;
      2'h1:
          state = 3'h2;
      2'h2:
          state = 3'h3;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    capture = 1'h0;
    casez (fsm_state)
      2'h0:
          /* empty */;
      2'h1:
          if (\$10 ) begin
            capture = 1'h1;
          end
    endcase
  end
  assign \input  = rx;
  assign strobe = capture;
  assign reset = done;
endmodule

(* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:169" *)
(* generator = "Amaranth" *)
module \Controller.fanuc_encoders.U$3.crc (sync_100_rst, crc_ok, \input , reset, strobe, sync_100_clk);
  reg \$auto$verilog_backend.cc:2352:dump_module$9  = 0;
  wire [5:0] \$1 ;
  reg [4:0] \$2 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:164" *)
  output crc_ok;
  wire crc_ok;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:162" *)
  input \input ;
  wire \input ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:165" *)
  input reset;
  wire reset;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:171" *)
  reg [4:0] shreg = 5'h00;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:163" *)
  input strobe;
  wire strobe;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:273" *)
  input sync_100_clk;
  wire sync_100_clk;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:273" *)
  input sync_100_rst;
  wire sync_100_rst;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:172" *)
  reg [4:0] \xor ;
  assign crc_ok = ! (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:174" *) shreg;
  assign \$1  = { shreg, \input  } ^ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:180" *) { 1'h0, \xor  };
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:171" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) shreg <= 5'h00;
    else shreg <= \$2 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$9 ) begin end
    \xor  = 5'h00;
    if (shreg[4]) begin
      \xor  = 5'h0b;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$9 ) begin end
    \$2  = shreg;
    if (strobe) begin
      \$2  = \$1 [4:0];
    end
    if (reset) begin
      \$2  = 5'h00;
    end
  end
endmodule

(* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:135" *)
(* generator = "Amaranth" *)
module \Controller.fanuc_encoders.request_pulse (sync_100_rst, req, trigger, sync_100_clk);
  reg \$auto$verilog_backend.cc:2352:dump_module$10  = 0;
  wire [10:0] \$1 ;
  wire \$2 ;
  wire \$3 ;
  wire [10:0] \$4 ;
  wire \$5 ;
  wire \$6 ;
  reg [9:0] \$7 ;
  reg \$8 ;
  reg \$9 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:137" *)
  reg [9:0] cnt = 10'h000;
  (* src = "C:\\Program Files\\WindowsApps\\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\\lib\\contextlib.py:142" *)
  reg fsm_state = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:131" *)
  output req;
  reg req = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:273" *)
  input sync_100_clk;
  wire sync_100_clk;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:273" *)
  input sync_100_rst;
  wire sync_100_rst;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:130" *)
  input trigger;
  wire trigger;
  assign \$1  = cnt + (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:139" *) 1'h1;
  assign \$2  = cnt == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:149" *) 10'h31f;
  assign \$3  = ~ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:151" *) trigger;
  assign \$4  = cnt + (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:155" *) 1'h1;
  assign \$5  = ! (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\hdl\\_dsl.py:490" *) fsm_state;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:137" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) cnt <= 10'h000;
    else cnt <= \$7 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\fanuc_encoder.py:131" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) req <= 1'h0;
    else req <= \$8 ;
  (* src = "C:\\Program Files\\WindowsApps\\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\\lib\\contextlib.py:142" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) fsm_state <= 1'h0;
    else fsm_state <= \$9 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$10 ) begin end
    \$7  = \$1 [9:0];
    (* full_case = 32'd1 *)
    casez (fsm_state)
      1'h0:
          if (trigger) begin
            \$7  = 10'h000;
          end
      1'h1:
          (* full_case = 32'd1 *)
          if (\$2 ) begin
          end else begin
            \$7  = \$4 [9:0];
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$10 ) begin end
    \$8  = req;
    (* full_case = 32'd1 *)
    casez (fsm_state)
      1'h0:
          if (trigger) begin
            \$8  = 1'h1;
          end
      1'h1:
          if (\$2 ) begin
            \$8  = 1'h0;
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$10 ) begin end
    \$9  = fsm_state;
    (* full_case = 32'd1 *)
    casez (fsm_state)
      1'h0:
          if (trigger) begin
            \$9  = 1'h1;
          end
      1'h1:
          if (\$2 ) begin
            if (\$3 ) begin
              \$9  = 1'h0;
            end
          end
    endcase
  end
  assign \$6  = fsm_state;
endmodule

(* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:80" *)
(* generator = "Amaranth" *)
module \Controller.fanuc_encoders_shift_dma_2 (sync_100_rst, read_bram_address_input, write_bram_address_input, read_node_address_input, write_node_address_input, data_input, read_complete_input, write_complete_input, bram_read_data, write_bram_address_output, read_bram_address_output, write_node_address_output, read_node_address_output, write_complete_output, data_output, read_complete_output, bram_address, bram_write_data, bram_write_enable, sync_100_clk);
  reg \$auto$verilog_backend.cc:2352:dump_module$11  = 0;
  wire \$1 ;
  wire \$10 ;
  wire \$11 ;
  wire \$12 ;
  wire \$13 ;
  wire \$14 ;
  reg \$15 ;
  reg [31:0] \$16 ;
  reg \$17 ;
  reg \$18 ;
  wire \$2 ;
  wire \$3 ;
  wire \$4 ;
  wire \$5 ;
  wire \$6 ;
  wire \$7 ;
  wire \$8 ;
  wire \$9 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:70" *)
  output [15:0] bram_address;
  reg [15:0] bram_address;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:72" *)
  input [31:0] bram_read_data;
  wire [31:0] bram_read_data;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:71" *)
  output [31:0] bram_write_data;
  reg [31:0] bram_write_data;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:73" *)
  output bram_write_enable;
  reg bram_write_enable;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:89" *)
  reg [31:0] buf_data = 32'd0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:86" *)
  reg [15:0] buf_read_bram_address = 16'h0000;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:90" *)
  reg buf_read_complete = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:88" *)
  reg [7:0] buf_read_node_address = 8'h00;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:85" *)
  reg [15:0] buf_write_bram_address = 16'h0000;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:91" *)
  reg buf_write_complete = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:87" *)
  reg [7:0] buf_write_node_address = 8'h00;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:63" *)
  input [31:0] data_input;
  wire [31:0] data_input;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:64" *)
  output [31:0] data_output;
  reg [31:0] data_output = 32'd0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:59" *)
  input [15:0] read_bram_address_input;
  wire [15:0] read_bram_address_input;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:60" *)
  output [15:0] read_bram_address_output;
  reg [15:0] read_bram_address_output = 16'h0000;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:65" *)
  input read_complete_input;
  wire read_complete_input;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:66" *)
  output read_complete_output;
  reg read_complete_output = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:93" *)
  reg read_next = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:55" *)
  input [7:0] read_node_address_input;
  wire [7:0] read_node_address_input;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:56" *)
  output [7:0] read_node_address_output;
  reg [7:0] read_node_address_output = 8'h00;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:273" *)
  input sync_100_clk;
  wire sync_100_clk;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:273" *)
  input sync_100_rst;
  wire sync_100_rst;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:61" *)
  input [15:0] write_bram_address_input;
  wire [15:0] write_bram_address_input;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:62" *)
  output [15:0] write_bram_address_output;
  reg [15:0] write_bram_address_output = 16'h0000;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:67" *)
  input write_complete_input;
  wire write_complete_input;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:68" *)
  output write_complete_output;
  reg write_complete_output = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:57" *)
  input [7:0] write_node_address_input;
  wire [7:0] write_node_address_input;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:58" *)
  output [7:0] write_node_address_output;
  reg [7:0] write_node_address_output = 8'h00;
  assign \$1  = read_node_address_input == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:113" *) 2'h2;
  assign \$2  = ! (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:113" *) read_complete_input;
  assign \$3  = \$1  & (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:113" *) \$2 ;
  assign \$4  = write_node_address_input == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:129" *) 2'h2;
  assign \$5  = \$4  & (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:129" *) read_complete_input;
  assign \$6  = ! (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:129" *) write_complete_input;
  assign \$7  = \$5  & (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:129" *) \$6 ;
  assign \$8  = read_node_address_input == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:113" *) 2'h2;
  assign \$9  = ! (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:113" *) read_complete_input;
  assign \$10  = \$8  & (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:113" *) \$9 ;
  assign \$11  = write_node_address_input == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:129" *) 2'h2;
  assign \$12  = \$11  & (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:129" *) read_complete_input;
  assign \$13  = ! (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:129" *) write_complete_input;
  assign \$14  = \$12  & (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:129" *) \$13 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:85" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_write_bram_address <= 16'h0000;
    else buf_write_bram_address <= write_bram_address_input;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:86" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_read_bram_address <= 16'h0000;
    else buf_read_bram_address <= read_bram_address_input;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:87" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_write_node_address <= 8'h00;
    else buf_write_node_address <= write_node_address_input;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:88" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_read_node_address <= 8'h00;
    else buf_read_node_address <= read_node_address_input;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:62" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) write_bram_address_output <= 16'h0000;
    else write_bram_address_output <= buf_write_bram_address;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:60" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) read_bram_address_output <= 16'h0000;
    else read_bram_address_output <= buf_read_bram_address;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:58" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) write_node_address_output <= 8'h00;
    else write_node_address_output <= buf_write_node_address;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:56" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) read_node_address_output <= 8'h00;
    else read_node_address_output <= buf_read_node_address;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:89" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_data <= 32'd0;
    else buf_data <= data_input;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:90" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_read_complete <= 1'h0;
    else buf_read_complete <= read_complete_input;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:68" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) write_complete_output <= 1'h0;
    else write_complete_output <= buf_write_complete;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:93" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) read_next <= 1'h0;
    else read_next <= \$15 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:64" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) data_output <= 32'd0;
    else data_output <= \$16 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:66" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) read_complete_output <= 1'h0;
    else read_complete_output <= \$17 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:91" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_write_complete <= 1'h0;
    else buf_write_complete <= \$18 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$11 ) begin end
    \$15  = read_next;
    if (\$3 ) begin
      \$15  = 1'h1;
    end else if (read_next) begin
      \$15  = 1'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$11 ) begin end
    (* full_case = 32'd1 *)
    if (read_next) begin
      \$16  = bram_read_data;
    end else begin
      \$16  = buf_data;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$11 ) begin end
    (* full_case = 32'd1 *)
    if (read_next) begin
      \$17  = 1'h1;
    end else begin
      \$17  = buf_read_complete;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$11 ) begin end
    (* full_case = 32'd1 *)
    if (\$7 ) begin
      \$18  = 1'h1;
    end else begin
      \$18  = write_complete_input;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$11 ) begin end
    bram_address = 16'h0000;
    if (\$10 ) begin
      bram_address = read_bram_address_input;
    end
    if (\$14 ) begin
      bram_address = write_bram_address_input;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$11 ) begin end
    bram_write_data = 32'd0;
    if (\$14 ) begin
      bram_write_data = data_input;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$11 ) begin end
    (* full_case = 32'd1 *)
    if (\$14 ) begin
      bram_write_enable = 1'h1;
    end else begin
      bram_write_enable = 1'h0;
    end
  end
endmodule

(* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\global_timer.py:37" *)
(* generator = "Amaranth" *)
module \Controller.global_timers (sync_25_rst, trigger, timer_pulse, sync_25_clk);
  reg \$auto$verilog_backend.cc:2352:dump_module$12  = 0;
  wire \$1 ;
  wire \$10 ;
  wire [16:0] \$11 ;
  wire \$12 ;
  wire \$13 ;
  wire [16:0] \$14 ;
  wire \$15 ;
  wire \$16 ;
  wire [16:0] \$17 ;
  wire \$18 ;
  wire \$19 ;
  wire [16:0] \$2 ;
  wire [16:0] \$20 ;
  wire \$21 ;
  wire \$22 ;
  wire [16:0] \$23 ;
  wire \$24 ;
  wire \$25 ;
  wire \$26 ;
  wire \$27 ;
  wire \$28 ;
  wire \$29 ;
  wire \$3 ;
  wire \$30 ;
  wire \$31 ;
  wire \$32 ;
  wire \$33 ;
  wire \$34 ;
  wire \$35 ;
  wire \$36 ;
  wire \$37 ;
  wire \$38 ;
  reg [15:0] \$39 ;
  wire \$4 ;
  reg [15:0] \$40 ;
  reg [15:0] \$41 ;
  reg [15:0] \$42 ;
  reg [15:0] \$43 ;
  reg [15:0] \$44 ;
  reg [15:0] \$45 ;
  reg [15:0] \$46 ;
  wire [16:0] \$5 ;
  wire \$6 ;
  wire \$7 ;
  wire [16:0] \$8 ;
  wire \$9 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\global_timer.py:39" *)
  reg [15:0] current_count_0 = 16'h0000;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\global_timer.py:39" *)
  reg [15:0] current_count_1 = 16'h0000;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\global_timer.py:39" *)
  reg [15:0] current_count_2 = 16'h0000;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\global_timer.py:39" *)
  reg [15:0] current_count_3 = 16'h0000;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\global_timer.py:39" *)
  reg [15:0] current_count_4 = 16'h0000;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\global_timer.py:39" *)
  reg [15:0] current_count_5 = 16'h0000;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\global_timer.py:39" *)
  reg [15:0] current_count_6 = 16'h0000;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\global_timer.py:39" *)
  reg [15:0] current_count_7 = 16'h0000;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\global_timer.py:40" *)
  wire [15:0] reset_count_0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\global_timer.py:40" *)
  wire [15:0] reset_count_1;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\global_timer.py:40" *)
  wire [15:0] reset_count_2;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\global_timer.py:40" *)
  wire [15:0] reset_count_3;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\global_timer.py:40" *)
  wire [15:0] reset_count_4;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\global_timer.py:40" *)
  wire [15:0] reset_count_5;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\global_timer.py:40" *)
  wire [15:0] reset_count_6;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\global_timer.py:40" *)
  wire [15:0] reset_count_7;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:275" *)
  input sync_25_clk;
  wire sync_25_clk;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:275" *)
  input sync_25_rst;
  wire sync_25_rst;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\global_timer.py:17" *)
  output [7:0] timer_pulse;
  reg [7:0] timer_pulse;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\global_timer.py:19" *)
  input trigger;
  wire trigger;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\global_timer.py:39" *)
  always @(posedge sync_25_clk, posedge sync_25_rst)
    if (sync_25_rst) current_count_7 <= 16'h0000;
    else current_count_7 <= \$46 ;
  assign \$1  = | (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\global_timer.py:53" *) current_count_0;
  assign \$2  = current_count_0 - (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\global_timer.py:54" *) 1'h1;
  assign \$3  = current_count_0 == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\global_timer.py:56" *) 1'h1;
  assign \$4  = | (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\global_timer.py:53" *) current_count_1;
  assign \$5  = current_count_1 - (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\global_timer.py:54" *) 1'h1;
  assign \$6  = current_count_1 == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\global_timer.py:56" *) 1'h1;
  assign \$7  = | (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\global_timer.py:53" *) current_count_2;
  assign \$8  = current_count_2 - (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\global_timer.py:54" *) 1'h1;
  assign \$9  = current_count_2 == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\global_timer.py:56" *) 1'h1;
  assign \$10  = | (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\global_timer.py:53" *) current_count_3;
  assign \$11  = current_count_3 - (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\global_timer.py:54" *) 1'h1;
  assign \$12  = current_count_3 == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\global_timer.py:56" *) 1'h1;
  assign \$13  = | (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\global_timer.py:53" *) current_count_4;
  assign \$14  = current_count_4 - (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\global_timer.py:54" *) 1'h1;
  assign \$15  = current_count_4 == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\global_timer.py:56" *) 1'h1;
  assign \$16  = | (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\global_timer.py:53" *) current_count_5;
  assign \$17  = current_count_5 - (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\global_timer.py:54" *) 1'h1;
  assign \$18  = current_count_5 == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\global_timer.py:56" *) 1'h1;
  assign \$19  = | (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\global_timer.py:53" *) current_count_6;
  assign \$20  = current_count_6 - (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\global_timer.py:54" *) 1'h1;
  assign \$21  = current_count_6 == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\global_timer.py:56" *) 1'h1;
  assign \$22  = | (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\global_timer.py:53" *) current_count_7;
  assign \$23  = current_count_7 - (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\global_timer.py:54" *) 1'h1;
  assign \$24  = current_count_0 == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\global_timer.py:56" *) 1'h1;
  assign \$25  = | (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\global_timer.py:53" *) current_count_1;
  assign \$26  = current_count_1 == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\global_timer.py:56" *) 1'h1;
  assign \$27  = | (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\global_timer.py:53" *) current_count_2;
  assign \$28  = current_count_2 == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\global_timer.py:56" *) 1'h1;
  assign \$29  = | (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\global_timer.py:53" *) current_count_3;
  assign \$30  = current_count_3 == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\global_timer.py:56" *) 1'h1;
  assign \$31  = | (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\global_timer.py:53" *) current_count_4;
  assign \$32  = current_count_4 == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\global_timer.py:56" *) 1'h1;
  assign \$33  = | (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\global_timer.py:53" *) current_count_5;
  assign \$34  = current_count_5 == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\global_timer.py:56" *) 1'h1;
  assign \$35  = | (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\global_timer.py:53" *) current_count_6;
  assign \$36  = current_count_6 == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\global_timer.py:56" *) 1'h1;
  assign \$37  = | (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\global_timer.py:53" *) current_count_7;
  assign \$38  = current_count_7 == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\global_timer.py:56" *) 1'h1;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\global_timer.py:39" *)
  always @(posedge sync_25_clk, posedge sync_25_rst)
    if (sync_25_rst) current_count_0 <= 16'h0000;
    else current_count_0 <= \$39 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\global_timer.py:39" *)
  always @(posedge sync_25_clk, posedge sync_25_rst)
    if (sync_25_rst) current_count_1 <= 16'h0000;
    else current_count_1 <= \$40 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\global_timer.py:39" *)
  always @(posedge sync_25_clk, posedge sync_25_rst)
    if (sync_25_rst) current_count_2 <= 16'h0000;
    else current_count_2 <= \$41 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\global_timer.py:39" *)
  always @(posedge sync_25_clk, posedge sync_25_rst)
    if (sync_25_rst) current_count_3 <= 16'h0000;
    else current_count_3 <= \$42 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\global_timer.py:39" *)
  always @(posedge sync_25_clk, posedge sync_25_rst)
    if (sync_25_rst) current_count_4 <= 16'h0000;
    else current_count_4 <= \$43 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\global_timer.py:39" *)
  always @(posedge sync_25_clk, posedge sync_25_rst)
    if (sync_25_rst) current_count_5 <= 16'h0000;
    else current_count_5 <= \$44 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\global_timer.py:39" *)
  always @(posedge sync_25_clk, posedge sync_25_rst)
    if (sync_25_rst) current_count_6 <= 16'h0000;
    else current_count_6 <= \$45 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$12 ) begin end
    timer_pulse = 8'h00;
    if (\$24 ) begin
      timer_pulse[0] = 1'h1;
    end
    if (\$26 ) begin
      timer_pulse[1] = 1'h1;
    end
    if (\$28 ) begin
      timer_pulse[2] = 1'h1;
    end
    if (\$30 ) begin
      timer_pulse[3] = 1'h1;
    end
    if (\$32 ) begin
      timer_pulse[4] = 1'h1;
    end
    if (\$34 ) begin
      timer_pulse[5] = 1'h1;
    end
    if (\$36 ) begin
      timer_pulse[6] = 1'h1;
    end
    if (\$38 ) begin
      timer_pulse[7] = 1'h1;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$12 ) begin end
    \$39  = current_count_0;
    if (trigger) begin
      \$39  = 16'h000a;
    end else if (\$1 ) begin
      \$39  = \$2 [15:0];
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$12 ) begin end
    \$40  = current_count_1;
    if (\$3 ) begin
      \$40  = 16'h000a;
    end else if (\$4 ) begin
      \$40  = \$5 [15:0];
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$12 ) begin end
    \$41  = current_count_2;
    if (\$6 ) begin
      \$41  = 16'h000a;
    end else if (\$7 ) begin
      \$41  = \$8 [15:0];
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$12 ) begin end
    \$42  = current_count_3;
    if (\$9 ) begin
      \$42  = 16'h000a;
    end else if (\$10 ) begin
      \$42  = \$11 [15:0];
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$12 ) begin end
    \$43  = current_count_4;
    if (\$12 ) begin
      \$43  = 16'h000a;
    end else if (\$13 ) begin
      \$43  = \$14 [15:0];
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$12 ) begin end
    \$44  = current_count_5;
    if (\$15 ) begin
      \$44  = 16'h000a;
    end else if (\$16 ) begin
      \$44  = \$17 [15:0];
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$12 ) begin end
    \$45  = current_count_6;
    if (\$18 ) begin
      \$45  = 16'h000a;
    end else if (\$19 ) begin
      \$45  = \$20 [15:0];
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$12 ) begin end
    \$46  = current_count_7;
    if (\$21 ) begin
      \$46  = 16'h000a;
    end else if (\$22 ) begin
      \$46  = \$23 [15:0];
    end
  end
  assign reset_count_0 = 16'h000a;
  assign reset_count_1 = 16'h000a;
  assign reset_count_2 = 16'h000a;
  assign reset_count_3 = 16'h000a;
  assign reset_count_4 = 16'h000a;
  assign reset_count_5 = 16'h000a;
  assign reset_count_6 = 16'h000a;
  assign reset_count_7 = 16'h000a;
endmodule

(* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:80" *)
(* generator = "Amaranth" *)
module \Controller.global_timers_shift_dma_3 (sync_100_rst, read_bram_address_input, write_bram_address_input, read_node_address_input, write_node_address_input, data_input, read_complete_input, write_complete_input, write_bram_address_output, read_bram_address_output, write_node_address_output, read_node_address_output, write_complete_output, data_output, read_complete_output, bram_address, bram_write_data, bram_write_enable, sync_100_clk);
  reg \$auto$verilog_backend.cc:2352:dump_module$13  = 0;
  wire \$1 ;
  wire \$10 ;
  wire \$11 ;
  wire \$12 ;
  wire \$13 ;
  wire \$14 ;
  reg \$15 ;
  reg [31:0] \$16 ;
  reg \$17 ;
  reg \$18 ;
  wire \$2 ;
  wire \$3 ;
  wire \$4 ;
  wire \$5 ;
  wire \$6 ;
  wire \$7 ;
  wire \$8 ;
  wire \$9 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:70" *)
  output [15:0] bram_address;
  reg [15:0] bram_address;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:72" *)
  wire [31:0] bram_read_data;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:71" *)
  output [31:0] bram_write_data;
  reg [31:0] bram_write_data;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:73" *)
  output bram_write_enable;
  reg bram_write_enable;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:89" *)
  reg [31:0] buf_data = 32'd0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:86" *)
  reg [15:0] buf_read_bram_address = 16'h0000;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:90" *)
  reg buf_read_complete = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:88" *)
  reg [7:0] buf_read_node_address = 8'h00;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:85" *)
  reg [15:0] buf_write_bram_address = 16'h0000;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:91" *)
  reg buf_write_complete = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:87" *)
  reg [7:0] buf_write_node_address = 8'h00;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:63" *)
  input [31:0] data_input;
  wire [31:0] data_input;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:64" *)
  output [31:0] data_output;
  reg [31:0] data_output = 32'd0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:59" *)
  input [15:0] read_bram_address_input;
  wire [15:0] read_bram_address_input;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:60" *)
  output [15:0] read_bram_address_output;
  reg [15:0] read_bram_address_output = 16'h0000;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:65" *)
  input read_complete_input;
  wire read_complete_input;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:66" *)
  output read_complete_output;
  reg read_complete_output = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:93" *)
  reg read_next = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:55" *)
  input [7:0] read_node_address_input;
  wire [7:0] read_node_address_input;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:56" *)
  output [7:0] read_node_address_output;
  reg [7:0] read_node_address_output = 8'h00;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:273" *)
  input sync_100_clk;
  wire sync_100_clk;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:273" *)
  input sync_100_rst;
  wire sync_100_rst;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:61" *)
  input [15:0] write_bram_address_input;
  wire [15:0] write_bram_address_input;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:62" *)
  output [15:0] write_bram_address_output;
  reg [15:0] write_bram_address_output = 16'h0000;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:67" *)
  input write_complete_input;
  wire write_complete_input;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:68" *)
  output write_complete_output;
  reg write_complete_output = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:57" *)
  input [7:0] write_node_address_input;
  wire [7:0] write_node_address_input;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:58" *)
  output [7:0] write_node_address_output;
  reg [7:0] write_node_address_output = 8'h00;
  assign \$1  = read_node_address_input == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:113" *) 2'h3;
  assign \$2  = ! (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:113" *) read_complete_input;
  assign \$3  = \$1  & (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:113" *) \$2 ;
  assign \$4  = write_node_address_input == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:129" *) 2'h3;
  assign \$5  = \$4  & (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:129" *) read_complete_input;
  assign \$6  = ! (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:129" *) write_complete_input;
  assign \$7  = \$5  & (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:129" *) \$6 ;
  assign \$8  = read_node_address_input == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:113" *) 2'h3;
  assign \$9  = ! (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:113" *) read_complete_input;
  assign \$10  = \$8  & (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:113" *) \$9 ;
  assign \$11  = write_node_address_input == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:129" *) 2'h3;
  assign \$12  = \$11  & (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:129" *) read_complete_input;
  assign \$13  = ! (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:129" *) write_complete_input;
  assign \$14  = \$12  & (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:129" *) \$13 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:85" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_write_bram_address <= 16'h0000;
    else buf_write_bram_address <= write_bram_address_input;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:86" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_read_bram_address <= 16'h0000;
    else buf_read_bram_address <= read_bram_address_input;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:87" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_write_node_address <= 8'h00;
    else buf_write_node_address <= write_node_address_input;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:88" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_read_node_address <= 8'h00;
    else buf_read_node_address <= read_node_address_input;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:62" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) write_bram_address_output <= 16'h0000;
    else write_bram_address_output <= buf_write_bram_address;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:60" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) read_bram_address_output <= 16'h0000;
    else read_bram_address_output <= buf_read_bram_address;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:58" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) write_node_address_output <= 8'h00;
    else write_node_address_output <= buf_write_node_address;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:56" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) read_node_address_output <= 8'h00;
    else read_node_address_output <= buf_read_node_address;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:89" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_data <= 32'd0;
    else buf_data <= data_input;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:90" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_read_complete <= 1'h0;
    else buf_read_complete <= read_complete_input;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:68" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) write_complete_output <= 1'h0;
    else write_complete_output <= buf_write_complete;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:93" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) read_next <= 1'h0;
    else read_next <= \$15 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:64" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) data_output <= 32'd0;
    else data_output <= \$16 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:66" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) read_complete_output <= 1'h0;
    else read_complete_output <= \$17 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:91" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_write_complete <= 1'h0;
    else buf_write_complete <= \$18 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$13 ) begin end
    \$15  = read_next;
    if (\$3 ) begin
      \$15  = 1'h1;
    end else if (read_next) begin
      \$15  = 1'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$13 ) begin end
    (* full_case = 32'd1 *)
    if (read_next) begin
      \$16  = 32'd0;
    end else begin
      \$16  = buf_data;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$13 ) begin end
    (* full_case = 32'd1 *)
    if (read_next) begin
      \$17  = 1'h1;
    end else begin
      \$17  = buf_read_complete;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$13 ) begin end
    (* full_case = 32'd1 *)
    if (\$7 ) begin
      \$18  = 1'h1;
    end else begin
      \$18  = write_complete_input;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$13 ) begin end
    bram_address = 16'h0000;
    if (\$10 ) begin
      bram_address = read_bram_address_input;
    end
    if (\$14 ) begin
      bram_address = write_bram_address_input;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$13 ) begin end
    bram_write_data = 32'd0;
    if (\$14 ) begin
      bram_write_data = data_input;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$13 ) begin end
    (* full_case = 32'd1 *)
    if (\$14 ) begin
      bram_write_enable = 1'h1;
    end else begin
      bram_write_enable = 1'h0;
    end
  end
  assign bram_read_data = 32'd0;
endmodule

(* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\interface_cards\\serial_interface.py:168" *)
(* generator = "Amaranth" *)
module \Controller.serial_card (sync_25_clk, slotIn, sync_100_rst, sync_25_rst, rs422_tx, slotOut, slotOutEnable, rs422_rx, bram_read_data, bram_address, bram_write_data, bram_write_enable, sync_100_clk);
  reg \$auto$verilog_backend.cc:2352:dump_module$14  = 0;
  reg [31:0] \$1 ;
  reg [31:0] \$10 ;
  reg [9:0] \$2 ;
  reg [9:0] \$3 ;
  reg [6:0] \$4 ;
  reg \$5 ;
  reg [6:0] \$6 ;
  reg [7:0] \$7 ;
  reg [2:0] \$8 ;
  reg \$9 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\interface_cards\\serial_interface.py:46" *)
  input [15:0] bram_address;
  wire [15:0] bram_address;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\interface_cards\\serial_interface.py:48" *)
  output [31:0] bram_read_data;
  reg [31:0] bram_read_data = 32'd0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\interface_cards\\serial_interface.py:47" *)
  input [31:0] bram_write_data;
  wire [31:0] bram_write_data;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\interface_cards\\serial_interface.py:49" *)
  input bram_write_enable;
  wire bram_write_enable;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:22" *)
  wire busy;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:30" *)
  reg [2:0] byte_count = 3'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:31" *)
  reg [31:0] data_in = 32'd0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:32" *)
  wire [31:0] data_out;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:28" *)
  reg [6:0] device_address = 7'h00;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:24" *)
  wire error;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\interface_cards\\serial_interface.py:126" *)
  reg [6:0] quadrature_mode_enable = 7'h00;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:26" *)
  reg read = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:29" *)
  reg [7:0] register_address = 8'h00;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\interface_cards\\serial_interface.py:125" *)
  reg [9:0] rs422_mode_enable = 10'h000;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\interface_cards\\serial_interface.py:39" *)
  output [9:0] rs422_rx;
  reg [9:0] rs422_rx;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\interface_cards\\serial_interface.py:40" *)
  input [9:0] rs422_tx;
  wire [9:0] rs422_tx;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\interface_cards\\serial_interface.py:124" *)
  reg [9:0] rs485_mode_enable = 10'h000;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:16" *)
  wire scl;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:17" *)
  wire scl_enable;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:18" *)
  wire sda_in;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:19" *)
  wire sda_out;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:20" *)
  wire sda_out_enable;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\interface_cards\\serial_interface.py:18" *)
  input [21:0] slotIn;
  wire [21:0] slotIn;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\interface_cards\\serial_interface.py:16" *)
  output [21:0] slotOut;
  reg [21:0] slotOut;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\interface_cards\\serial_interface.py:17" *)
  output [21:0] slotOutEnable;
  reg [21:0] slotOutEnable;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:23" *)
  reg start = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:273" *)
  input sync_100_clk;
  wire sync_100_clk;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:273" *)
  input sync_100_rst;
  wire sync_100_rst;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:275" *)
  input sync_25_clk;
  wire sync_25_clk;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:275" *)
  input sync_25_rst;
  wire sync_25_rst;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\interface_cards\\serial_interface.py:48" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) bram_read_data <= 32'd0;
    else bram_read_data <= \$1 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\interface_cards\\serial_interface.py:124" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) rs485_mode_enable <= 10'h000;
    else rs485_mode_enable <= \$2 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\interface_cards\\serial_interface.py:125" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) rs422_mode_enable <= 10'h000;
    else rs422_mode_enable <= \$3 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\interface_cards\\serial_interface.py:126" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) quadrature_mode_enable <= 7'h00;
    else quadrature_mode_enable <= \$4 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:26" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) read <= 1'h0;
    else read <= \$5 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:28" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) device_address <= 7'h00;
    else device_address <= \$6 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:29" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) register_address <= 8'h00;
    else register_address <= \$7 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:30" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) byte_count <= 3'h0;
    else byte_count <= \$8 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:23" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) start <= 1'h0;
    else start <= \$9 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:31" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) data_in <= 32'd0;
    else data_in <= \$10 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\interface_cards\\serial_interface.py:171" *)
  \Controller.serial_card.i2c  i2c (
    .busy(busy),
    .byte_count(byte_count),
    .data_in(data_in),
    .data_out(data_out),
    .device_address(device_address),
    .error(error),
    .read(read),
    .register_address(register_address),
    .scl(scl),
    .scl_enable(scl_enable),
    .sda_in(slotIn[21]),
    .sda_out_enable(sda_out_enable),
    .start(start),
    .sync_25_clk(sync_25_clk),
    .sync_25_rst(sync_25_rst)
  );
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$14 ) begin end
    { slotOut[19], slotOut[17], slotOut[15], slotOut[13], slotOut[11], slotOut[9], slotOut[7], slotOut[5], slotOut[3], slotOut[1] } = 10'h000;
    if (rs422_mode_enable[0]) begin
      slotOut[19] = rs422_tx[0];
    end
    if (rs422_mode_enable[1]) begin
      slotOut[9] = rs422_tx[1];
    end
    if (rs422_mode_enable[2]) begin
      slotOut[17] = rs422_tx[2];
    end
    if (rs422_mode_enable[3]) begin
      slotOut[7] = rs422_tx[3];
    end
    if (rs422_mode_enable[4]) begin
      slotOut[15] = rs422_tx[4];
    end
    if (rs422_mode_enable[5]) begin
      slotOut[5] = rs422_tx[5];
    end
    if (rs422_mode_enable[6]) begin
      slotOut[13] = rs422_tx[6];
    end
    if (rs422_mode_enable[7]) begin
      slotOut[3] = rs422_tx[7];
    end
    if (rs422_mode_enable[8]) begin
      slotOut[11] = rs422_tx[8];
    end
    if (rs422_mode_enable[9]) begin
      slotOut[1] = rs422_tx[9];
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$14 ) begin end
    { slotOutEnable[19], slotOutEnable[17], slotOutEnable[15], slotOutEnable[13], slotOutEnable[11], slotOutEnable[9], slotOutEnable[7], slotOutEnable[5], slotOutEnable[3], slotOutEnable[1] } = 10'h000;
    if (rs422_mode_enable[0]) begin
      slotOutEnable[19] = 1'h1;
    end
    if (rs422_mode_enable[1]) begin
      slotOutEnable[9] = 1'h1;
    end
    if (rs422_mode_enable[2]) begin
      slotOutEnable[17] = 1'h1;
    end
    if (rs422_mode_enable[3]) begin
      slotOutEnable[7] = 1'h1;
    end
    if (rs422_mode_enable[4]) begin
      slotOutEnable[15] = 1'h1;
    end
    if (rs422_mode_enable[5]) begin
      slotOutEnable[5] = 1'h1;
    end
    if (rs422_mode_enable[6]) begin
      slotOutEnable[13] = 1'h1;
    end
    if (rs422_mode_enable[7]) begin
      slotOutEnable[3] = 1'h1;
    end
    if (rs422_mode_enable[8]) begin
      slotOutEnable[11] = 1'h1;
    end
    if (rs422_mode_enable[9]) begin
      slotOutEnable[1] = 1'h1;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$14 ) begin end
    rs422_rx = 10'h000;
    if (rs422_mode_enable[0]) begin
      rs422_rx[0] = slotIn[18];
    end
    if (rs422_mode_enable[1]) begin
      rs422_rx[1] = slotIn[8];
    end
    if (rs422_mode_enable[2]) begin
      rs422_rx[2] = slotIn[16];
    end
    if (rs422_mode_enable[3]) begin
      rs422_rx[3] = slotIn[6];
    end
    if (rs422_mode_enable[4]) begin
      rs422_rx[4] = slotIn[14];
    end
    if (rs422_mode_enable[5]) begin
      rs422_rx[5] = slotIn[4];
    end
    if (rs422_mode_enable[6]) begin
      rs422_rx[6] = slotIn[12];
    end
    if (rs422_mode_enable[7]) begin
      rs422_rx[7] = slotIn[2];
    end
    if (rs422_mode_enable[8]) begin
      rs422_rx[8] = slotIn[10];
    end
    if (rs422_mode_enable[9]) begin
      rs422_rx[9] = slotIn[0];
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$14 ) begin end
    \$1  = bram_read_data;
    casez (bram_address)
      16'h0000:
          \$1  = 32'd0;
      16'h0001:
          \$1  = 32'd0;
      16'h0003:
          \$1  = 32'd0;
      16'h0002:
          \$1  = data_out;
      16'h0004:
          \$1  = { 30'h00000000, error, busy };
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$14 ) begin end
    \$2  = rs485_mode_enable;
    casez (bram_address)
      16'h0000:
          if (bram_write_enable) begin
            \$2  = bram_write_data[9:0];
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$14 ) begin end
    \$3  = rs422_mode_enable;
    casez (bram_address)
      16'h0000:
          if (bram_write_enable) begin
            \$3  = bram_write_data[19:10];
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$14 ) begin end
    \$4  = quadrature_mode_enable;
    casez (bram_address)
      16'h0000:
          if (bram_write_enable) begin
            \$4  = bram_write_data[26:20];
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$14 ) begin end
    \$5  = read;
    casez (bram_address)
      16'h0000:
          /* empty */;
      16'h0001:
          if (bram_write_enable) begin
            \$5  = bram_write_data[0];
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$14 ) begin end
    \$6  = device_address;
    casez (bram_address)
      16'h0000:
          /* empty */;
      16'h0001:
          if (bram_write_enable) begin
            \$6  = bram_write_data[7:1];
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$14 ) begin end
    \$7  = register_address;
    casez (bram_address)
      16'h0000:
          /* empty */;
      16'h0001:
          if (bram_write_enable) begin
            \$7  = bram_write_data[15:8];
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$14 ) begin end
    \$8  = byte_count;
    casez (bram_address)
      16'h0000:
          /* empty */;
      16'h0001:
          if (bram_write_enable) begin
            \$8  = bram_write_data[18:16];
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$14 ) begin end
    \$9  = start;
    casez (bram_address)
      16'h0000:
          /* empty */;
      16'h0001:
          if (bram_write_enable) begin
            \$9  = bram_write_data[19];
          end
    endcase
    if (busy) begin
      \$9  = 1'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$14 ) begin end
    \$10  = data_in;
    casez (bram_address)
      16'h0000:
          /* empty */;
      16'h0001:
          /* empty */;
      16'h0003:
          if (bram_write_enable) begin
            \$10  = bram_write_data;
          end
    endcase
  end
  assign sda_in = slotIn[21];
  assign sda_out = 1'h0;
  always @*
    slotOutEnable[21] = sda_out_enable;
  always @*
    slotOutEnable[20] = scl_enable;
  always @*
    slotOutEnable[0] = 1'h0;
  always @*
    slotOutEnable[2] = 1'h0;
  always @*
    slotOutEnable[4] = 1'h0;
  always @*
    slotOutEnable[6] = 1'h0;
  always @*
    slotOutEnable[8] = 1'h0;
  always @*
    slotOutEnable[10] = 1'h0;
  always @*
    slotOutEnable[12] = 1'h0;
  always @*
    slotOutEnable[14] = 1'h0;
  always @*
    slotOutEnable[16] = 1'h0;
  always @*
    slotOutEnable[18] = 1'h0;
  always @*
    slotOut[21] = 1'h0;
  always @*
    slotOut[20] = scl;
  always @*
    slotOut[0] = 1'h0;
  always @*
    slotOut[2] = 1'h0;
  always @*
    slotOut[4] = 1'h0;
  always @*
    slotOut[6] = 1'h0;
  always @*
    slotOut[8] = 1'h0;
  always @*
    slotOut[10] = 1'h0;
  always @*
    slotOut[12] = 1'h0;
  always @*
    slotOut[14] = 1'h0;
  always @*
    slotOut[16] = 1'h0;
  always @*
    slotOut[18] = 1'h0;
endmodule

(* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:42" *)
(* generator = "Amaranth" *)
module \Controller.serial_card.i2c (sda_in, sync_25_rst, sda_out_enable, read, device_address, register_address, byte_count, start, data_in, scl, busy, scl_enable, error, data_out, sync_25_clk);
  reg \$auto$verilog_backend.cc:2352:dump_module$15  = 0;
  wire \$1 ;
  wire \$10 ;
  wire [5:0] \$11 ;
  wire [5:0] \$12 ;
  wire \$13 ;
  wire \$14 ;
  wire [3:0] \$15 ;
  wire \$16 ;
  wire [3:0] \$17 ;
  wire [3:0] \$18 ;
  wire \$19 ;
  wire \$2 ;
  wire [5:0] \$20 ;
  wire [5:0] \$21 ;
  wire \$22 ;
  wire [3:0] \$23 ;
  wire [3:0] \$24 ;
  wire [3:0] \$25 ;
  wire \$26 ;
  wire \$27 ;
  wire \$28 ;
  wire \$29 ;
  wire [5:0] \$3 ;
  wire \$30 ;
  wire \$31 ;
  wire \$32 ;
  wire \$33 ;
  wire \$34 ;
  wire \$35 ;
  wire \$36 ;
  wire \$37 ;
  wire \$38 ;
  wire \$39 ;
  wire \$4 ;
  wire \$40 ;
  reg \$41 ;
  reg [4:0] \$42 ;
  reg [3:0] \$43 ;
  reg \$44 ;
  reg \$45 ;
  reg \$46 ;
  reg \$47 ;
  reg \$48 ;
  reg \$49 ;
  wire \$5 ;
  reg [3:0] \$50 ;
  reg \$51 ;
  reg [2:0] \$52 ;
  reg [2:0] \$53 ;
  reg [2:0] \$54 ;
  reg [31:0] \$55 ;
  reg [47:0] \$56 ;
  reg [31:0] \$57 ;
  wire [4:0] \$6 ;
  wire \$7 ;
  wire [7:0] \$8 ;
  wire [7:0] \$9 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:52" *)
  reg [2:0] bit_counter = 3'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:22" *)
  output busy;
  reg busy = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:30" *)
  input [2:0] byte_count;
  wire [2:0] byte_count;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:53" *)
  reg [2:0] byte_counter = 3'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:82" *)
  reg [2:0] bytes_sent = 3'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:46" *)
  reg [4:0] counter = 5'h00;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:76" *)
  reg d_out = 1'h1;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:31" *)
  input [31:0] data_in;
  wire [31:0] data_in;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:32" *)
  output [31:0] data_out;
  reg [31:0] data_out = 32'd0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:28" *)
  input [6:0] device_address;
  wire [6:0] device_address;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:24" *)
  output error;
  reg error = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:47" *)
  reg [3:0] half_counter = 4'h0;
  (* src = "C:\\Program Files\\WindowsApps\\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\\lib\\contextlib.py:142" *)
  reg [3:0] i2c_fsm_state = 4'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:26" *)
  input read;
  wire read;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:80" *)
  reg [31:0] read_data = 32'd0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:84" *)
  reg read_next = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:29" *)
  input [7:0] register_address;
  wire [7:0] register_address;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:16" *)
  output scl;
  reg scl = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:17" *)
  output scl_enable;
  reg scl_enable = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:49" *)
  reg scl_high_sample = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:50" *)
  reg scl_low_sample = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:45" *)
  reg scl_toggle = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:18" *)
  input sda_in;
  wire sda_in;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:20" *)
  output sda_out_enable;
  wire sda_out_enable;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:79" *)
  reg [47:0] send_data = 48'h000000000000;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:23" *)
  input start;
  wire start;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:275" *)
  input sync_25_clk;
  wire sync_25_clk;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:275" *)
  input sync_25_rst;
  wire sync_25_rst;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:45" *)
  always @(posedge sync_25_clk, posedge sync_25_rst)
    if (sync_25_rst) scl_toggle <= 1'h0;
    else scl_toggle <= \$41 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:46" *)
  always @(posedge sync_25_clk, posedge sync_25_rst)
    if (sync_25_rst) counter <= 5'h00;
    else counter <= \$42 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:47" *)
  always @(posedge sync_25_clk, posedge sync_25_rst)
    if (sync_25_rst) half_counter <= 4'h0;
    else half_counter <= \$43 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:49" *)
  always @(posedge sync_25_clk, posedge sync_25_rst)
    if (sync_25_rst) scl_high_sample <= 1'h0;
    else scl_high_sample <= \$44 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:50" *)
  always @(posedge sync_25_clk, posedge sync_25_rst)
    if (sync_25_rst) scl_low_sample <= 1'h0;
    else scl_low_sample <= \$45 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:16" *)
  always @(posedge sync_25_clk, posedge sync_25_rst)
    if (sync_25_rst) scl <= 1'h0;
    else scl <= \$7 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:22" *)
  always @(posedge sync_25_clk, posedge sync_25_rst)
    if (sync_25_rst) busy <= 1'h0;
    else busy <= \$46 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:76" *)
  always @(posedge sync_25_clk, posedge sync_25_rst)
    if (sync_25_rst) d_out <= 1'h1;
    else d_out <= \$47 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:17" *)
  always @(posedge sync_25_clk, posedge sync_25_rst)
    if (sync_25_rst) scl_enable <= 1'h0;
    else scl_enable <= \$48 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:84" *)
  always @(posedge sync_25_clk, posedge sync_25_rst)
    if (sync_25_rst) read_next <= 1'h0;
    else read_next <= \$49 ;
  (* src = "C:\\Program Files\\WindowsApps\\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\\lib\\contextlib.py:142" *)
  always @(posedge sync_25_clk, posedge sync_25_rst)
    if (sync_25_rst) i2c_fsm_state <= 4'h0;
    else i2c_fsm_state <= \$50 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:24" *)
  always @(posedge sync_25_clk, posedge sync_25_rst)
    if (sync_25_rst) error <= 1'h0;
    else error <= \$51 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:53" *)
  always @(posedge sync_25_clk, posedge sync_25_rst)
    if (sync_25_rst) byte_counter <= 3'h0;
    else byte_counter <= \$52 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:82" *)
  always @(posedge sync_25_clk, posedge sync_25_rst)
    if (sync_25_rst) bytes_sent <= 3'h0;
    else bytes_sent <= \$53 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:52" *)
  always @(posedge sync_25_clk, posedge sync_25_rst)
    if (sync_25_rst) bit_counter <= 3'h0;
    else bit_counter <= \$54 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:80" *)
  always @(posedge sync_25_clk, posedge sync_25_rst)
    if (sync_25_rst) read_data <= 32'd0;
    else read_data <= \$55 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:79" *)
  always @(posedge sync_25_clk, posedge sync_25_rst)
    if (sync_25_rst) send_data <= 48'h000000000000;
    else send_data <= \$56 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:32" *)
  always @(posedge sync_25_clk, posedge sync_25_rst)
    if (sync_25_rst) data_out <= 32'd0;
    else data_out <= \$57 ;
  assign \$1  = ! (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:56" *) counter;
  assign \$2  = ~ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:57" *) scl_toggle;
  assign \$3  = counter - (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:62" *) 1'h1;
  assign \$4  = ! (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:63" *) half_counter;
  assign \$5  = ~ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:65" *) scl;
  assign \$6  = half_counter - (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:68" *) 1'h1;
  assign \$7  = scl_enable & (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:72" *) scl_toggle;
  assign \$9  = \$8  | (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:105" *) { 7'h00, read_next };
  assign \$10  = ! (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:113" *) counter;
  assign \$12  = { 3'h0, bit_counter } | (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:122" *) \$11 ;
  assign \$13  = send_data >> \$12 ;
  assign \$14  = ! (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:124" *) bit_counter;
  assign \$15  = byte_counter - (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:125" *) 1'h1;
  assign \$16  = byte_counter < (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:126" *) 3'h4;
  assign \$17  = bytes_sent + (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:127" *) 1'h1;
  assign \$18  = bit_counter - (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:132" *) 1'h1;
  assign \$21  = { 3'h0, bit_counter } | (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:142" *) \$20 ;
  assign \$22  = ! (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:144" *) bit_counter;
  assign \$23  = byte_counter - (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:145" *) 1'h1;
  assign \$24  = bytes_sent + (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:146" *) 1'h1;
  assign \$25  = bit_counter - (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:151" *) 1'h1;
  assign \$26  = bytes_sent >= (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:155" *) byte_count;
  assign \$27  = bytes_sent >= (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:175" *) byte_count;
  assign \$28  = byte_counter == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:177" *) 2'h3;
  assign \$29  = read & (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:177" *) \$28 ;
  assign sda_out_enable = ~ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\i2c.py:77" *) d_out;
  assign \$30  = ! (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\hdl\\_dsl.py:490" *) i2c_fsm_state;
  assign \$31  = i2c_fsm_state == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\hdl\\_dsl.py:490" *) 1'h1;
  assign \$32  = i2c_fsm_state == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\hdl\\_dsl.py:490" *) 2'h2;
  assign \$33  = i2c_fsm_state == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\hdl\\_dsl.py:490" *) 2'h3;
  assign \$34  = i2c_fsm_state == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\hdl\\_dsl.py:490" *) 3'h4;
  assign \$35  = i2c_fsm_state == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\hdl\\_dsl.py:490" *) 3'h5;
  assign \$36  = i2c_fsm_state == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\hdl\\_dsl.py:490" *) 3'h6;
  assign \$37  = i2c_fsm_state == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\hdl\\_dsl.py:490" *) 3'h7;
  assign \$38  = i2c_fsm_state == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\hdl\\_dsl.py:490" *) 4'h8;
  assign \$39  = i2c_fsm_state == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\hdl\\_dsl.py:490" *) 4'h9;
  assign \$40  = i2c_fsm_state == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\venv\\lib\\site-packages\\amaranth\\hdl\\_dsl.py:490" *) 4'ha;
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$15 ) begin end
    (* full_case = 32'd1 *)
    if (\$1 ) begin
      \$42  = 5'h1e;
    end else begin
      \$42  = \$3 [4:0];
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$15 ) begin end
    (* full_case = 32'd1 *)
    if (\$1 ) begin
      \$43  = 4'he;
    end else begin
      (* full_case = 32'd1 *)
      if (\$4 ) begin
        \$43  = 4'hf;
      end else begin
        \$43  = \$6 [3:0];
      end
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$15 ) begin end
    \$44  = scl_high_sample;
    (* full_case = 32'd1 *)
    if (\$1 ) begin
    end else begin
      (* full_case = 32'd1 *)
      if (\$4 ) begin
        \$44  = scl;
      end else begin
        \$44  = 1'h0;
      end
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$15 ) begin end
    \$45  = scl_low_sample;
    (* full_case = 32'd1 *)
    if (\$1 ) begin
    end else begin
      (* full_case = 32'd1 *)
      if (\$4 ) begin
        \$45  = \$5 ;
      end else begin
        \$45  = 1'h0;
      end
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$15 ) begin end
    \$46  = busy;
    casez (i2c_fsm_state)
      4'h0:
          \$46  = 1'h0;
      4'h1:
          \$46  = 1'h1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$15 ) begin end
    \$47  = d_out;
    casez (i2c_fsm_state)
      4'h0:
          \$47  = 1'h1;
      4'h1:
          if (scl_high_sample) begin
            \$47  = 1'h0;
          end
      4'h2:
          if (scl_low_sample) begin
            \$47  = \$13 ;
          end
      4'h4:
          if (scl_high_sample) begin
            \$47  = 1'h0;
          end
      4'h5:
          /* empty */;
      4'h6:
          if (scl_low_sample) begin
            \$47  = \$26 ;
          end
      4'h7:
          /* empty */;
      4'h3:
          if (scl_low_sample) begin
            \$47  = 1'h1;
          end
      4'h9:
          /* empty */;
      4'h8:
        begin
          if (scl_low_sample) begin
            \$47  = 1'h0;
          end
          if (scl_high_sample) begin
            \$47  = 1'h1;
          end
        end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$15 ) begin end
    \$48  = scl_enable;
    casez (i2c_fsm_state)
      4'h0:
          \$48  = 1'h0;
      4'h1:
          if (\$10 ) begin
            \$48  = 1'h1;
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$15 ) begin end
    \$49  = read_next;
    casez (i2c_fsm_state)
      4'h0:
          \$49  = 1'h0;
      4'h1:
          /* empty */;
      4'h2:
          /* empty */;
      4'h4:
          /* empty */;
      4'h5:
          /* empty */;
      4'h6:
          /* empty */;
      4'h7:
          /* empty */;
      4'h3:
          /* empty */;
      4'h9:
          if (scl_high_sample) begin
            (* full_case = 32'd1 *)
            if (sda_in) begin
            end else begin
              if (\$27 ) begin
              end else if (\$29 ) begin
                \$49  = 1'h1;
              end
            end
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$15 ) begin end
    \$50  = i2c_fsm_state;
    casez (i2c_fsm_state)
      4'h0:
          if (start) begin
            \$50  = 4'h1;
          end
      4'h1:
          if (scl_high_sample) begin
            \$50  = 4'h2;
          end
      4'h2:
          if (scl_low_sample) begin
            if (\$14 ) begin
              \$50  = 4'h3;
            end
          end
      4'h4:
          if (scl_high_sample) begin
            \$50  = 4'h5;
          end
      4'h5:
          if (scl_high_sample) begin
            if (\$22 ) begin
              \$50  = 4'h6;
            end
          end
      4'h6:
          if (scl_low_sample) begin
            \$50  = 4'h7;
          end
      4'h7:
          if (scl_low_sample) begin
            (* full_case = 32'd1 *)
            if (d_out) begin
              \$50  = 4'h8;
            end else begin
              \$50  = 4'h5;
            end
          end
      4'h3:
          if (scl_low_sample) begin
            \$50  = 4'h9;
          end
      4'h9:
          if (scl_high_sample) begin
            (* full_case = 32'd1 *)
            if (sda_in) begin
              \$50  = 4'ha;
            end else begin
              (* full_case = 32'd1 *)
              if (\$27 ) begin
                \$50  = 4'h8;
              end else if (\$29 ) begin
                \$50  = 4'h1;
              end else if (read_next) begin
                \$50  = 4'h5;
              end else begin
                \$50  = 4'h2;
              end
            end
          end
      4'h8:
          if (scl_high_sample) begin
            \$50  = 4'h0;
          end
      4'ha:
          \$50  = 4'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$15 ) begin end
    \$51  = error;
    casez (i2c_fsm_state)
      4'h0:
          /* empty */;
      4'h1:
          \$51  = 1'h0;
      4'h2:
          /* empty */;
      4'h4:
          /* empty */;
      4'h5:
          /* empty */;
      4'h6:
          /* empty */;
      4'h7:
          /* empty */;
      4'h3:
          /* empty */;
      4'h9:
          /* empty */;
      4'h8:
          /* empty */;
      4'ha:
          \$51  = 1'h1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$15 ) begin end
    \$52  = byte_counter;
    casez (i2c_fsm_state)
      4'h0:
          /* empty */;
      4'h1:
          \$52  = 3'h5;
      4'h2:
          if (scl_low_sample) begin
            if (\$14 ) begin
              \$52  = \$15 [2:0];
            end
          end
      4'h4:
          /* empty */;
      4'h5:
          if (scl_high_sample) begin
            if (\$22 ) begin
              \$52  = \$23 [2:0];
            end
          end
      4'h6:
          /* empty */;
      4'h7:
          /* empty */;
      4'h3:
          /* empty */;
      4'h9:
          if (scl_high_sample) begin
            (* full_case = 32'd1 *)
            if (sda_in) begin
            end else begin
              if (\$27 ) begin
              end else if (\$29 ) begin
                \$52  = 3'h5;
              end else if (read_next) begin
                \$52  = 3'h3;
              end
            end
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$15 ) begin end
    \$53  = bytes_sent;
    casez (i2c_fsm_state)
      4'h0:
          /* empty */;
      4'h1:
          \$53  = 3'h0;
      4'h2:
          if (scl_low_sample) begin
            if (\$14 ) begin
              if (\$16 ) begin
                \$53  = \$17 [2:0];
              end
            end
          end
      4'h4:
          /* empty */;
      4'h5:
          if (scl_high_sample) begin
            if (\$22 ) begin
              \$53  = \$24 [2:0];
            end
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$15 ) begin end
    \$54  = bit_counter;
    casez (i2c_fsm_state)
      4'h0:
          /* empty */;
      4'h1:
          \$54  = 3'h7;
      4'h2:
          if (scl_low_sample) begin
            (* full_case = 32'd1 *)
            if (\$14 ) begin
              \$54  = 3'h7;
            end else begin
              \$54  = \$18 [2:0];
            end
          end
      4'h4:
          /* empty */;
      4'h5:
          if (scl_high_sample) begin
            (* full_case = 32'd1 *)
            if (\$22 ) begin
              \$54  = 3'h7;
            end else begin
              \$54  = \$25 [2:0];
            end
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$15 ) begin end
    \$55  = read_data;
    casez (i2c_fsm_state)
      4'h0:
          /* empty */;
      4'h1:
          \$55  = 32'd0;
      4'h2:
          /* empty */;
      4'h4:
          /* empty */;
      4'h5:
          if (scl_high_sample) begin
            casez (\$21 )
              6'h00:
                  \$55 [0] = \$19 ;
              6'h01:
                  \$55 [1] = \$19 ;
              6'h02:
                  \$55 [2] = \$19 ;
              6'h03:
                  \$55 [3] = \$19 ;
              6'h04:
                  \$55 [4] = \$19 ;
              6'h05:
                  \$55 [5] = \$19 ;
              6'h06:
                  \$55 [6] = \$19 ;
              6'h07:
                  \$55 [7] = \$19 ;
              6'h08:
                  \$55 [8] = \$19 ;
              6'h09:
                  \$55 [9] = \$19 ;
              6'h0a:
                  \$55 [10] = \$19 ;
              6'h0b:
                  \$55 [11] = \$19 ;
              6'h0c:
                  \$55 [12] = \$19 ;
              6'h0d:
                  \$55 [13] = \$19 ;
              6'h0e:
                  \$55 [14] = \$19 ;
              6'h0f:
                  \$55 [15] = \$19 ;
              6'h10:
                  \$55 [16] = \$19 ;
              6'h11:
                  \$55 [17] = \$19 ;
              6'h12:
                  \$55 [18] = \$19 ;
              6'h13:
                  \$55 [19] = \$19 ;
              6'h14:
                  \$55 [20] = \$19 ;
              6'h15:
                  \$55 [21] = \$19 ;
              6'h16:
                  \$55 [22] = \$19 ;
              6'h17:
                  \$55 [23] = \$19 ;
              6'h18:
                  \$55 [24] = \$19 ;
              6'h19:
                  \$55 [25] = \$19 ;
              6'h1a:
                  \$55 [26] = \$19 ;
              6'h1b:
                  \$55 [27] = \$19 ;
              6'h1c:
                  \$55 [28] = \$19 ;
              6'h1d:
                  \$55 [29] = \$19 ;
              6'h1e:
                  \$55 [30] = \$19 ;
              6'h1f:
                  \$55 [31] = \$19 ;
            endcase
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$15 ) begin end
    \$56  = send_data;
    casez (i2c_fsm_state)
      4'h0:
          /* empty */;
      4'h1:
        begin
          \$56 [47:40] = \$9 ;
          \$56 [39:32] = register_address;
          \$56 [31:24] = data_in[7:0];
          \$56 [23:16] = data_in[15:8];
          \$56 [15:8] = data_in[23:16];
          \$56 [7:0] = data_in[31:24];
        end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$15 ) begin end
    \$57  = data_out;
    casez (i2c_fsm_state)
      4'h0:
          /* empty */;
      4'h1:
          /* empty */;
      4'h2:
          /* empty */;
      4'h4:
          /* empty */;
      4'h5:
          /* empty */;
      4'h6:
          /* empty */;
      4'h7:
          /* empty */;
      4'h3:
          /* empty */;
      4'h9:
          /* empty */;
      4'h8:
        begin
          \$57 [7:0] = read_data[31:24];
          \$57 [15:8] = read_data[23:16];
          \$57 [23:16] = read_data[15:8];
          \$57 [31:24] = read_data[7:0];
        end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$15 ) begin end
    \$41  = scl_toggle;
    if (\$1 ) begin
      \$41  = \$2 ;
    end
  end
  assign \$8  = { device_address, 1'h0 };
  assign \$11  = { byte_counter, 3'h0 };
  assign \$19  = 1'h1;
  assign \$20  = { byte_counter, 3'h0 };
endmodule

(* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:80" *)
(* generator = "Amaranth" *)
module \Controller.serial_card_shift_dma_1 (sync_100_rst, read_bram_address_input, write_bram_address_input, read_node_address_input, write_node_address_input, data_input, read_complete_input, write_complete_input, bram_read_data, write_bram_address_output, read_bram_address_output, write_node_address_output, read_node_address_output, write_complete_output, data_output, read_complete_output, bram_address, bram_write_data, bram_write_enable, sync_100_clk);
  reg \$auto$verilog_backend.cc:2352:dump_module$16  = 0;
  wire \$1 ;
  wire \$10 ;
  wire \$11 ;
  wire \$12 ;
  wire \$13 ;
  wire \$14 ;
  reg \$15 ;
  reg [31:0] \$16 ;
  reg \$17 ;
  reg \$18 ;
  wire \$2 ;
  wire \$3 ;
  wire \$4 ;
  wire \$5 ;
  wire \$6 ;
  wire \$7 ;
  wire \$8 ;
  wire \$9 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:70" *)
  output [15:0] bram_address;
  reg [15:0] bram_address;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:72" *)
  input [31:0] bram_read_data;
  wire [31:0] bram_read_data;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:71" *)
  output [31:0] bram_write_data;
  reg [31:0] bram_write_data;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:73" *)
  output bram_write_enable;
  reg bram_write_enable;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:89" *)
  reg [31:0] buf_data = 32'd0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:86" *)
  reg [15:0] buf_read_bram_address = 16'h0000;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:90" *)
  reg buf_read_complete = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:88" *)
  reg [7:0] buf_read_node_address = 8'h00;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:85" *)
  reg [15:0] buf_write_bram_address = 16'h0000;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:91" *)
  reg buf_write_complete = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:87" *)
  reg [7:0] buf_write_node_address = 8'h00;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:63" *)
  input [31:0] data_input;
  wire [31:0] data_input;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:64" *)
  output [31:0] data_output;
  reg [31:0] data_output = 32'd0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:59" *)
  input [15:0] read_bram_address_input;
  wire [15:0] read_bram_address_input;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:60" *)
  output [15:0] read_bram_address_output;
  reg [15:0] read_bram_address_output = 16'h0000;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:65" *)
  input read_complete_input;
  wire read_complete_input;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:66" *)
  output read_complete_output;
  reg read_complete_output = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:93" *)
  reg read_next = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:55" *)
  input [7:0] read_node_address_input;
  wire [7:0] read_node_address_input;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:56" *)
  output [7:0] read_node_address_output;
  reg [7:0] read_node_address_output = 8'h00;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:273" *)
  input sync_100_clk;
  wire sync_100_clk;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:273" *)
  input sync_100_rst;
  wire sync_100_rst;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:61" *)
  input [15:0] write_bram_address_input;
  wire [15:0] write_bram_address_input;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:62" *)
  output [15:0] write_bram_address_output;
  reg [15:0] write_bram_address_output = 16'h0000;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:67" *)
  input write_complete_input;
  wire write_complete_input;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:68" *)
  output write_complete_output;
  reg write_complete_output = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:57" *)
  input [7:0] write_node_address_input;
  wire [7:0] write_node_address_input;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:58" *)
  output [7:0] write_node_address_output;
  reg [7:0] write_node_address_output = 8'h00;
  assign \$1  = read_node_address_input == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:113" *) 1'h1;
  assign \$2  = ! (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:113" *) read_complete_input;
  assign \$3  = \$1  & (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:113" *) \$2 ;
  assign \$4  = write_node_address_input == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:129" *) 1'h1;
  assign \$5  = \$4  & (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:129" *) read_complete_input;
  assign \$6  = ! (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:129" *) write_complete_input;
  assign \$7  = \$5  & (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:129" *) \$6 ;
  assign \$8  = read_node_address_input == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:113" *) 1'h1;
  assign \$9  = ! (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:113" *) read_complete_input;
  assign \$10  = \$8  & (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:113" *) \$9 ;
  assign \$11  = write_node_address_input == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:129" *) 1'h1;
  assign \$12  = \$11  & (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:129" *) read_complete_input;
  assign \$13  = ! (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:129" *) write_complete_input;
  assign \$14  = \$12  & (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:129" *) \$13 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:85" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_write_bram_address <= 16'h0000;
    else buf_write_bram_address <= write_bram_address_input;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:86" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_read_bram_address <= 16'h0000;
    else buf_read_bram_address <= read_bram_address_input;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:87" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_write_node_address <= 8'h00;
    else buf_write_node_address <= write_node_address_input;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:88" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_read_node_address <= 8'h00;
    else buf_read_node_address <= read_node_address_input;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:62" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) write_bram_address_output <= 16'h0000;
    else write_bram_address_output <= buf_write_bram_address;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:60" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) read_bram_address_output <= 16'h0000;
    else read_bram_address_output <= buf_read_bram_address;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:58" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) write_node_address_output <= 8'h00;
    else write_node_address_output <= buf_write_node_address;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:56" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) read_node_address_output <= 8'h00;
    else read_node_address_output <= buf_read_node_address;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:89" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_data <= 32'd0;
    else buf_data <= data_input;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:90" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_read_complete <= 1'h0;
    else buf_read_complete <= read_complete_input;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:68" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) write_complete_output <= 1'h0;
    else write_complete_output <= buf_write_complete;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:93" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) read_next <= 1'h0;
    else read_next <= \$15 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:64" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) data_output <= 32'd0;
    else data_output <= \$16 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:66" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) read_complete_output <= 1'h0;
    else read_complete_output <= \$17 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:91" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_write_complete <= 1'h0;
    else buf_write_complete <= \$18 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$16 ) begin end
    \$15  = read_next;
    if (\$3 ) begin
      \$15  = 1'h1;
    end else if (read_next) begin
      \$15  = 1'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$16 ) begin end
    (* full_case = 32'd1 *)
    if (read_next) begin
      \$16  = bram_read_data;
    end else begin
      \$16  = buf_data;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$16 ) begin end
    (* full_case = 32'd1 *)
    if (read_next) begin
      \$17  = 1'h1;
    end else begin
      \$17  = buf_read_complete;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$16 ) begin end
    (* full_case = 32'd1 *)
    if (\$7 ) begin
      \$18  = 1'h1;
    end else begin
      \$18  = write_complete_input;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$16 ) begin end
    bram_address = 16'h0000;
    if (\$10 ) begin
      bram_address = read_bram_address_input;
    end
    if (\$14 ) begin
      bram_address = write_bram_address_input;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$16 ) begin end
    bram_write_data = 32'd0;
    if (\$14 ) begin
      bram_write_data = data_input;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$16 ) begin end
    (* full_case = 32'd1 *)
    if (\$14 ) begin
      bram_write_enable = 1'h1;
    end else begin
      bram_write_enable = 1'h0;
    end
  end
endmodule

(* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:186" *)
(* generator = "Amaranth" *)
module \Controller.shift_dma (sync_100_rst, instruction_memory_read_data, bram_read_data, start, \read_node_address_input$36 , \write_node_address_input$38 , \read_bram_address_input$40 , \write_bram_address_input$42 , \data_input$44 , read_complete_input, write_complete_input, instruction_memory_address, data_memory_address, busy, write_bram_address_output, read_bram_address_output, write_node_address_output, read_node_address_output, write_complete_output, data_output, read_complete_output
, data_memory_write_data, data_memory_write_enable, sync_100_clk);
  reg \$auto$verilog_backend.cc:2352:dump_module$17  = 0;
  wire \$1 ;
  wire \$10 ;
  wire \$11 ;
  wire \$12 ;
  wire \$13 ;
  wire \$14 ;
  wire [16:0] \$15 ;
  wire [16:0] \$16 ;
  wire [16:0] \$17 ;
  reg [7:0] \$18 ;
  reg [7:0] \$19 ;
  wire \$2 ;
  reg [15:0] \$20 ;
  reg [15:0] \$21 ;
  reg [31:0] \$22 ;
  reg \$23 ;
  reg \$24 ;
  reg \$25 ;
  reg [15:0] \$26 ;
  wire [16:0] \$3 ;
  wire \$4 ;
  wire \$5 ;
  wire \$6 ;
  wire \$7 ;
  wire \$8 ;
  wire \$9 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:70" *)
  wire [15:0] bram_address;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:175" *)
  input [31:0] bram_read_data;
  wire [31:0] bram_read_data;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:71" *)
  wire [31:0] bram_write_data;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:73" *)
  wire bram_write_enable;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:169" *)
  output busy;
  reg busy = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:215" *)
  reg [15:0] current_instruction = 16'h0000;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:63" *)
  reg [31:0] data_input = 32'd0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:161" *)
  input [31:0] \data_input$44 ;
  wire [31:0] \data_input$44 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:174" *)
  output [15:0] data_memory_address;
  wire [15:0] data_memory_address;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:175" *)
  wire [31:0] data_memory_read_data;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:71" *)
  output [31:0] data_memory_write_data;
  wire [31:0] data_memory_write_data;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:73" *)
  output data_memory_write_enable;
  wire data_memory_write_enable;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:64" *)
  output [31:0] data_output;
  wire [31:0] data_output;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:64" *)
  wire [31:0] \data_output$26 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:193" *)
  wire [15:0] destination_address;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:191" *)
  wire [7:0] destination_node;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:194" *)
  wire [3:0] instruction;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:171" *)
  output [15:0] instruction_memory_address;
  reg [15:0] instruction_memory_address;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:172" *)
  input [63:0] instruction_memory_read_data;
  wire [63:0] instruction_memory_read_data;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:196" *)
  reg opening_available;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:59" *)
  reg [15:0] read_bram_address_input = 16'h0000;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:157" *)
  input [15:0] \read_bram_address_input$40 ;
  wire [15:0] \read_bram_address_input$40 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:60" *)
  output [15:0] read_bram_address_output;
  wire [15:0] read_bram_address_output;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:60" *)
  wire [15:0] \read_bram_address_output$22 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:163" *)
  input read_complete_input;
  wire read_complete_input;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:65" *)
  reg \read_complete_input$45  = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:66" *)
  output read_complete_output;
  wire read_complete_output;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:66" *)
  wire \read_complete_output$28 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:55" *)
  reg [7:0] read_node_address_input = 8'h00;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:153" *)
  input [7:0] \read_node_address_input$36 ;
  wire [7:0] \read_node_address_input$36 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:56" *)
  output [7:0] read_node_address_output;
  wire [7:0] read_node_address_output;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:56" *)
  wire [7:0] \read_node_address_output$18 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:192" *)
  wire [15:0] source_address;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:190" *)
  wire [7:0] source_node;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:168" *)
  input start;
  wire start;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:273" *)
  input sync_100_clk;
  wire sync_100_clk;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:273" *)
  input sync_100_rst;
  wire sync_100_rst;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:61" *)
  reg [15:0] write_bram_address_input = 16'h0000;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:159" *)
  input [15:0] \write_bram_address_input$42 ;
  wire [15:0] \write_bram_address_input$42 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:62" *)
  output [15:0] write_bram_address_output;
  wire [15:0] write_bram_address_output;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:62" *)
  wire [15:0] \write_bram_address_output$24 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:165" *)
  input write_complete_input;
  wire write_complete_input;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:67" *)
  reg \write_complete_input$46  = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:68" *)
  output write_complete_output;
  wire write_complete_output;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:68" *)
  wire \write_complete_output$30 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:57" *)
  reg [7:0] write_node_address_input = 8'h00;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:155" *)
  input [7:0] \write_node_address_input$38 ;
  wire [7:0] \write_node_address_input$38 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:58" *)
  output [7:0] write_node_address_output;
  wire [7:0] write_node_address_output;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:58" *)
  wire [7:0] \write_node_address_output$20 ;
  assign \$1  = instruction_memory_read_data[51:48] != (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:217" *) 2'h2;
  assign \$2  = opening_available | (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:217" *) \$1 ;
  assign \$3  = current_instruction - (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:221" *) 1'h1;
  assign \$4  = ~ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:258" *) read_complete_input;
  assign \$5  = write_complete_input | (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:258" *) \$4 ;
  assign \$6  = ~ (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:258" *) read_complete_input;
  assign \$7  = write_complete_input | (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:258" *) \$6 ;
  assign \$8  = | (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:271" *) instruction_memory_read_data[51:48];
  assign \$9  = current_instruction != (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:271" *) 8'hff;
  assign \$10  = \$8  & (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:271" *) \$9 ;
  assign \$11  = start | (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:271" *) busy;
  assign \$12  = \$10  & (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:271" *) \$11 ;
  assign \$13  = instruction_memory_read_data[51:48] == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:274" *) 2'h2;
  assign \$14  = instruction_memory_read_data[51:48] == (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:289" *) 1'h1;
  assign \$15  = current_instruction + (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:286" *) 1'h1;
  assign \$16  = current_instruction + (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:291" *) 1'h1;
  assign \$17  = current_instruction + (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:305" *) 1'h1;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:55" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) read_node_address_input <= 8'h00;
    else read_node_address_input <= \$18 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:57" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) write_node_address_input <= 8'h00;
    else write_node_address_input <= \$19 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:59" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) read_bram_address_input <= 16'h0000;
    else read_bram_address_input <= \$20 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:61" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) write_bram_address_input <= 16'h0000;
    else write_bram_address_input <= \$21 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:63" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) data_input <= 32'd0;
    else data_input <= \$22 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:65" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) \read_complete_input$45  <= 1'h0;
    else \read_complete_input$45  <= \$23 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:67" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) \write_complete_input$46  <= 1'h0;
    else \write_complete_input$46  <= \$24 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:169" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) busy <= 1'h0;
    else busy <= \$25 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:215" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) current_instruction <= 16'h0000;
    else current_instruction <= \$26 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:199" *)
  \Controller.shift_dma.dma_node  dma_node (
    .bram_address(bram_address),
    .bram_read_data(bram_read_data),
    .bram_write_data(data_memory_write_data),
    .bram_write_enable(data_memory_write_enable),
    .data_input(data_input),
    .data_output(data_output),
    .read_bram_address_input(read_bram_address_input),
    .read_bram_address_output(read_bram_address_output),
    .read_complete_input(\read_complete_input$45 ),
    .read_complete_output(read_complete_output),
    .read_node_address_input(read_node_address_input),
    .read_node_address_output(read_node_address_output),
    .sync_100_clk(sync_100_clk),
    .sync_100_rst(sync_100_rst),
    .write_bram_address_input(write_bram_address_input),
    .write_bram_address_output(write_bram_address_output),
    .write_complete_input(\write_complete_input$46 ),
    .write_complete_output(write_complete_output),
    .write_node_address_input(write_node_address_input),
    .write_node_address_output(write_node_address_output)
  );
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$17 ) begin end
    (* full_case = 32'd1 *)
    if (\$2 ) begin
      instruction_memory_address = current_instruction;
    end else begin
      instruction_memory_address = \$3 [15:0];
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$17 ) begin end
    (* full_case = 32'd1 *)
    if (\$5 ) begin
      opening_available = 1'h1;
    end else begin
      opening_available = 1'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$17 ) begin end
    \$18  = read_node_address_input;
    (* full_case = 32'd1 *)
    if (\$7 ) begin
    end else begin
      \$18  = \read_node_address_input$36 ;
    end
    (* full_case = 32'd1 *)
    if (\$12 ) begin
      (* full_case = 32'd1 *)
      if (\$13 ) begin
        if (opening_available) begin
          \$18  = instruction_memory_read_data[7:0];
        end
      end else if (\$14 ) begin
        if (opening_available) begin
          \$18  = 8'h00;
        end
      end else begin
        if (opening_available) begin
          \$18  = 8'h00;
        end
      end
    end else begin
      if (opening_available) begin
        \$18  = 8'h00;
      end
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$17 ) begin end
    \$19  = write_node_address_input;
    (* full_case = 32'd1 *)
    if (\$7 ) begin
    end else begin
      \$19  = \write_node_address_input$38 ;
    end
    (* full_case = 32'd1 *)
    if (\$12 ) begin
      (* full_case = 32'd1 *)
      if (\$13 ) begin
        if (opening_available) begin
          \$19  = instruction_memory_read_data[15:8];
        end
      end else if (\$14 ) begin
        if (opening_available) begin
          \$19  = 8'h00;
        end
      end else begin
        if (opening_available) begin
          \$19  = 8'h00;
        end
      end
    end else begin
      if (opening_available) begin
        \$19  = 8'h00;
      end
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$17 ) begin end
    \$20  = read_bram_address_input;
    (* full_case = 32'd1 *)
    if (\$7 ) begin
    end else begin
      \$20  = \read_bram_address_input$40 ;
    end
    (* full_case = 32'd1 *)
    if (\$12 ) begin
      (* full_case = 32'd1 *)
      if (\$13 ) begin
        if (opening_available) begin
          \$20  = instruction_memory_read_data[31:16];
        end
      end else if (\$14 ) begin
        if (opening_available) begin
          \$20  = 16'h0000;
        end
      end else begin
        if (opening_available) begin
          \$20  = 16'h0000;
        end
      end
    end else begin
      if (opening_available) begin
        \$20  = 16'h0000;
      end
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$17 ) begin end
    \$21  = write_bram_address_input;
    (* full_case = 32'd1 *)
    if (\$7 ) begin
    end else begin
      \$21  = \write_bram_address_input$42 ;
    end
    (* full_case = 32'd1 *)
    if (\$12 ) begin
      (* full_case = 32'd1 *)
      if (\$13 ) begin
        if (opening_available) begin
          \$21  = instruction_memory_read_data[47:32];
        end
      end else if (\$14 ) begin
        if (opening_available) begin
          \$21  = 16'h0000;
        end
      end else begin
        if (opening_available) begin
          \$21  = 16'h0000;
        end
      end
    end else begin
      if (opening_available) begin
        \$21  = 16'h0000;
      end
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$17 ) begin end
    \$22  = data_input;
    (* full_case = 32'd1 *)
    if (\$7 ) begin
    end else begin
      \$22  = \data_input$44 ;
    end
    (* full_case = 32'd1 *)
    if (\$12 ) begin
      (* full_case = 32'd1 *)
      if (\$13 ) begin
        if (opening_available) begin
          \$22  = 32'd0;
        end
      end else if (\$14 ) begin
        if (opening_available) begin
          \$22  = 32'd0;
        end
      end else begin
        if (opening_available) begin
          \$22  = 32'd0;
        end
      end
    end else begin
      if (opening_available) begin
        \$22  = 32'd0;
      end
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$17 ) begin end
    \$23  = \read_complete_input$45 ;
    (* full_case = 32'd1 *)
    if (\$7 ) begin
    end else begin
      \$23  = read_complete_input;
    end
    (* full_case = 32'd1 *)
    if (\$12 ) begin
      (* full_case = 32'd1 *)
      if (\$13 ) begin
        if (opening_available) begin
          \$23  = 1'h0;
        end
      end else if (\$14 ) begin
        if (opening_available) begin
          \$23  = 1'h1;
        end
      end else begin
        if (opening_available) begin
          \$23  = 1'h1;
        end
      end
    end else begin
      if (opening_available) begin
        \$23  = 1'h1;
      end
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$17 ) begin end
    \$24  = \write_complete_input$46 ;
    (* full_case = 32'd1 *)
    if (\$7 ) begin
    end else begin
      \$24  = write_complete_input;
    end
    (* full_case = 32'd1 *)
    if (\$12 ) begin
      (* full_case = 32'd1 *)
      if (\$13 ) begin
        if (opening_available) begin
          \$24  = 1'h0;
        end
      end else if (\$14 ) begin
        if (opening_available) begin
          \$24  = 1'h1;
        end
      end else begin
        if (opening_available) begin
          \$24  = 1'h1;
        end
      end
    end else begin
      if (opening_available) begin
        \$24  = 1'h1;
      end
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$17 ) begin end
    (* full_case = 32'd1 *)
    if (\$12 ) begin
      \$25  = 1'h1;
    end else begin
      \$25  = 1'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$17 ) begin end
    \$26  = current_instruction;
    (* full_case = 32'd1 *)
    if (\$12 ) begin
      (* full_case = 32'd1 *)
      if (\$13 ) begin
        if (opening_available) begin
          \$26  = \$15 [15:0];
        end
      end else if (\$14 ) begin
        \$26  = \$16 [15:0];
      end else begin
        \$26  = \$17 [15:0];
      end
    end else begin
      if (start) begin
        \$26  = 16'h0000;
      end
    end
  end
  assign instruction = instruction_memory_read_data[51:48];
  assign source_node = instruction_memory_read_data[7:0];
  assign destination_node = instruction_memory_read_data[15:8];
  assign source_address = instruction_memory_read_data[31:16];
  assign destination_address = instruction_memory_read_data[47:32];
  assign bram_write_data = data_memory_write_data;
  assign bram_write_enable = data_memory_write_enable;
  assign data_memory_read_data = bram_read_data;
  assign \read_node_address_output$18  = read_node_address_output;
  assign \write_node_address_output$20  = write_node_address_output;
  assign \read_bram_address_output$22  = read_bram_address_output;
  assign \write_bram_address_output$24  = write_bram_address_output;
  assign \data_output$26  = data_output;
  assign \read_complete_output$28  = read_complete_output;
  assign \write_complete_output$30  = write_complete_output;
  assign data_memory_address = bram_address;
endmodule

(* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:80" *)
(* generator = "Amaranth" *)
module \Controller.shift_dma.dma_node (sync_100_rst, bram_read_data, read_node_address_input, write_node_address_input, read_bram_address_input, write_bram_address_input, data_input, read_complete_input, write_complete_input, write_bram_address_output, read_bram_address_output, write_node_address_output, read_node_address_output, write_complete_output, data_output, read_complete_output, bram_address, bram_write_data, bram_write_enable, sync_100_clk);
  reg \$auto$verilog_backend.cc:2352:dump_module$18  = 0;
  wire \$1 ;
  wire \$10 ;
  wire \$11 ;
  wire \$12 ;
  wire \$13 ;
  wire \$14 ;
  reg \$15 ;
  reg [31:0] \$16 ;
  reg \$17 ;
  reg \$18 ;
  wire \$2 ;
  wire \$3 ;
  wire \$4 ;
  wire \$5 ;
  wire \$6 ;
  wire \$7 ;
  wire \$8 ;
  wire \$9 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:70" *)
  output [15:0] bram_address;
  reg [15:0] bram_address;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:72" *)
  input [31:0] bram_read_data;
  wire [31:0] bram_read_data;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:71" *)
  output [31:0] bram_write_data;
  reg [31:0] bram_write_data;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:73" *)
  output bram_write_enable;
  reg bram_write_enable;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:89" *)
  reg [31:0] buf_data = 32'd0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:86" *)
  reg [15:0] buf_read_bram_address = 16'h0000;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:90" *)
  reg buf_read_complete = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:88" *)
  reg [7:0] buf_read_node_address = 8'h00;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:85" *)
  reg [15:0] buf_write_bram_address = 16'h0000;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:91" *)
  reg buf_write_complete = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:87" *)
  reg [7:0] buf_write_node_address = 8'h00;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:63" *)
  input [31:0] data_input;
  wire [31:0] data_input;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:64" *)
  output [31:0] data_output;
  reg [31:0] data_output = 32'd0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:59" *)
  input [15:0] read_bram_address_input;
  wire [15:0] read_bram_address_input;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:60" *)
  output [15:0] read_bram_address_output;
  reg [15:0] read_bram_address_output = 16'h0000;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:65" *)
  input read_complete_input;
  wire read_complete_input;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:66" *)
  output read_complete_output;
  reg read_complete_output = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:93" *)
  reg read_next = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:55" *)
  input [7:0] read_node_address_input;
  wire [7:0] read_node_address_input;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:56" *)
  output [7:0] read_node_address_output;
  reg [7:0] read_node_address_output = 8'h00;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:273" *)
  input sync_100_clk;
  wire sync_100_clk;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\controller.py:273" *)
  input sync_100_rst;
  wire sync_100_rst;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:61" *)
  input [15:0] write_bram_address_input;
  wire [15:0] write_bram_address_input;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:62" *)
  output [15:0] write_bram_address_output;
  reg [15:0] write_bram_address_output = 16'h0000;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:67" *)
  input write_complete_input;
  wire write_complete_input;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:68" *)
  output write_complete_output;
  reg write_complete_output = 1'h0;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:57" *)
  input [7:0] write_node_address_input;
  wire [7:0] write_node_address_input;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:58" *)
  output [7:0] write_node_address_output;
  reg [7:0] write_node_address_output = 8'h00;
  assign \$1  = ! (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:113" *) read_node_address_input;
  assign \$2  = ! (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:113" *) read_complete_input;
  assign \$3  = \$1  & (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:113" *) \$2 ;
  assign \$4  = ! (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:129" *) write_node_address_input;
  assign \$5  = \$4  & (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:129" *) read_complete_input;
  assign \$6  = ! (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:129" *) write_complete_input;
  assign \$7  = \$5  & (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:129" *) \$6 ;
  assign \$8  = ! (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:113" *) read_node_address_input;
  assign \$9  = ! (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:113" *) read_complete_input;
  assign \$10  = \$8  & (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:113" *) \$9 ;
  assign \$11  = ! (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:129" *) write_node_address_input;
  assign \$12  = \$11  & (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:129" *) read_complete_input;
  assign \$13  = ! (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:129" *) write_complete_input;
  assign \$14  = \$12  & (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:129" *) \$13 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:85" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_write_bram_address <= 16'h0000;
    else buf_write_bram_address <= write_bram_address_input;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:86" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_read_bram_address <= 16'h0000;
    else buf_read_bram_address <= read_bram_address_input;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:87" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_write_node_address <= 8'h00;
    else buf_write_node_address <= write_node_address_input;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:88" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_read_node_address <= 8'h00;
    else buf_read_node_address <= read_node_address_input;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:62" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) write_bram_address_output <= 16'h0000;
    else write_bram_address_output <= buf_write_bram_address;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:60" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) read_bram_address_output <= 16'h0000;
    else read_bram_address_output <= buf_read_bram_address;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:58" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) write_node_address_output <= 8'h00;
    else write_node_address_output <= buf_write_node_address;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:56" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) read_node_address_output <= 8'h00;
    else read_node_address_output <= buf_read_node_address;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:89" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_data <= 32'd0;
    else buf_data <= data_input;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:90" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_read_complete <= 1'h0;
    else buf_read_complete <= read_complete_input;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:68" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) write_complete_output <= 1'h0;
    else write_complete_output <= buf_write_complete;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:93" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) read_next <= 1'h0;
    else read_next <= \$15 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:64" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) data_output <= 32'd0;
    else data_output <= \$16 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:66" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) read_complete_output <= 1'h0;
    else read_complete_output <= \$17 ;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\shift_dma.py:91" *)
  always @(posedge sync_100_clk, posedge sync_100_rst)
    if (sync_100_rst) buf_write_complete <= 1'h0;
    else buf_write_complete <= \$18 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$18 ) begin end
    \$15  = read_next;
    if (\$3 ) begin
      \$15  = 1'h1;
    end else if (read_next) begin
      \$15  = 1'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$18 ) begin end
    (* full_case = 32'd1 *)
    if (read_next) begin
      \$16  = bram_read_data;
    end else begin
      \$16  = buf_data;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$18 ) begin end
    (* full_case = 32'd1 *)
    if (read_next) begin
      \$17  = 1'h1;
    end else begin
      \$17  = buf_read_complete;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$18 ) begin end
    (* full_case = 32'd1 *)
    if (\$7 ) begin
      \$18  = 1'h1;
    end else begin
      \$18  = write_complete_input;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$18 ) begin end
    bram_address = 16'h0000;
    if (\$10 ) begin
      bram_address = read_bram_address_input;
    end
    if (\$14 ) begin
      bram_address = write_bram_address_input;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$18 ) begin end
    bram_write_data = 32'd0;
    if (\$14 ) begin
      bram_write_data = data_input;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$18 ) begin end
    (* full_case = 32'd1 *)
    if (\$14 ) begin
      bram_write_enable = 1'h1;
    end else begin
      bram_write_enable = 1'h0;
    end
  end
endmodule
