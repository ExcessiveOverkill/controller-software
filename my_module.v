/* Generated by Amaranth Yosys 0.40 (PyPI ver 0.40.0.0.post99, git sha1 a1bb0255d) */

(* top =  1  *)
(* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\axi.py:80" *)
(* generator = "Amaranth" *)
module my_module(din, we, clk, rst, addr, dout, en);
  wire \$1 ;
  wire \$2 ;
  wire \$3 ;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_CTRL ADDR" *)
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\axi.py:60" *)
  input [15:0] addr;
  wire [15:0] addr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_CTRL CLK" *)
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\axi.py:83" *)
  input clk;
  wire clk;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_CTRL CLK" *)
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\axi.py:83" *)
  wire \clk$7 ;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_CTRL DIN" *)
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\axi.py:93" *)
  input [31:0] din;
  wire [31:0] din;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_CTRL DOUT" *)
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\axi.py:92" *)
  output [31:0] dout;
  wire [31:0] dout;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_CTRL EN" *)
  (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME BRAM_CTRL, MEM_SIZE 8192, MEM_WIDTH 32, READ_WRITE_MODE READ_WRITE" *)
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\axi.py:92" *)
  input en;
  wire en;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\axi.py:92" *)
  wire [7:0] mem_r_addr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_CTRL DOUT" *)
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\axi.py:92" *)
  wire [31:0] mem_r_data;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_CTRL EN" *)
  (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME BRAM_CTRL, MEM_SIZE 8192, MEM_WIDTH 32, READ_WRITE_MODE READ_WRITE" *)
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\axi.py:92" *)
  wire mem_r_en;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\axi.py:93" *)
  wire [7:0] mem_w_addr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_CTRL DIN" *)
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\axi.py:93" *)
  wire [31:0] mem_w_data;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\axi.py:93" *)
  wire mem_w_en;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_CTRL RST" *)
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\axi.py:83" *)
  input rst;
  wire rst;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_CTRL RST" *)
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\axi.py:83" *)
  wire \rst$8 ;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_CTRL WE" *)
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\axi.py:56" *)
  input [3:0] we;
  wire [3:0] we;
  (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\axi.py:91" *)
  reg [31:0] mem_rdport [255:0];
  initial begin
    mem_rdport[0] = 32'd0;
    mem_rdport[1] = 32'd0;
    mem_rdport[2] = 32'd0;
    mem_rdport[3] = 32'd0;
    mem_rdport[4] = 32'd0;
    mem_rdport[5] = 32'd0;
    mem_rdport[6] = 32'd0;
    mem_rdport[7] = 32'd0;
    mem_rdport[8] = 32'd0;
    mem_rdport[9] = 32'd0;
    mem_rdport[10] = 32'd0;
    mem_rdport[11] = 32'd0;
    mem_rdport[12] = 32'd0;
    mem_rdport[13] = 32'd0;
    mem_rdport[14] = 32'd0;
    mem_rdport[15] = 32'd0;
    mem_rdport[16] = 32'd0;
    mem_rdport[17] = 32'd0;
    mem_rdport[18] = 32'd0;
    mem_rdport[19] = 32'd0;
    mem_rdport[20] = 32'd0;
    mem_rdport[21] = 32'd0;
    mem_rdport[22] = 32'd0;
    mem_rdport[23] = 32'd0;
    mem_rdport[24] = 32'd0;
    mem_rdport[25] = 32'd0;
    mem_rdport[26] = 32'd0;
    mem_rdport[27] = 32'd0;
    mem_rdport[28] = 32'd0;
    mem_rdport[29] = 32'd0;
    mem_rdport[30] = 32'd0;
    mem_rdport[31] = 32'd0;
    mem_rdport[32] = 32'd0;
    mem_rdport[33] = 32'd0;
    mem_rdport[34] = 32'd0;
    mem_rdport[35] = 32'd0;
    mem_rdport[36] = 32'd0;
    mem_rdport[37] = 32'd0;
    mem_rdport[38] = 32'd0;
    mem_rdport[39] = 32'd0;
    mem_rdport[40] = 32'd0;
    mem_rdport[41] = 32'd0;
    mem_rdport[42] = 32'd0;
    mem_rdport[43] = 32'd0;
    mem_rdport[44] = 32'd0;
    mem_rdport[45] = 32'd0;
    mem_rdport[46] = 32'd0;
    mem_rdport[47] = 32'd0;
    mem_rdport[48] = 32'd0;
    mem_rdport[49] = 32'd0;
    mem_rdport[50] = 32'd0;
    mem_rdport[51] = 32'd0;
    mem_rdport[52] = 32'd0;
    mem_rdport[53] = 32'd0;
    mem_rdport[54] = 32'd0;
    mem_rdport[55] = 32'd0;
    mem_rdport[56] = 32'd0;
    mem_rdport[57] = 32'd0;
    mem_rdport[58] = 32'd0;
    mem_rdport[59] = 32'd0;
    mem_rdport[60] = 32'd0;
    mem_rdport[61] = 32'd0;
    mem_rdport[62] = 32'd0;
    mem_rdport[63] = 32'd0;
    mem_rdport[64] = 32'd0;
    mem_rdport[65] = 32'd0;
    mem_rdport[66] = 32'd0;
    mem_rdport[67] = 32'd0;
    mem_rdport[68] = 32'd0;
    mem_rdport[69] = 32'd0;
    mem_rdport[70] = 32'd0;
    mem_rdport[71] = 32'd0;
    mem_rdport[72] = 32'd0;
    mem_rdport[73] = 32'd0;
    mem_rdport[74] = 32'd0;
    mem_rdport[75] = 32'd0;
    mem_rdport[76] = 32'd0;
    mem_rdport[77] = 32'd0;
    mem_rdport[78] = 32'd0;
    mem_rdport[79] = 32'd0;
    mem_rdport[80] = 32'd0;
    mem_rdport[81] = 32'd0;
    mem_rdport[82] = 32'd0;
    mem_rdport[83] = 32'd0;
    mem_rdport[84] = 32'd0;
    mem_rdport[85] = 32'd0;
    mem_rdport[86] = 32'd0;
    mem_rdport[87] = 32'd0;
    mem_rdport[88] = 32'd0;
    mem_rdport[89] = 32'd0;
    mem_rdport[90] = 32'd0;
    mem_rdport[91] = 32'd0;
    mem_rdport[92] = 32'd0;
    mem_rdport[93] = 32'd0;
    mem_rdport[94] = 32'd0;
    mem_rdport[95] = 32'd0;
    mem_rdport[96] = 32'd0;
    mem_rdport[97] = 32'd0;
    mem_rdport[98] = 32'd0;
    mem_rdport[99] = 32'd0;
    mem_rdport[100] = 32'd0;
    mem_rdport[101] = 32'd0;
    mem_rdport[102] = 32'd0;
    mem_rdport[103] = 32'd0;
    mem_rdport[104] = 32'd0;
    mem_rdport[105] = 32'd0;
    mem_rdport[106] = 32'd0;
    mem_rdport[107] = 32'd0;
    mem_rdport[108] = 32'd0;
    mem_rdport[109] = 32'd0;
    mem_rdport[110] = 32'd0;
    mem_rdport[111] = 32'd0;
    mem_rdport[112] = 32'd0;
    mem_rdport[113] = 32'd0;
    mem_rdport[114] = 32'd0;
    mem_rdport[115] = 32'd0;
    mem_rdport[116] = 32'd0;
    mem_rdport[117] = 32'd0;
    mem_rdport[118] = 32'd0;
    mem_rdport[119] = 32'd0;
    mem_rdport[120] = 32'd0;
    mem_rdport[121] = 32'd0;
    mem_rdport[122] = 32'd0;
    mem_rdport[123] = 32'd0;
    mem_rdport[124] = 32'd0;
    mem_rdport[125] = 32'd0;
    mem_rdport[126] = 32'd0;
    mem_rdport[127] = 32'd0;
    mem_rdport[128] = 32'd0;
    mem_rdport[129] = 32'd0;
    mem_rdport[130] = 32'd0;
    mem_rdport[131] = 32'd0;
    mem_rdport[132] = 32'd0;
    mem_rdport[133] = 32'd0;
    mem_rdport[134] = 32'd0;
    mem_rdport[135] = 32'd0;
    mem_rdport[136] = 32'd0;
    mem_rdport[137] = 32'd0;
    mem_rdport[138] = 32'd0;
    mem_rdport[139] = 32'd0;
    mem_rdport[140] = 32'd0;
    mem_rdport[141] = 32'd0;
    mem_rdport[142] = 32'd0;
    mem_rdport[143] = 32'd0;
    mem_rdport[144] = 32'd0;
    mem_rdport[145] = 32'd0;
    mem_rdport[146] = 32'd0;
    mem_rdport[147] = 32'd0;
    mem_rdport[148] = 32'd0;
    mem_rdport[149] = 32'd0;
    mem_rdport[150] = 32'd0;
    mem_rdport[151] = 32'd0;
    mem_rdport[152] = 32'd0;
    mem_rdport[153] = 32'd0;
    mem_rdport[154] = 32'd0;
    mem_rdport[155] = 32'd0;
    mem_rdport[156] = 32'd0;
    mem_rdport[157] = 32'd0;
    mem_rdport[158] = 32'd0;
    mem_rdport[159] = 32'd0;
    mem_rdport[160] = 32'd0;
    mem_rdport[161] = 32'd0;
    mem_rdport[162] = 32'd0;
    mem_rdport[163] = 32'd0;
    mem_rdport[164] = 32'd0;
    mem_rdport[165] = 32'd0;
    mem_rdport[166] = 32'd0;
    mem_rdport[167] = 32'd0;
    mem_rdport[168] = 32'd0;
    mem_rdport[169] = 32'd0;
    mem_rdport[170] = 32'd0;
    mem_rdport[171] = 32'd0;
    mem_rdport[172] = 32'd0;
    mem_rdport[173] = 32'd0;
    mem_rdport[174] = 32'd0;
    mem_rdport[175] = 32'd0;
    mem_rdport[176] = 32'd0;
    mem_rdport[177] = 32'd0;
    mem_rdport[178] = 32'd0;
    mem_rdport[179] = 32'd0;
    mem_rdport[180] = 32'd0;
    mem_rdport[181] = 32'd0;
    mem_rdport[182] = 32'd0;
    mem_rdport[183] = 32'd0;
    mem_rdport[184] = 32'd0;
    mem_rdport[185] = 32'd0;
    mem_rdport[186] = 32'd0;
    mem_rdport[187] = 32'd0;
    mem_rdport[188] = 32'd0;
    mem_rdport[189] = 32'd0;
    mem_rdport[190] = 32'd0;
    mem_rdport[191] = 32'd0;
    mem_rdport[192] = 32'd0;
    mem_rdport[193] = 32'd0;
    mem_rdport[194] = 32'd0;
    mem_rdport[195] = 32'd0;
    mem_rdport[196] = 32'd0;
    mem_rdport[197] = 32'd0;
    mem_rdport[198] = 32'd0;
    mem_rdport[199] = 32'd0;
    mem_rdport[200] = 32'd0;
    mem_rdport[201] = 32'd0;
    mem_rdport[202] = 32'd0;
    mem_rdport[203] = 32'd0;
    mem_rdport[204] = 32'd0;
    mem_rdport[205] = 32'd0;
    mem_rdport[206] = 32'd0;
    mem_rdport[207] = 32'd0;
    mem_rdport[208] = 32'd0;
    mem_rdport[209] = 32'd0;
    mem_rdport[210] = 32'd0;
    mem_rdport[211] = 32'd0;
    mem_rdport[212] = 32'd0;
    mem_rdport[213] = 32'd0;
    mem_rdport[214] = 32'd0;
    mem_rdport[215] = 32'd0;
    mem_rdport[216] = 32'd0;
    mem_rdport[217] = 32'd0;
    mem_rdport[218] = 32'd0;
    mem_rdport[219] = 32'd0;
    mem_rdport[220] = 32'd0;
    mem_rdport[221] = 32'd0;
    mem_rdport[222] = 32'd0;
    mem_rdport[223] = 32'd0;
    mem_rdport[224] = 32'd0;
    mem_rdport[225] = 32'd0;
    mem_rdport[226] = 32'd0;
    mem_rdport[227] = 32'd0;
    mem_rdport[228] = 32'd0;
    mem_rdport[229] = 32'd0;
    mem_rdport[230] = 32'd0;
    mem_rdport[231] = 32'd0;
    mem_rdport[232] = 32'd0;
    mem_rdport[233] = 32'd0;
    mem_rdport[234] = 32'd0;
    mem_rdport[235] = 32'd0;
    mem_rdport[236] = 32'd0;
    mem_rdport[237] = 32'd0;
    mem_rdport[238] = 32'd0;
    mem_rdport[239] = 32'd0;
    mem_rdport[240] = 32'd0;
    mem_rdport[241] = 32'd0;
    mem_rdport[242] = 32'd0;
    mem_rdport[243] = 32'd0;
    mem_rdport[244] = 32'd0;
    mem_rdport[245] = 32'd0;
    mem_rdport[246] = 32'd0;
    mem_rdport[247] = 32'd0;
    mem_rdport[248] = 32'd0;
    mem_rdport[249] = 32'd0;
    mem_rdport[250] = 32'd0;
    mem_rdport[251] = 32'd0;
    mem_rdport[252] = 32'd0;
    mem_rdport[253] = 32'd0;
    mem_rdport[254] = 32'd0;
    mem_rdport[255] = 32'd0;
  end
  always @(posedge clk) begin
    if (mem_w_en)
      mem_rdport[addr[7:0]] <= din;
  end
  reg [31:0] _0_;
  always @(posedge clk) begin
    if (en) begin
      _0_ <= mem_rdport[addr[7:0]];
      if (mem_w_en)
        _0_ <= din;
    end
  end
  assign dout = _0_;
  assign \$1  = | (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\axi.py:100" *) we;
  assign \$2  = | (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\axi.py:103" *) we;
  assign \$3  = en & (* src = "c:\\Users\\voids\\Documents\\GitHub\\controller-software\\controller-firmware\\python\\src\\axi.py:103" *) \$2 ;
  assign \clk$7  = clk;
  assign \rst$8  = rst;
  assign mem_r_addr = addr[7:0];
  assign mem_r_data = dout;
  assign mem_w_addr = addr[7:0];
  assign mem_w_data = din;
  assign mem_r_en = en;
  assign mem_w_en = \$3 ;
endmodule
